{
  "configurations" : [
    {
      "nifi-registry-authorizers-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<!--\n    This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order\n    to use a specific authorizer it must be configured here and its identifier must be specified in the nifi.properties file.\n    If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.\n    This file allows for configuration of them, but they must be configured in order:\n\n    ...\n    all userGroupProviders\n    all accessPolicyProviders\n    all Authorizers\n    ...\n-->\n<authorizers>\n\n    <!--\n        The FileUserGroupProvider will provide support for managing users and groups which is backed by a file\n        on the local file system.\n\n        - Users File - The file where the FileUserGroupProvider will store users and groups.\n\n        - Initial User Identity [unique key] - The identity of a users and systems to seed the Users File. The name of\n            each property must be unique, for example: \"Initial User Identity A\", \"Initial User Identity B\",\n            \"Initial User Identity C\" or \"Initial User Identity 1\", \"Initial User Identity 2\", \"Initial User Identity 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities,\n            so the values should be the unmapped identities (i.e. full DN from a certificate).\n    -->\n    <userGroupProvider>\n        <identifier>file-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.file.FileUserGroupProvider</class>\n        <property name=\"Users File\">{{nifi_registry_internal_config_dir}}/users.xml</property>\n        <property name=\"Initial User Identity 0\">{{nifi_registry_initial_admin_id}}</property>\n        {{nifi_registry_ssl_config_content | replace(\"NiFi\",\"Initial User\")}}\n    </userGroupProvider>\n\n    <!--\n        The LdapUserGroupProvider will retrieve users and groups from an LDAP server. The users and groups\n        are not configurable.\n\n        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.\n\n        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n        'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using LDAPS or START_TLS.\n        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n        'Page Size' - Sets the page size when retrieving users and groups. If not specified, no paging is performed.\n        'Sync Interval' - Duration of time between syncing users and groups. (i.e. 30 mins).\n\n        'User Search Base' - Base DN for searching for users (i.e. ou=users,o=nifi). Required to search users.\n        'User Object Class' - Object class for identifying users (i.e. person). Required if searching users.\n        'User Search Scope' - Search scope for searching users (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching users.\n        'User Search Filter' - Filter for searching for users against the 'User Search Base' (i.e. (memberof=cn=team1,ou=groups,o=nifi) ). Optional.\n        'User Identity Attribute' - Attribute to use to extract user identity (i.e. cn). Optional. If not set, the entire DN is used.\n        'User Group Name Attribute' - Attribute to use to define group membership (i.e. memberof). Optional. If not set\n            group membership will not be calculated through the users. Will rely on group membership being defined\n            through 'Group Member Attribute' if set.\n        'User Group Name Attribute - Referenced Group Attribute' - If blank, the value of the attribute defined in 'User Group Name Attribute'\n            is expected to be the full dn of the group. If not blank, this property will define the attribute of the group ldap entry that\n            the value of the attribute defined in 'User Group Name Attribute' is referencing (i.e. name). Use of this property requires that\n            'Group Search Base' is also configured.\n\n        'Group Search Base' - Base DN for searching for groups (i.e. ou=groups,o=nifi). Required to search groups.\n        'Group Object Class' - Object class for identifying groups (i.e. groupOfNames). Required if searching groups.\n        'Group Search Scope' - Search scope for searching groups (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching groups.\n        'Group Search Filter' - Filter for searching for groups against the 'Group Search Base'. Optional.\n        'Group Name Attribute' - Attribute to use to extract group name (i.e. cn). Optional. If not set, the entire DN is used.\n        'Group Member Attribute' - Attribute to use to define group membership (i.e. member). Optional. If not set\n            group membership will not be calculated through the groups. Will rely on group member being defined\n            through 'User Group Name Attribute' if set.\n        'Group Member Attribute - Referenced User Attribute' - If blank, the value of the attribute defined in 'Group Member Attribute'\n            is expected to be the full dn of the user. If not blank, this property will define the attribute of the user ldap entry that\n            the value of the attribute defined in 'Group Member Attribute' is referencing (i.e. uid). Use of this property requires that\n            'User Search Base' is also configured. (i.e. member: cn=User 1,ou=users,o=nifi-registry vs. memberUid: user1)\n\n        NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities.\n            Group names are not mapped.\n    -->\n    <!-- To enable the ldap-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>ldap-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.ldap.tenants.LdapUserGroupProvider</class>\n        <property name=\"Authentication Strategy\">START_TLS</property>\n\n        <property name=\"Manager DN\"></property>\n        <property name=\"Manager Password\"></property>\n\n        <property name=\"TLS - Keystore\"></property>\n        <property name=\"TLS - Keystore Password\"></property>\n        <property name=\"TLS - Keystore Type\"></property>\n        <property name=\"TLS - Truststore\"></property>\n        <property name=\"TLS - Truststore Password\"></property>\n        <property name=\"TLS - Truststore Type\"></property>\n        <property name=\"TLS - Client Auth\"></property>\n        <property name=\"TLS - Protocol\"></property>\n        <property name=\"TLS - Shutdown Gracefully\"></property>\n\n        <property name=\"Referral Strategy\">FOLLOW</property>\n        <property name=\"Connect Timeout\">10 secs</property>\n        <property name=\"Read Timeout\">10 secs</property>\n\n        <property name=\"Url\"></property>\n        <property name=\"Page Size\"></property>\n        <property name=\"Sync Interval\">30 mins</property>\n\n        <property name=\"User Search Base\"></property>\n        <property name=\"User Object Class\">person</property>\n        <property name=\"User Search Scope\">ONE_LEVEL</property>\n        <property name=\"User Search Filter\"></property>\n        <property name=\"User Identity Attribute\"></property>\n        <property name=\"User Group Name Attribute\"></property>\n        <property name=\"User Group Name Attribute - Referenced Group Attribute\"></property>\n\n        <property name=\"Group Search Base\"></property>\n        <property name=\"Group Object Class\">group</property>\n        <property name=\"Group Search Scope\">ONE_LEVEL</property>\n        <property name=\"Group Search Filter\"></property>\n        <property name=\"Group Name Attribute\"></property>\n        <property name=\"Group Member Attribute\"></property>\n        <property name=\"Group Member Attribute - Referenced User Attribute\"></property>\n    </userGroupProvider>\n    To enable the ldap-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The CompositeUserGroupProvider will provide support for retrieving users and groups from multiple sources.\n\n        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of\n            each property must be unique, for example: \"User Group Provider A\", \"User Group Provider B\",\n            \"User Group Provider C\" or \"User Group Provider 1\", \"User Group Provider 2\", \"User Group Provider 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior\n            would need to be applied by the base implementation.\n    -->\n    <!-- To enable the composite-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>composite-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.CompositeUserGroupProvider</class>\n        <property name=\"User Group Provider 1\"></property>\n    </userGroupProvider>\n    To enable the composite-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The CompositeConfigurableUserGroupProvider will provide support for retrieving users and groups from multiple sources.\n        Additionally, a single configurable user group provider is required. Users from the configurable user group provider\n        are configurable, however users loaded from one of the User Group Provider [unique key] will not be.\n\n        - Configurable User Group Provider - A configurable user group provider.\n\n        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of\n            each property must be unique, for example: \"User Group Provider A\", \"User Group Provider B\",\n            \"User Group Provider C\" or \"User Group Provider 1\", \"User Group Provider 2\", \"User Group Provider 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior\n            would need to be applied by the base implementation.\n    -->\n    <!-- To enable the composite-configurable-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>composite-configurable-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.CompositeConfigurableUserGroupProvider</class>\n        <property name=\"Configurable User Group Provider\">file-user-group-provider</property>\n        <property name=\"User Group Provider 1\"></property>\n    </userGroupProvider>\n    To enable the composite-configurable-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The FileAccessPolicyProvider will provide support for managing access policies which is backed by a file\n        on the local file system.\n\n        - User Group Provider - The identifier for an User Group Provider defined above that will be used to access\n            users and groups for use in the managed access policies.\n\n        - Authorizations File - The file where the FileAccessPolicyProvider will store policies.\n\n        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and\n            given the ability to create additional users, groups, and policies. The value of this property could be\n            a DN when using certificates or LDAP. This property will only be used when there\n            are no other policies defined.\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,\n            so the value should be the unmapped identity. This identity must be found in the configured User Group Provider.\n\n        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node\n            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.\n            The name of each property must be unique, for example for a three node cluster:\n            \"Node Identity A\", \"Node Identity B\", \"Node Identity C\" or \"Node Identity 1\", \"Node Identity 2\", \"Node Identity 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,\n            so the values should be the unmapped identities (i.e. full DN from a certificate). This identity must be found\n            in the configured User Group Provider.\n    -->\n    <accessPolicyProvider>\n        <identifier>file-access-policy-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.file.FileAccessPolicyProvider</class>\n        <property name=\"User Group Provider\">file-user-group-provider</property>\n        <property name=\"Authorizations File\">{{nifi_registry_internal_config_dir}}/authorizations.xml</property>\n        <property name=\"Initial Admin Identity\">{{nifi_registry_initial_admin_id}}</property>\n        {{nifi_registry_ssl_config_content}}\n    </accessPolicyProvider>\n\n    <!--\n        The StandardManagedAuthorizer. This authorizer implementation must be configured with the\n        Access Policy Provider which it will use to access and manage users, groups, and policies.\n        These users, groups, and policies will be used to make all access decisions during authorization\n        requests.\n\n        - Access Policy Provider - The identifier for an Access Policy Provider defined above.\n    -->\n    <authorizer>\n        <identifier>managed-authorizer</identifier>\n        <class>org.apache.nifi.registry.security.authorization.StandardManagedAuthorizer</class>\n        <property name=\"Access Policy Provider\">file-access-policy-provider</property>\n    </authorizer>\n\n</authorizers>"
        }
      }
    },
    {
      "streamline-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "STREAMLINE_SERVER:streamline_server",
          "content" : "\n{\n  \"input\": [\n    {\n      \"type\": \"streamline_server\",\n      \"rowtype\": \"service\",\n      \"path\": \"{{default('/configurations/streamline-env/streamline_log_dir', '/var/log/streamline')}}/streamline.log\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"filter\": \"grok\",\n      \"conditions\": {\n        \"fields\": {\n          \"type\": [\n            \"streamline_server\"\n          ]\n        }\n      },\n    \"multiline_pattern\":\"^(%{LOGLEVEL:level}%{SPACE}\\\\[%{TIME:logtime}\\\\])\",\n    \"message_pattern\":\"(?m)^%{LOGLEVEL:level}%{SPACE}\\\\[%{TIME:logtime}\\\\]%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{JAVACLASS:logger_name}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\": {\n        \"logtime\": {\n          \"map_date\": {\n            \"target_date_pattern\": \"yyyy-MM-dd HH:mm:ss,SSS\",\n            \"src_date_pattern\" :\"HH:mm:ss.SSS\"\n          }\n        }\n      }\n    }\n  ]\n}",
          "service_name" : "Streamline"
        }
      }
    },
    {
      "streamline-env" : {
        "properties_attributes" : { },
        "properties" : {
          "streamline_pid_dir" : "/var/run/streamline",
          "streamline_user_nproc_limit" : "65536",
          "streamline_principal_name" : "streamline",
          "streamline_user" : "streamline",
          "streamline_user_nofile_limit" : "65536",
          "streamline_log_dir" : "/var/log/streamline",
          "content" : "\n#!/bin/bash\n\n# Set STREAMLINE specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{streamline_pid_dir}}\nexport LOG_DIR={{streamline_log_dir}}\nexport STREAMLINE_KERBEROS_PARAMS={{streamline_kerberos_params}}"
        }
      }
    },
    {
      "ranger-nifi-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "zoo.cfg" : {
        "properties_attributes" : { },
        "properties" : {
          "autopurge.purgeInterval" : "24",
          "dataDir" : "/hadoop/zookeeper",
          "autopurge.snapRetainCount" : "30",
          "clientPort" : "2181",
          "initLimit" : "10",
          "tickTime" : "3000",
          "syncLimit" : "5"
        }
      }
    },
    {
      "ams-hbase-site" : {
        "properties_attributes" : {
          "final" : {
            "hbase.zookeeper.quorum" : "true"
          }
        },
        "properties" : {
          "hfile.block.cache.size" : "0.3",
          "phoenix.query.spoolThresholdBytes" : "20971520",
          "hbase.zookeeper.property.dataDir" : "${hbase.tmp.dir}/zookeeper",
          "hbase.regionserver.thread.compaction.large" : "2",
          "hbase.master.port" : "61300",
          "zookeeper.session.timeout.localHBaseCluster" : "120000",
          "phoenix.query.keepAliveMs" : "300000",
          "hbase.local.dir" : "${hbase.tmp.dir}/local",
          "phoenix.query.timeoutMs" : "300000",
          "hbase.regionserver.thread.compaction.small" : "3",
          "hbase.zookeeper.quorum" : "{{zookeeper_quorum_hosts}}",
          "hbase.client.scanner.timeout.period" : "300000",
          "hbase.regionserver.info.port" : "61330",
          "phoenix.query.rowKeyOrderSaltedTable" : "true",
          "phoenix.mutate.batchSize" : "10000",
          "zookeeper.znode.parent" : "/ams-hbase-unsecure",
          "hbase.master.info.port" : "61310",
          "hbase.rootdir" : "file:///var/lib/ambari-metrics-collector/hbase",
          "hbase.cluster.distributed" : "false",
          "hbase.hregion.majorcompaction" : "0",
          "hbase.hstore.flusher.count" : "2",
          "hbase.master.normalizer.class" : "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
          "hbase.snapshot.enabled" : "false",
          "phoenix.spool.directory" : "${hbase.tmp.dir}/phoenix-spool",
          "phoenix.coprocessor.maxMetaDataCacheSize" : "20480000",
          "hbase.zookeeper.property.tickTime" : "6000",
          "hbase.zookeeper.leaderport" : "61388",
          "phoenix.sequence.saltBuckets" : "2",
          "hbase.hstore.blockingStoreFiles" : "200",
          "zookeeper.session.timeout" : "120000",
          "phoenix.coprocessor.maxServerCacheTimeToLiveMs" : "60000",
          "hbase.master.info.bindAddress" : "0.0.0.0",
          "hbase.regionserver.global.memstore.lowerLimit" : "0.3",
          "dfs.client.read.shortcircuit" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "15",
          "hbase.hregion.memstore.flush.size" : "134217728",
          "hbase.hregion.max.filesize" : "4294967296",
          "phoenix.groupby.maxCacheSize" : "307200000",
          "hbase.master.wait.on.regionservers.mintostart" : "1",
          "hbase.regionserver.global.memstore.upperLimit" : "0.35",
          "hbase.normalizer.period" : "600000",
          "hbase.tmp.dir" : "/var/lib/ambari-metrics-collector/hbase-tmp",
          "hbase.client.scanner.caching" : "10000",
          "hbase.replication" : "false",
          "hbase.rpc.timeout" : "300000",
          "hbase.zookeeper.peerport" : "61288",
          "hbase.regionserver.port" : "61320",
          "hbase.zookeeper.property.clientPort" : "{{zookeeper_clientPort}}",
          "hbase.hregion.memstore.block.multiplier" : "4",
          "hbase.normalizer.enabled" : "false"
        }
      }
    },
    {
      "zookeeper-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "zookeeper_log_max_backup_size" : "10",
          "zookeeper_log_number_of_backup_files" : "10",
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
        }
      }
    },
    {
      "kafka_jaas_conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n/**\n* Example of SASL/PLAIN Configuration\n*\n* KafkaServer {\n*   org.apache.kafka.common.security.plain.PlainLoginModule required\n*   username=\"admin\"\n*   password=\"admin-secret\"\n*   user_admin=\"admin-secret\"\n*   user_alice=\"alice-secret\";\n*   };\n*\n* Example of SASL/SCRAM\n*\n* KafkaServer {\n*   org.apache.kafka.common.security.scram.ScramLoginModule required\n*   username=\"admin\"\n*   password=\"admin-secret\"\n*   };\n*\n* Example of Enabling multiple SASL mechanisms in a broker:\n*\n*   KafkaServer {\n*\n*    com.sun.security.auth.module.Krb5LoginModule required\n*    useKeyTab=true\n*    storeKey=true\n*    keyTab=\"/etc/security/keytabs/kafka_server.keytab\"\n*    principal=\"kafka/kafka1.hostname.com@EXAMPLE.COM\";\n*\n*    org.apache.kafka.common.security.plain.PlainLoginModule required\n*    username=\"admin\"\n*    password=\"admin-secret\"\n*    user_admin=\"admin-secret\"\n*    user_alice=\"alice-secret\";\n*\n*    org.apache.kafka.common.security.scram.ScramLoginModule required\n*    username=\"scram-admin\"\n*    password=\"scram-admin-secret\";\n*    };\n*\n**/\n\n{% if kerberos_security_enabled %}\n\n    KafkaServer {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"{{kafka_bare_jaas_principal}}\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n    KafkaClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useTicketCache=true\n    renewTicket=true\n    serviceName=\"{{kafka_bare_jaas_principal}}\";\n    };\n    Client {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"zookeeper\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n    com.sun.security.jgss.krb5.initiate {\n    com.sun.security.auth.module.Krb5LoginModule required\n    renewTGT=false\n    doNotPrompt=true\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"{{kafka_bare_jaas_principal}}\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n\n{% endif %}"
        }
      }
    },
    {
      "infra-solr-client-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "infra_client_log_maxfilesize" : "80",
          "infra_client_log_maxbackupindex" : "60",
          "content" : "# Copyright 2011 The Apache Software Foundation\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nlog4j.rootLogger=INFO,file,stdout,stderr\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{solr_client_log|default('/var/log/ambari-infra-solr-client/solr-client.log')}}\nlog4j.appender.file.MaxFileSize={{solr_client_log_maxfilesize}}MB\nlog4j.appender.file.MaxBackupIndex={{solr_client_log_maxbackupindex}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{DATE} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Threshold=INFO\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%m%n\n\nlog4j.appender.stderr=org.apache.log4j.ConsoleAppender\nlog4j.appender.stderr.Threshold=ERROR\nlog4j.appender.stderr.Target=System.err\nlog4j.appender.stderr.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stderr.layout.ConversionPattern=%m%n",
          "infra_solr_client_log_dir" : "/var/log/ambari-infra-solr-client"
        }
      }
    },
    {
      "nifi-login-identity-providers-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <!--\n            This file lists the login identity providers to use when running securely. In order\n            to use a specific provider it must be configured here and it's identifier\n            must be specified in the nifi.properties file.\n            -->\n            <loginIdentityProviders>\n            <!--\n            Identity Provider for users logging in with username/password against an LDAP server.\n\n            'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, or START_TLS.\n\n            'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n            'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n            'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using START_TLS.\n            'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using START_TLS.\n            'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            START_TLS (i.e. JKS or PKCS12).\n            'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using START_TLS.\n            'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using START_TLS.\n            'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            START_TLS (i.e. JKS or PKCS12).\n            'TLS - Client Auth' - Client authentication policy when connecting to LDAP using START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n            'TLS - Protocol' - Protocol to use when connecting to LDAP using START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n            'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n            'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n            'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n            'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n            'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n            'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).\n            'User Search Filter' - Filter for searching for users against the 'User Search Base'.\n            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.\n\n            'Identity Strategy' - Strategy to identify users. Possible values are USE_DN and USE_USERNAME.\n            The default functionality if this property is missing is USE_DN in order to retain\n            backward compatibility. USE_DN will use the full DN of the user entry if possible.\n            USE_USERNAME will use the username the user logged in with.\n            'Authentication Expiration' - The duration of how long the user authentication is valid\n            for. If the user never logs out, they will be required to log back in following\n            this duration.\n            -->\n            <!-- To enable the ldap-provider remove 2 lines. This is 1 of 2.\n            <provider>\n            <identifier>ldap-provider</identifier>\n            <class>org.apache.nifi.ldap.LdapProvider</class>\n            <property name=\"Identity Strategy\">USE_DN</property>\n            <property name=\"Authentication Strategy\">START_TLS</property>\n            <property name=\"Manager DN\"></property>\n            <property name=\"Manager Password\"></property>\n            <property name=\"TLS - Keystore\"></property>\n            <property name=\"TLS - Keystore Password\"></property>\n            <property name=\"TLS - Keystore Type\"></property>\n            <property name=\"TLS - Truststore\"></property>\n            <property name=\"TLS - Truststore Password\"></property>\n            <property name=\"TLS - Truststore Type\"></property>\n            <property name=\"TLS - Client Auth\"></property>\n            <property name=\"TLS - Protocol\"></property>\n            <property name=\"TLS - Shutdown Gracefully\"></property>\n            <property name=\"Referral Strategy\">FOLLOW</property>\n            <property name=\"Connect Timeout\">10 secs</property>\n            <property name=\"Read Timeout\">10 secs</property>\n            <property name=\"Url\"></property>\n            <property name=\"User Search Base\"></property>\n            <property name=\"User Search Filter\"></property>\n            <property name=\"Identity Strategy\">USE_DN</property>\n            <property name=\"Authentication Expiration\">12 hours</property>\n            </provider>\n            To enable the ldap-provider remove 2 lines. This is 2 of 2. -->\n            <!--\n            Identity Provider for users logging in with username/password against a Kerberos KDC server.\n\n            'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).\n            'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.\n            -->\n            {% if not security_enabled %}\n            <!-- To enable the kerberos-provider remove 2 lines. This is 1 of 2.\n            {% endif %}\n            <provider>\n            <identifier>kerberos-provider</identifier>\n            <class>org.apache.nifi.kerberos.KerberosProvider</class>\n            <property name=\"Default Realm\">{{nifi_kerberos_realm}}</property>\n            <property name=\"Authentication Expiration\">{{nifi_kerberos_authentication_expiration}}</property>\n            </provider>\n            {% if not security_enabled %}\n            To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->\n            {% endif %}\n\n            </loginIdentityProviders>"
        }
      }
    },
    {
      "ranger-nifi-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "nifi-bootstrap-notification-services-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <services>\n            <!-- This file is used to define how interested parties are notified when events in NiFi's lifecycle occur. -->\n            <!-- The format of this file is:\n            <services>\n            <service>\n            <id>service-identifier</id>\n            <class>org.apache.nifi.notifications.DesiredNotificationService</class>\n            <property name=\"property name\">property value</property>\n            <property name=\"another property\">another property value</property>\n            </service>\n            </services>\n\n            This file can contain 0 to many different service definitions.\n            The id can then be referenced from the bootstrap.conf file in order to configure the notification service\n            to be used when particular lifecycle events occur.\n            -->\n\n            <!--\n            <service>\n            <id>email-notification</id>\n            <class>org.apache.nifi.bootstrap.notification.email.EmailNotificationService</class>\n            <property name=\"SMTP Hostname\"></property>\n            <property name=\"SMTP Port\"></property>\n            <property name=\"SMTP Username\"></property>\n            <property name=\"SMTP Password\"></property>\n            <property name=\"SMTP TLS\"></property>\n            <property name=\"From\"></property>\n            <property name=\"To\"></property>\n            </service>\n            -->\n\n            <!--\n            <service>\n            <id>http-notification</id>\n            <class>org.apache.nifi.bootstrap.notification.http.HttpNotificationService</class>\n            <property name=\"URL\"></property>\n            </service>\n            -->\n\n            </services>"
        }
      }
    },
    {
      "registry-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "REGISTRY_SERVER:registry_server",
          "content" : "\n{\n  \"input\": [\n    {\n      \"type\": \"registry_server\",\n      \"rowtype\": \"service\",\n      \"path\": \"{{default('/configurations/registry-env/registry_log_dir', '/var/log/registry')}}/registry.log\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"filter\": \"grok\",\n      \"conditions\": {\n        \"fields\": {\n          \"type\": [\n            \"registry_server\"\n          ]\n        }\n      },\n    \"multiline_pattern\":\"^(%{LOGLEVEL:level}%{SPACE}\\\\[%{TIME:logtime}\\\\])\",\n    \"message_pattern\":\"(?m)^%{LOGLEVEL:level}%{SPACE}\\\\[%{TIME:logtime}\\\\]%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{JAVACLASS:logger_name}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\": {\n        \"logtime\": {\n          \"map_date\": {\n            \"target_date_pattern\": \"yyyy-MM-dd HH:mm:ss,SSS\",\n            \"src_date_pattern\" :\"HH:mm:ss.SSS\"\n          }\n        }\n      }\n    }\n  ]\n}",
          "service_name" : "Registry"
        }
      }
    },
    {
      "storm-worker-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "storm_wrkr_a1_maxbackupindex" : "9",
          "storm_wrkr_a1_maxfilesize" : "100",
          "storm_wrkr_err_maxbackupindex" : "4",
          "storm_wrkr_out_maxfilesize" : "100",
          "storm_wrkr_out_maxbackupindex" : "4",
          "storm_wrkr_err_maxfilesize" : "100",
          "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} %t [%p] %msg%n</property>\n    <property name=\"patternNoTime\">%msg%n</property>\n    <property name=\"patternMetrics\">%d %-8r %m%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"{{storm_wrkr_a1_maxfilesize}} MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"{{storm_wrkr_a1_maxbackupindex}}\"/>\n    </RollingFile>\n    <RollingFile name=\"STDOUT\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"{{storm_wrkr_out_maxfilesize}} MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"{{storm_wrkr_out_maxbackupindex}}\"/>\n    </RollingFile>\n    <RollingFile name=\"STDERR\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"{{storm_wrkr_err_maxfilesize}} MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"{{storm_wrkr_err_maxbackupindex}}\"/>\n    </RollingFile>\n    <RollingFile name=\"METRICS\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternMetrics}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"2 MB\"/>\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n        protocol=\"UDP\" appName=\"[${sys:storm.id}:${sys:worker.port}]\" mdcId=\"mdc\" includeMDC=\"true\"\n        facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n        messageId=\"[${sys:user.name}:${sys:logging.sensitivity}]\" id=\"storm\" immediateFail=\"true\" immediateFlush=\"true\"/>\n</appenders>\n<loggers>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n    <Logger name=\"org.apache.storm.metric.LoggingMetricsConsumer\" level=\"info\" additivity=\"false\">\n        <appender-ref ref=\"METRICS\"/>\n    </Logger>\n    <Logger name=\"STDERR\" level=\"INFO\">\n        <appender-ref ref=\"STDERR\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"STDOUT\" level=\"INFO\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n</loggers>\n</configuration>"
        }
      }
    },
    {
      "ams-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "METRICS_COLLECTOR:ams_collector,ams_hbase_master,ams_hbase_regionserver;METRICS_MONITOR:ams_monitor;METRICS_GRAFANA:ams_grafana",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"ams_hbase_master\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-master-*.log\"\n    },\n    {\n      \"type\":\"ams_hbase_regionserver\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/hbase-ams-regionserver-*.log\"\n    },\n    {\n      \"type\":\"ams_collector\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ams-env/metrics_collector_log_dir', '/var/log/ambari-metrics-collector')}}/ambari-metrics-collector.log\"\n    },\n    {\n      \"type\":\"ams_monitor\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ams-env/metrics_monitor_log_dir', '/var/log/ambari-metrics-monitor')}}/ambari-metrics-monitor.out\"\n    },\n    {\n      \"type\":\"ams_grafana\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ams-grafana-env/metrics_grafana_log_dir', '/var/log/ambari-metrics-grafana')}}/grafana.log\"\n    }\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ams_collector\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %p %c: %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ams_hbase_master\",\n            \"ams_hbase_regionserver\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p [%t] %c{2}: %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ams_grafana\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p [%t] %c{2}: %m%n\",\n      \"multiline_pattern\":\"^(%{DATESTAMP:logtime})\",\n      \"message_pattern\":\"(?m)^%{DATESTAMP:logtime}%{SPACE}\\\\[%{WORD:level}\\\\]%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy/MM/dd HH:mm:ss\"\n          }\n         },\n        \"level\":[\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"I\",\n              \"post_value\":\"INFO\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"W\",\n              \"post_value\":\"WARN\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"D\",\n              \"post_value\":\"DEBUG\"\n             }\n           },\n           {\n             \"map_fieldvalue\":{\n               \"pre_value\":\"E\",\n               \"post_value\":\"ERROR\"\n             }\n           },\n           {\n             \"map_fieldvalue\":{\n               \"pre_value\":\"F\",\n               \"post_value\":\"FATAL\"\n             }\n           }\n         ]\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ams_monitor\"\n          ]\n        }\n      },\n      \"log4j_format\":\"\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\\\[%{LOGLEVEL:level}\\\\]%{SPACE}%{JAVAFILE:file}:%{INT:line_number}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       },\n      \"level\":[\n        {\n          \"map_fieldvalue\":{\n            \"pre_value\":\"WARNING\",\n            \"post_value\":\"WARN\"\n          }\n        }\n      ]\n     }\n   ]\n }",
          "service_name" : "AMS"
        }
      }
    },
    {
      "infra-solr-security-json" : {
        "properties_attributes" : { },
        "properties" : {
          "infra_solr_ranger_audit_service_users" : "{default_ranger_audit_users}",
          "infra_solr_role_logfeeder" : "logfeeder_user",
          "infra_solr_role_ranger_audit" : "ranger_audit_user",
          "infra_solr_role_logsearch" : "logsearch_user",
          "infra_solr_role_dev" : "dev",
          "infra_solr_role_ranger_admin" : "ranger_admin_user",
          "infra_solr_role_atlas" : "atlas_user",
          "content" : " "
        }
      }
    },
    {
      "logsearch-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_audit_log_maxfilesize" : "10",
          "logsearch_log_maxbackupindex" : "10",
          "logsearch_json_log_maxbackupindex" : "10",
          "logsearch_log_maxfilesize" : "10",
          "logsearch_perf_log_maxbackupindex" : "10",
          "logsearch_audit_log_maxbackupindex" : "10",
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n  <appender name=\"console\" class=\"org.apache.log4j.ConsoleAppender\">\n    <param name=\"Target\" value=\"System.out\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d [%t] %-5p %C{6} (%F:%L) - %m%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"rolling_file\" class=\"org.apache.log4j.RollingFileAppender\">\n    <param name=\"file\" value=\"{{logsearch_log_dir}}/logsearch.log\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"{{logsearch_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"{{logsearch_log_maxbackupindex}}\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d [%t] %-5p %C{6} (%F:%L) - %m%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"rolling_file_json\" class=\"org.apache.ambari.logsearch.appender.LogsearchRollingFileAppender\">\n    <param name=\"file\" value=\"{{logsearch_log_dir}}/logsearch.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"{{logsearch_json_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"{{logsearch_json_log_maxbackupindex}}\"/>\n    <layout class=\"org.apache.ambari.logsearch.appender.LogsearchConversion\"/>\n  </appender>\n\n  <appender name=\"audit_rolling_file_json\" class=\"org.apache.ambari.logsearch.appender.LogsearchRollingFileAppender\">\n    <param name=\"file\" value=\"{{logsearch_log_dir}}/logsearch-audit.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"{{logsearch_audit_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"{{logsearch_audit_log_maxbackupindex}}\"/>\n    <layout class=\"org.apache.ambari.logsearch.appender.LogsearchConversion\"/>\n  </appender>\n\n  <appender name=\"performance_analyzer_json\" class=\"org.apache.ambari.logsearch.appender.LogsearchRollingFileAppender\">\n    <param name=\"file\" value=\"{{logsearch_log_dir}}/logsearch-performance.json\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"{{logsearch_perf_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"{{logsearch_perf_log_maxbackupindex}}\"/>\n    <layout class=\"org.apache.ambari.logsearch.appender.LogsearchConversion\"/>\n  </appender>\n\n  <logger name=\"org.apache.ambari.logsearch.audit\" additivity=\"true\">\n    <appender-ref ref=\"audit_rolling_file_json\"/>\n  </logger>\n\n  <logger name=\"org.apache.ambari.logsearch.performance\" additivity=\"false\">\n    <appender-ref ref=\"performance_analyzer_json\"/>\n  </logger>\n\n  <category name=\"org.apache.ambari.logsearch\" additivity=\"false\">\n    <priority value=\"info\"/>\n    <appender-ref ref=\"rolling_file_json\"/>\n  </category>\n\n  <root>\n    <priority value=\"info\"/>\n    <!-- <appender-ref ref=\"console\" /> -->\n    <appender-ref ref=\"rolling_file\" />\n    <appender-ref ref=\"rolling_file_json\"/>\n  </root>\n</log4j:configuration>",
          "logsearch_perf_log_maxfilesize" : "10",
          "logsearch_json_log_maxfilesize" : "10"
        }
      }
    },
    {
      "nifi-ambari-ssl-config" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.toolkit.dn.prefix" : "CN=",
          "nifi.toolkit.tls.helper.days" : "1095",
          "nifi.security.keystoreType" : "",
          "nifi.security.keystore" : "{{nifi_config_dir}}/keystore.jks",
          "nifi.node.ssl.isenabled" : "false",
          "content" : "\n<!-- Provide the identity (typically a DN) of each node when clustered (see tool tip for detailed description of Node Identity). Must be specified when Ranger Nifi plugin will not be used for authorization. -->\n\n<!--\n<property name=\"Node Identity 1\"></property>\n<property name=\"Node Identity 2\"></property>\n<property name=\"Node Identity 3\"></property>\n<property name=\"Node Identity 4\"></property>\n-->",
          "nifi.toolkit.tls.regenerate" : "false",
          "nifi.toolkit.dn.suffix" : ", OU=NIFI",
          "nifi.initial.admin.identity" : "",
          "nifi.security.truststore" : "{{nifi_config_dir}}/truststore.jks",
          "nifi.security.needClientAuth" : "false",
          "nifi.security.truststoreType" : "",
          "nifi.toolkit.tls.port" : "10443"
        }
      }
    },
    {
      "zookeeper-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "ZOOKEEPER_SERVER:zookeeper",
          "content" : "\n{\n  \"input\":[\n    {\n     \"type\":\"zookeeper\",\n     \"rowtype\":\"service\",\n     \"path\":\"{{default('/configurations/zookeeper-env/zk_log_dir', '/var/log/zookeeper')}}/zookeeper*.log\"\n    }\n  ],\n  \"filter\":[\n   {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\"type\":[\"zookeeper\"]}\n      },\n     \"log4j_format\":\"%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\",\n     \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n     \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}-%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\@%{INT:line_number}\\\\]%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n     \"post_map_values\": {\n       \"logtime\": {\n         \"map_date\":{\n           \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n         }\n       }\n     }\n    }\n   ]\n}",
          "service_name" : "Zookeeper"
        }
      }
    },
    {
      "streamline-common" : {
        "properties_attributes" : { },
        "properties" : {
          "streamlineTrustStorePath" : "",
          "jar.storage.type" : "local",
          "database_name" : "streamline",
          "streamline.storage.connector.user" : "streamline",
          "streamline.storage.type" : "mysql",
          "registry.url" : "http://{{registry_host}}:{{registry_port}}/api/v1",
          "streamline.storage.connector.connectURI" : "jdbc:mysql://csur-hdf-1.field.hortonworks.com:3306/streamline",
          "storm.client.home" : "/usr/hdf/current/storm-client",
          "jar.storage" : "/hdf/streamline/jars",
          "maven.repo.url" : "hwx-public^http://repo.hortonworks.com/content/groups/public/,hwx-private^http://nexus-private.hortonworks.com/nexus/content/groups/public/",
          "jar.storage.hdfs.url" : "hdfs://csur-hdf-1.field.hortonworks.com:9090",
          "httpProxyServer" : "",
          "httpProxyUsername" : "",
          "streamline.storage.query.timeout" : "30",
          "port" : "7777",
          "streamline.dashboard.url" : "http://{{superset_host}}:{{superset_port}}",
          "adminPort" : "7778",
          "topology.test.results.dir" : "/hdf/streamline/topology_test_results"
        }
      }
    },
    {
      "nifi-ambari-config" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.node.ssl.port" : "9091",
          "nifi.ambari_reporting_frequency" : "1 mins",
          "nifi.internal.dir" : "/var/lib/nifi",
          "nifi.max_mem" : "512m",
          "nifi.content.repository.dir.default" : "/var/lib/nifi/content_repository",
          "nifi.node.protocol.port" : "9088",
          "nifi.state.dir" : "{nifi_internal_dir}/state/local",
          "nifi.flow.config.dir" : "{nifi_internal_dir}/conf",
          "nifi.ambari_reporting_enabled" : "true",
          "nifi.config.dir" : "{nifi_install_dir}/conf",
          "nifi.initial_mem" : "512m",
          "nifi.node.port" : "9090",
          "nifi.flowfile.repository.dir" : "/var/lib/nifi/flowfile_repository",
          "nifi.nifi_znode" : "/nifi",
          "nifi.provenance.repository.dir.default" : "/var/lib/nifi/provenance_repository",
          "nifi.database.dir" : "/var/lib/nifi/database_repository",
          "nifi.security.encrypt.configuration.password" : "SF_PASSWORD_HDF_SECURIYTY_ENCRYPT_12CHAR",
          "nifi.sensitive.props.key" : "SF_PASSWORD_HDF_SENSITIVE_PROPS_10CHAR"

        }
      }
    },
    {
      "nifi-authorizers-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <!--\n            This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order\n            to use a specific authorizer it must be configured here and it's identifier must be specified in the nifi.properties file.\n            If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.\n            This file allows for configuration of them, but they must be configured in order:\n\n            ...\n            all userGroupProviders\n            all accessPolicyProviders\n            all Authorizers\n            ...\n            -->\n\n            <authorizers>\n\n            {% if not (has_ranger_admin and enable_ranger_nifi) %}\n            <userGroupProvider>\n            <identifier>file-user-group-provider</identifier>\n            <class>org.apache.nifi.authorization.FileUserGroupProvider</class>\n            <property name=\"Users File\">{{nifi_flow_config_dir}}/users.xml</property>\n            <property name=\"Legacy Authorized Users File\"></property>\n            <property name=\"Initial User Identity 0\">{{nifi_initial_admin_id}}</property>\n            {{nifi_ssl_config_content | replace(\"Node\",\"Initial User\")}}\n            </userGroupProvider>\n\n            <accessPolicyProvider>\n            <identifier>file-access-policy-provider</identifier>\n            <class>org.apache.nifi.authorization.FileAccessPolicyProvider</class>\n            <property name=\"User Group Provider\">file-user-group-provider</property>\n            <property name=\"Authorizations File\">{{nifi_flow_config_dir}}/authorizations.xml</property>\n            <property name=\"Initial Admin Identity\">{{nifi_initial_admin_id}}</property>\n            <property name=\"Legacy Authorized Users File\"></property>\n            {{nifi_ssl_config_content}}\n            </accessPolicyProvider>\n\n            <authorizer>\n            <identifier>{{nifi_authorizer}}</identifier>\n            <class>org.apache.nifi.authorization.StandardManagedAuthorizer</class>\n            <property name=\"Access Policy Provider\">file-access-policy-provider</property>\n            </authorizer>\n            {% else %}\n\n            <authorizer>\n            <identifier>{{nifi_authorizer}}</identifier>\n            <class>org.apache.nifi.ranger.authorization.RangerNiFiAuthorizer</class>\n            <property name=\"Ranger Audit Config Path\">{{nifi_config_dir}}/ranger-nifi-audit.xml</property>\n            <property name=\"Ranger Security Config Path\">{{nifi_config_dir}}/ranger-nifi-security.xml</property>\n            <property name=\"Ranger Service Type\">nifi</property>\n            <property name=\"Ranger Application Id\">nifi</property>\n            <property name=\"Ranger Admin Identity\">{{ranger_admin_identity}}</property>\n            {% if security_enabled %}\n            <property name=\"Ranger Kerberos Enabled\">true</property>\n            {% else %}\n            <property name=\"Ranger Kerberos Enabled\">false</property>\n            {% endif %}\n            </authorizer>\n            {% endif %}\n\n            </authorizers>"
        }
      }
    },
    {
      "logsearch-service_logs-solrconfig" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_service_logs_max_retention" : "7",
          "logsearch_service_logs_merge_factor" : "5",
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<!--\nFor more details about configurations options that may appear in\nthis file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n  is an alias that causes solr to search appropriate packages,\n  including org.apache.solr.(search|update|request|core|analysis)\n\n  You may also specify a fully qualified Java classname if you\n  have your own custom plugins.\n  -->\n\n  <!-- Controls what version of Lucene various components of Solr\n  adhere to.  Generally, you want to use the latest version to\n  get all bug fixes and improvements. It is highly recommended\n  that you fully re-index after changing this setting as it can\n  affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>5.0.0</luceneMatchVersion>\n\n  <!-- <lib/> directives can be used to instruct Solr to load any Jars\n  identified and use them to resolve any \"plugins\" specified in\n  your solrconfig.xml or schema.xml (ie: Analyzers, Request\n  Handlers, etc...).\n\n  All directories and paths are resolved relative to the\n  instanceDir.\n\n  Please note that <lib/> directives are processed in the order\n  that they appear in your solrconfig.xml file, and are \"stacked\"\n  on top of each other when building a ClassLoader - so if you have\n  plugin jars with dependencies on other jars, the \"lower level\"\n  dependency jars should be loaded first.\n\n  If a \"./lib\" directory exists in your instanceDir, all files\n  found in it are included as if you had used the following\n  syntax...\n\n  <lib dir=\"./lib\" />\n  -->\n\n  <!-- A 'dir' option by itself adds any files found in the directory\n  to the classpath, this is useful for including all jars in a\n  directory.\n\n  When a 'regex' is specified in addition to a 'dir', only the\n  files in that directory which completely match the regex\n  (anchored on both ends) will be included.\n\n  If a 'dir' option (with or without a regex) is used and nothing\n  is found that matches, a warning will be logged.\n\n  The examples below can be used to load some solr-contribs along\n  with their external dependencies.\n  -->\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-dataimporthandler-.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/extraction/lib\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-cell-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/clustering/lib/\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-clustering-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/langid/lib/\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-langid-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/velocity/lib\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-velocity-\\d.*\\.jar\"/>\n\n  <!-- an exact 'path' can be used instead of a 'dir' to specify a\n  specific jar file.  This will cause a serious error to be logged\n  if it can't be loaded.\n  -->\n  <!--\n  <lib path=\"../a-jar-that-does-not-exist.jar\" />\n  -->\n\n  <!-- Data Directory\n\n  Used to specify an alternate directory to hold all index data\n  other than the default ./data under the Solr home.  If\n  replication is in use, this should match the replication\n  configuration.\n  -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n  solr.StandardDirectoryFactory is filesystem\n  based and tries to pick the best implementation for the current\n  JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n  wraps solr.StandardDirectoryFactory and caches small files in memory\n  for better NRT performance.\n\n  One can force a particular implementation via solr.MMapDirectoryFactory,\n  solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n  solr.RAMDirectoryFactory is memory based, not\n  persistent, and doesn't work with replication.\n  -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n\n\n    <!-- These will be used if you are using the solr.HdfsDirectoryFactory,\n    otherwise they will be ignored. If you don't plan on using hdfs,\n    you can safely remove this section. -->\n    <!-- The root directory that collection data should be written to. -->\n    <str name=\"solr.hdfs.home\">${solr.hdfs.home:}</str>\n    <!-- The hadoop configuration files to use for the hdfs client. -->\n    <str name=\"solr.hdfs.confdir\">${solr.hdfs.confdir:}</str>\n    <!-- Enable/Disable the hdfs cache. -->\n    <str name=\"solr.hdfs.blockcache.enabled\">${solr.hdfs.blockcache.enabled:true}</str>\n    <!-- Enable/Disable using one global cache for all SolrCores.\n    The settings used will be from the first HdfsDirectoryFactory created. -->\n    <str name=\"solr.hdfs.blockcache.global\">${solr.hdfs.blockcache.global:true}</str>\n\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n  The default implementation is SchemaCodecFactory, which is the official Lucene\n  index format, but hooks into the schema to provide per-field customization of\n  the postings lists and per-document values in the fieldType element\n  (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n  are experimental, so if you choose to customize the index format, it's a good\n  idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n  before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To enable dynamic schema REST APIs, use the following for <schemaFactory>: -->\n\n  <schemaFactory class=\"ManagedIndexSchemaFactory\">\n    <bool name=\"mutable\">true</bool>\n    <str name=\"managedSchemaResourceName\">managed-schema</str>\n  </schemaFactory>\n  <!--\n  When ManagedIndexSchemaFactory is specified, Solr will load the schema from\n  the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n  Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n  schema does not exist, Solr will create it after reading schema.xml, then rename\n  'schema.xml' to 'schema.xml.bak'.\n\n  Do NOT hand edit the managed schema - external modifications will be ignored and\n  overwritten as a result of schema modification REST API calls.\n\n  When ManagedIndexSchemaFactory is specified with mutable = true, schema\n  modification REST API calls will be allowed; otherwise, error responses will be\n  sent back for these requests.\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  Index Config - These settings control low-level behavior of indexing\n  Most example settings here show the default value, but are commented\n  out, to more easily see where customizations have been made.\n\n  Note: This replaces <indexDefaults> and <mainIndex> from older versions\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n    <!-- maxFieldLength was removed in 4.0. To get similar behavior, include a\n    LimitTokenCountFilterFactory in your fieldType definition. E.g.\n    <filter class=\"solr.LimitTokenCountFilterFactory\" maxTokenCount=\"10000\"/>\n    -->\n    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->\n    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->\n    <!-- LogSearch customization to avoid timeouts -->\n    <writeLockTimeout>10000</writeLockTimeout>\n\n    <!-- The maximum number of simultaneous threads that may be\n    indexing documents at once in IndexWriter; if more than this\n    many threads arrive they will wait for others to finish.\n    Default in Solr/Lucene is 8. -->\n    <!-- <maxIndexingThreads>8</maxIndexingThreads>  -->\n    <!-- LogSearch customization of increase performance -->\n    <maxIndexingThreads>50</maxIndexingThreads>\n\n    <!-- Expert: Enabling compound file will use less files for the index,\n    using fewer file descriptors on the expense of performance decrease.\n    Default in Lucene is \"true\". Default in Solr is \"false\" (since 3.6) -->\n    <!-- <useCompoundFile>false</useCompoundFile> -->\n\n    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene\n    indexing for buffering added documents and deletions before they are\n    flushed to the Directory.\n    maxBufferedDocs sets a limit on the number of documents buffered\n    before flushing.\n    If both ramBufferSizeMB and maxBufferedDocs is set, then\n    Lucene will flush based on whichever limit is hit first.\n    The default is 100 MB.  -->\n    <!-- <ramBufferSizeMB>100</ramBufferSizeMB> -->\n    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->\n\n    <!-- Expert: Merge Policy\n    The Merge Policy in Lucene controls how merging of segments is done.\n    The default since Solr/Lucene 3.3 is TieredMergePolicy.\n    The default since Lucene 2.3 was the LogByteSizeMergePolicy,\n    Even older versions of Lucene used LogDocMergePolicy.\n    -->\n    <!--\n    <mergePolicy class=\"org.apache.lucene.index.TieredMergePolicy\">\n    <int name=\"maxMergeAtOnce\">10</int>\n    <int name=\"segmentsPerTier\">10</int>\n    </mergePolicy>\n    -->\n\n    <!-- Merge Factor\n    The merge factor controls how many segments will get merged at a time.\n    For TieredMergePolicy, mergeFactor is a convenience parameter which\n    will set both MaxMergeAtOnce and SegmentsPerTier at once.\n    For LogByteSizeMergePolicy, mergeFactor decides how many new segments\n    will be allowed before they are merged into one.\n    Default is 10 for both merge policies.\n    -->\n    <!--\n    <mergeFactor>10</mergeFactor>\n    -->\n    <!-- LogSearch customization. Set to 5 to trigger purging of deleted documents more often -->\n    <mergeFactor>{{logsearch_service_logs_merge_factor}}</mergeFactor>\n\n    <!-- Expert: Merge Scheduler\n    The Merge Scheduler in Lucene controls how merges are\n    performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)\n    can perform merges in the background using separate threads.\n    The SerialMergeScheduler (Lucene 2.2 default) does not.\n    -->\n    <!--\n    <mergeScheduler class=\"org.apache.lucene.index.ConcurrentMergeScheduler\"/>\n    -->\n\n    <!-- LockFactory\n\n    This option specifies which Lucene LockFactory implementation\n    to use.\n\n    single = SingleInstanceLockFactory - suggested for a\n    read-only index or when there is no possibility of\n    another process trying to modify the index.\n    native = NativeFSLockFactory - uses OS native file locking.\n    Do not use when multiple solr webapps in the same\n    JVM are attempting to share a single index.\n    simple = SimpleFSLockFactory  - uses a plain file for locking\n\n    Defaults: 'native' is default for Solr3.6 and later, otherwise\n    'simple' is the default\n\n    More details on the nuances of each LockFactory...\n    http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Unlock On Startup\n\n    If true, unlock any held write or commit locks on startup.\n    This defeats the locking mechanism that allows multiple\n    processes to safely access a lucene index, and should be used\n    with care. Default is \"false\".\n\n    This is not needed if lock type is 'single'\n    -->\n    <!--\n    <unlockOnStartup>false</unlockOnStartup>\n    -->\n\n    <!-- Commit Deletion Policy\n    Custom deletion policies can be specified here. The class must\n    implement org.apache.lucene.index.IndexDeletionPolicy.\n\n    The default Solr IndexDeletionPolicy implementation supports\n    deleting index commit points on number of commits, age of\n    commit point and optimized status.\n\n    The latest commit point should always be preserved regardless\n    of the criteria.\n    -->\n    <!--\n    <deletionPolicy class=\"solr.SolrDeletionPolicy\">\n    -->\n    <!-- The number of commit points to be kept -->\n    <!-- <str name=\"maxCommitsToKeep\">1</str> -->\n    <!-- The number of optimized commit points to be kept -->\n    <!-- <str name=\"maxOptimizedCommitsToKeep\">0</str> -->\n    <!--\n    Delete all commit points once they have reached the given age.\n    Supports DateMathParser syntax e.g.\n    -->\n    <!--\n    <str name=\"maxCommitAge\">30MINUTES</str>\n    <str name=\"maxCommitAge\">1DAY</str>\n    -->\n    <!--\n    </deletionPolicy>\n    -->\n\n    <!-- Lucene Infostream\n\n    To aid in advanced debugging, Lucene provides an \"InfoStream\"\n    of detailed information when indexing.\n\n    Setting the value to true will instruct the underlying Lucene\n    IndexWriter to write its info stream to solr's log. By default,\n    this is enabled here, and controlled through log4j.properties.\n    -->\n    <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n  This example enables JMX if and only if an existing MBeanServer\n  is found, use this if you want to configure JMX through JVM\n  parameters. Remove this to disable exposing Solr configuration\n  and statistics to JMX.\n\n  For more details see http://wiki.apache.org/solr/SolrJmx\n  -->\n  <jmx/>\n  <!-- If you want to connect to a particular server, specify the\n  agentId\n  -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n  -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n    and solr cloud replica recovery.  The log can grow as big as\n    uncommitted changes to the index, so use of a hard autoCommit\n    is recommended (see below).\n    \"dir\" - the target directory for transaction logs, defaults to the\n    solr data directory.  -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n\n    <!-- AutoCommit\n\n    Perform a hard commit automatically under certain conditions.\n    Instead of enabling autoCommit, consider using \"commitWithin\"\n    when adding documents.\n\n    http://wiki.apache.org/solr/UpdateXmlMessages\n\n    maxDocs - Maximum number of documents to add since the last\n    commit before automatically triggering a new commit.\n\n    maxTime - Maximum amount of time in ms that is allowed to pass\n    since a document was added before automatically\n    triggering a new commit.\n    openSearcher - if false, the commit causes recent index changes\n    to be flushed to stable storage, but does not cause a new\n    searcher to be opened to make those changes visible.\n\n    If the updateLog is enabled, then it's highly recommended to\n    have some sort of hard autoCommit to limit the log size.\n    -->\n    <autoCommit>\n      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n      <openSearcher>false</openSearcher>\n    </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n    'soft' commit which only ensures that changes are visible\n    but does not ensure that data is synced to disk.  This is\n    faster and more near-realtime friendly than a hard commit.\n    -->\n\n    <autoSoftCommit>\n      <maxTime>${solr.autoSoftCommit.maxTime:5000}</maxTime>\n    </autoSoftCommit>\n\n    <!-- Update Related Event Listeners\n\n    Various IndexWriter related events can trigger Listeners to\n    take actions.\n\n    postCommit - fired after every commit or optimize command\n    postOptimize - fired after every optimize command\n    -->\n    <!-- The RunExecutableListener executes an external command from a\n    hook such as postCommit or postOptimize.\n\n    exe - the name of the executable to run\n    dir - dir to use as the current working directory. (default=\".\")\n    wait - the calling thread waits until the executable returns.\n    (default=\"true\")\n    args - the arguments to pass to the program.  (default is none)\n    env - environment variables to set.  (default is none)\n    -->\n    <!-- This example shows how RunExecutableListener could be used\n    with the script based replication...\n    http://wiki.apache.org/solr/CollectionDistribution\n    -->\n    <!--\n    <listener event=\"postCommit\" class=\"solr.RunExecutableListener\">\n    <str name=\"exe\">solr/bin/snapshooter</str>\n    <str name=\"dir\">.</str>\n    <bool name=\"wait\">true</bool>\n    <arr name=\"args\"> <str>arg1</str> <str>arg2</str> </arr>\n    <arr name=\"env\"> <str>MYVAR=val1</str> </arr>\n    </listener>\n    -->\n\n  </updateHandler>\n\n  <!-- IndexReaderFactory\n\n  Use the following format to specify a custom IndexReaderFactory,\n  which allows for alternate IndexReader implementations.\n\n  ** Experimental Feature **\n\n  Please note - Using a custom IndexReaderFactory may prevent\n  certain other features from working. The API to\n  IndexReaderFactory may change without warning or may even be\n  removed from future releases if the problems cannot be\n  resolved.\n\n\n  ** Features that may not work with custom IndexReaderFactory **\n\n  The ReplicationHandler assumes a disk-resident index. Using a\n  custom IndexReader implementation may cause incompatibility\n  with ReplicationHandler and may cause replication to not work\n  correctly. See SOLR-1366 for details.\n\n  -->\n  <!--\n  <indexReaderFactory name=\"IndexReaderFactory\" class=\"package.class\">\n  <str name=\"someArg\">Some Value</str>\n  </indexReaderFactory >\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  Query section - these settings control query time things like caches\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n    Maximum number of clauses in each BooleanQuery,  an exception\n    is thrown if exceeded.\n\n    ** WARNING **\n\n    This option actually modifies a global Lucene property that\n    will affect all SolrCores.  If multiple solrconfig.xml files\n    disagree on this property, the value at any given moment will\n    be based on the last SolrCore to be initialized.\n\n    -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n    There are two implementations of cache available for Solr,\n    LRUCache, based on a synchronized LinkedHashMap, and\n    FastLRUCache, based on a ConcurrentHashMap.\n\n    FastLRUCache has faster gets and slower puts in single\n    threaded operation and thus is generally faster than LRUCache\n    when the hit ratio of the cache is high (> 75%), and may be\n    faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n    Cache used by SolrIndexSearcher for filters (DocSets),\n    unordered sets of *all* documents that match a query.  When a\n    new searcher is opened, its caches may be prepopulated or\n    \"autowarmed\" using data from caches in the old searcher.\n    autowarmCount is the number of items to prepopulate.  For\n    LRUCache, the autowarmed items will be the most recently\n    accessed items.\n\n    Parameters:\n    class - the SolrCache implementation LRUCache or\n    (LRUCache or FastLRUCache)\n    size - the maximum number of entries in the cache\n    initialSize - the initial capacity (number of entries) of\n    the cache.  (see java.util.HashMap)\n    autowarmCount - the number of entries to prepopulate from\n    and old cache.\n    -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n    Caches results of searches - ordered lists of document ids\n    (DocList) based on a query, a sort, and the range of documents requested.\n    -->\n    <queryResultCache class=\"solr.LRUCache\"\n                      size=\"512\"\n                      initialSize=\"512\"\n                      autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n    Caches Lucene Document objects (the stored fields for each\n    document).  Since Lucene internal document ids are transient,\n    this cache will not be autowarmed.\n    -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n           class=\"solr.search.LRUCache\"\n           size=\"10\"\n           initialSize=\"0\"\n           autowarmCount=\"10\"\n           regenerator=\"solr.NoOpRegenerator\"/>\n\n    <!-- Field Value Cache\n\n    Cache used to hold field values that are quickly accessible\n    by document id.  The fieldValueCache is created by default\n    even if not configured here.\n    -->\n    <!--\n    <fieldValueCache class=\"solr.FastLRUCache\"\n    size=\"512\"\n    autowarmCount=\"128\"\n    showItems=\"32\" />\n    -->\n\n    <!-- Custom Cache\n\n    Example of a generic cache.  These caches may be accessed by\n    name through SolrIndexSearcher.getCache(),cacheLookup(), and\n    cacheInsert().  The purpose is to enable easy caching of\n    user/application level data.  The regenerator argument should\n    be specified as an implementation of solr.CacheRegenerator\n    if autowarming is desired.\n    -->\n    <!--\n    <cache name=\"myUserCache\"\n    class=\"solr.LRUCache\"\n    size=\"4096\"\n    initialSize=\"1024\"\n    autowarmCount=\"1024\"\n    regenerator=\"com.mycompany.MyRegenerator\"\n    />\n    -->\n\n\n    <!-- Lazy Field Loading\n\n    If true, stored fields that are not requested will be loaded\n    lazily.  This can result in a significant speed improvement\n    if the usual case is to not load all stored fields,\n    especially if the skipped fields are large compressed text\n    fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n    <!-- Use Filter For Sorted Query\n\n    A possible optimization that attempts to use a filter to\n    satisfy a search.  If the requested sort does not include\n    score, then the filterCache will be checked for a filter\n    matching the query. If found, the filter will be used as the\n    source of document ids, and then the sort will be applied to\n    that.\n\n    For most situations, this will not be useful unless you\n    frequently get the same search repeatedly with different sort\n    options, and none of them ever use \"score\"\n    -->\n    <!--\n    <useFilterForSortedQuery>true</useFilterForSortedQuery>\n    -->\n\n    <!-- Result Window Size\n\n    An optimization for use with the queryResultCache.  When a search\n    is requested, a superset of the requested number of document ids\n    are collected.  For example, if a search for a particular query\n    requests matching documents 10 through 19, and queryWindowSize is 50,\n    then documents 0 through 49 will be collected and cached.  Any further\n    requests in that range can be satisfied via the cache.\n    -->\n    <queryResultWindowSize>20</queryResultWindowSize>\n\n    <!-- Maximum number of documents to cache for any entry in the\n    queryResultCache.\n    -->\n    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Query Related Event Listeners\n\n    Various IndexSearcher related events can trigger Listeners to\n    take actions.\n\n    newSearcher - fired whenever a new searcher is being prepared\n    and there is a current searcher handling requests (aka\n    registered).  It can be used to prime certain caches to\n    prevent long request times for certain requests.\n\n    firstSearcher - fired whenever a new searcher is being\n    prepared but there is no current registered searcher to handle\n    requests or to gain autowarming data from.\n\n\n    -->\n    <!-- QuerySenderListener takes an array of NamedList and executes a\n    local query request for each NamedList in sequence.\n    -->\n    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <!--\n        <lst><str name=\"q\">solr</str><str name=\"sort\">price asc</str></lst>\n        <lst><str name=\"q\">rocks</str><str name=\"sort\">weight asc</str></lst>\n        -->\n      </arr>\n    </listener>\n    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <lst>\n          <str name=\"q\">static firstSearcher warming in solrconfig.xml</str>\n        </lst>\n      </arr>\n    </listener>\n\n    <!-- Use Cold Searcher\n\n    If a search request comes in and there is no current\n    registered searcher, then immediately register the still\n    warming searcher and use it.  If \"false\" then all requests\n    will block until the first searcher is done warming.\n    -->\n    <useColdSearcher>true</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n    Maximum number of searchers that may be warming in the\n    background concurrently.  An error is returned if this limit\n    is exceeded.\n\n    Recommend values of 1-2 for read-only slaves, higher for\n    masters w/o cache warming.\n    -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n  This section contains instructions for how the SolrDispatchFilter\n  should behave when processing requests for this SolrCore.\n\n  handleSelect is a legacy option that affects the behavior of requests\n  such as /select?qt=XXX\n\n  handleSelect=\"true\" will cause the SolrDispatchFilter to process\n  the request and dispatch the query to a handler specified by the\n  \"qt\" param, assuming \"/select\" isn't already registered.\n\n  handleSelect=\"false\" will cause the SolrDispatchFilter to\n  ignore \"/select\" requests, resulting in a 404 unless a handler\n  is explicitly registered with the name \"/select\"\n\n  handleSelect=\"true\" is not recommended for new users, but is the default\n  for backwards compatibility\n  -->\n  <requestDispatcher handleSelect=\"false\">\n    <!-- Request Parsing\n\n    These settings indicate how Solr Requests may be parsed, and\n    what restrictions may be placed on the ContentStreams from\n    those requests\n\n    enableRemoteStreaming - enables use of the stream.file\n    and stream.url parameters for specifying remote streams.\n\n    multipartUploadLimitInKB - specifies the max size (in KiB) of\n    Multipart File Uploads that Solr will allow in a Request.\n\n    formdataUploadLimitInKB - specifies the max size (in KiB) of\n    form data (application/x-www-form-urlencoded) sent via\n    POST. You can use POST to pass request parameters not\n    fitting into the URL.\n\n    addHttpRequestToContext - if set to true, it will instruct\n    the requestParsers to include the original HttpServletRequest\n    object in the context map of the SolrQueryRequest under the\n    key \"httpRequest\". It will not be used by any of the existing\n    Solr components, but may be useful when developing custom\n    plugins.\n\n    *** WARNING ***\n    The settings below authorize Solr to fetch remote files, You\n    should make sure your system has some authentication before\n    using enableRemoteStreaming=\"true\"\n\n    -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n    Set HTTP caching related parameters (for proxy caches and clients).\n\n    The options below instruct Solr not to output any HTTP Caching\n    related headers\n    -->\n    <httpCaching never304=\"true\"/>\n    <!-- If you include a <cacheControl> directive, it will be used to\n    generate a Cache-Control header (as well as an Expires header\n    if the value contains \"max-age=\")\n\n    By default, no Cache-Control header is generated.\n\n    You can use the <cacheControl> option even if you have set\n    never304=\"true\"\n    -->\n    <!--\n    <httpCaching never304=\"true\" >\n    <cacheControl>max-age=30, public</cacheControl>\n    </httpCaching>\n    -->\n    <!-- To enable Solr to respond with automatically generated HTTP\n    Caching headers, and to response to Cache Validation requests\n    correctly, set the value of never304=\"false\"\n\n    This will cause Solr to generate Last-Modified and ETag\n    headers based on the properties of the Index.\n\n    The following options can also be specified to affect the\n    values of these headers...\n\n    lastModFrom - the default value is \"openTime\" which means the\n    Last-Modified value (and validation against If-Modified-Since\n    requests) will all be relative to when the current Searcher\n    was opened.  You can change it to lastModFrom=\"dirLastMod\" if\n    you want the value to exactly correspond to when the physical\n    index was last modified.\n\n    etagSeed=\"...\" is an option you can change to force the ETag\n    header (and validation against If-None-Match requests) to be\n    different even if the index has not changed (ie: when making\n    significant changes to your config file)\n\n    (lastModifiedFrom and etagSeed are both ignored if you use\n    the never304=\"true\" option)\n    -->\n    <!--\n    <httpCaching lastModifiedFrom=\"openTime\"\n    etagSeed=\"Solr\">\n    <cacheControl>max-age=30, public</cacheControl>\n    </httpCaching>\n    -->\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n  http://wiki.apache.org/solr/SolrRequestHandler\n\n  Incoming queries will be dispatched to a specific handler by name\n  based on the path specified in the request.\n\n  Legacy behavior: If the request path uses \"/select\" but no Request\n  Handler has that name, and if handleSelect=\"true\" has been specified in\n  the requestDispatcher, then the Request Handler is dispatched based on\n  the qt parameter.  Handlers without a leading '/' are accessed this way\n  like so: http://host/app/[core/]select?qt=name  If no qt is\n  given, then the requestHandler that declares default=\"true\" will be\n  used or the one named \"standard\".\n\n  If a Request Handler is declared with startup=\"lazy\", then it will\n  not be initialized until the first request that uses it.\n\n  -->\n\n  <requestHandler name=\"/dataimport\" class=\"solr.DataImportHandler\">\n    <lst name=\"defaults\">\n      <str name=\"config\">solr-data-config.xml</str>\n    </lst>\n  </requestHandler>\n\n  <!-- SearchHandler\n\n  http://wiki.apache.org/solr/SearchHandler\n\n  For processing Search Queries, the primary Request Handler\n  provided with Solr is \"SearchHandler\" It delegates to a sequent\n  of SearchComponents (see below) and supports distributed\n  queries across multiple shards\n  -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n    will be overridden by parameters in the request\n    -->\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <int name=\"rows\">10</int>\n      <str name=\"df\">text</str>\n    </lst>\n    <!-- In addition to defaults, \"appends\" params can be specified\n    to identify values which should be appended to the list of\n    multi-val params from the query (or the existing \"defaults\").\n    -->\n    <!-- In this example, the param \"fq=instock:true\" would be appended to\n    any query time fq params the user may specify, as a mechanism for\n    partitioning the index, independent of any user selected filtering\n    that may also be desired (perhaps as a result of faceted searching).\n\n    NOTE: there is *absolutely* nothing a client can do to prevent these\n    \"appends\" values from being used, so don't use this mechanism\n    unless you are sure you always want it.\n    -->\n    <!--\n    <lst name=\"appends\">\n    <str name=\"fq\">inStock:true</str>\n    </lst>\n    -->\n    <!-- \"invariants\" are a way of letting the Solr maintainer lock down\n    the options available to Solr clients.  Any params values\n    specified here are used regardless of what values may be specified\n    in either the query, the \"defaults\", or the \"appends\" params.\n\n    In this example, the facet.field and facet.query params would\n    be fixed, limiting the facets clients can use.  Faceting is\n    not turned on by default - but if the client does specify\n    facet=true in the request, these are the only facets they\n    will be able to see counts for; regardless of what other\n    facet.field or facet.query params they may specify.\n\n    NOTE: there is *absolutely* nothing a client can do to prevent these\n    \"invariants\" values from being used, so don't use this mechanism\n    unless you are sure you always want it.\n    -->\n    <!--\n    <lst name=\"invariants\">\n    <str name=\"facet.field\">cat</str>\n    <str name=\"facet.field\">manu_exact</str>\n    <str name=\"facet.query\">price:[* TO 500]</str>\n    <str name=\"facet.query\">price:[500 TO *]</str>\n    </lst>\n    -->\n    <!-- If the default list of SearchComponents is not desired, that\n    list can either be overridden completely, or components can be\n    prepended or appended to the default list.  (see below)\n    -->\n    <!--\n    <arr name=\"components\">\n    <str>nameOfCustomComponent1</str>\n    <str>nameOfCustomComponent2</str>\n    </arr>\n    -->\n  </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n      <str name=\"df\">text</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- realtime get handler, guaranteed to return the latest stored fields of\n  any document, without the need to commit or open a new searcher.  The\n  current implementation relies on the updateLog feature being enabled.\n\n  ** WARNING **\n  Do NOT disable the realtime get handler at /get if you are using\n  SolrCloud otherwise any leader election will cause a full sync in ALL\n  replicas for the shard in question. Similarly, a replica recovery will\n  also always fetch the complete index from the leader because a partial\n  sync will not be possible in the absence of this handler.\n  -->\n  <requestHandler name=\"/get\" class=\"solr.RealTimeGetHandler\">\n    <lst name=\"defaults\">\n      <str name=\"omitHeader\">true</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- A Robust Example\n\n  This example SearchHandler declaration shows off usage of the\n  SearchHandler with many defaults declared\n\n  Note that multiple instances of the same Request Handler\n  (SearchHandler) can be registered multiple times with different\n  names (and different init parameters)\n  -->\n  <requestHandler name=\"/browse\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n\n      <!-- VelocityResponseWriter settings -->\n      <str name=\"wt\">velocity</str>\n      <str name=\"v.template\">browse</str>\n      <str name=\"v.layout\">layout</str>\n\n      <!-- Query settings -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n\n      <!-- Faceting defaults -->\n      <str name=\"facet\">on</str>\n      <str name=\"facet.mincount\">1</str>\n    </lst>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell,/browse\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n    </lst>\n  </initParams>\n\n  <!-- Update Request Handler.\n\n  http://wiki.apache.org/solr/UpdateXmlMessages\n\n  The canonical Request Handler for Modifying the Index through\n  commands specified using XML, JSON, CSV, or JAVABIN\n\n  Note: Since solr1.1 requestHandlers requires a valid content\n  type header if posted in the body. For example, curl now\n  requires: -H 'Content-type:text/xml; charset=utf-8'\n\n  To override the request content type and force a specific\n  Content-type, use the request parameter:\n  ?update.contentType=text/csv\n\n  This handler will pick a response format to match the input\n  if the 'wt' parameter is not explicit\n  -->\n  <requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">\n    <!-- See below for information on defining\n    updateRequestProcessorChains that can be used by name\n    on each Update Request\n    -->\n    <!--\n    <lst name=\"defaults\">\n    <str name=\"update.chain\">dedupe</str>\n    </lst>\n    -->\n  </requestHandler>\n\n  <!-- Solr Cell Update Request Handler\n\n  http://wiki.apache.org/solr/ExtractingRequestHandler\n\n  -->\n  <requestHandler name=\"/update/extract\"\n                  startup=\"lazy\"\n                  class=\"solr.extraction.ExtractingRequestHandler\">\n    <lst name=\"defaults\">\n      <str name=\"lowernames\">true</str>\n      <str name=\"uprefix\">ignored_</str>\n\n      <!-- capture link hrefs but ignore div attributes -->\n      <str name=\"captureAttr\">true</str>\n      <str name=\"fmap.a\">links</str>\n      <str name=\"fmap.div\">ignored_</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- Field Analysis Request Handler\n\n  RequestHandler that provides much the same functionality as\n  analysis.jsp. Provides the ability to specify multiple field\n  types and field names in the same request and outputs\n  index-time and query-time analysis for each of them.\n\n  Request parameters are:\n  analysis.fieldname - field name whose analyzers are to be used\n\n  analysis.fieldtype - field type whose analyzers are to be used\n  analysis.fieldvalue - text for index-time analysis\n  q (or analysis.q) - text for query time analysis\n  analysis.showmatch (true|false) - When set to true and when\n  query analysis is performed, the produced tokens of the\n  field value analysis will be marked as \"matched\" for every\n  token that is produces by the query analysis\n  -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\"/>\n\n\n  <!-- Document Analysis Handler\n\n  http://wiki.apache.org/solr/AnalysisRequestHandler\n\n  An analysis handler that provides a breakdown of the analysis\n  process of provided documents. This handler expects a (single)\n  content stream with the following format:\n\n  <docs>\n  <doc>\n  <field name=\"id\">1</field>\n  <field name=\"name\">The Name</field>\n  <field name=\"text\">The Text Value</field>\n  </doc>\n  <doc>...</doc>\n  <doc>...</doc>\n  ...\n  </docs>\n\n  Note: Each document must contain a field which serves as the\n  unique key. This key is used in the returned response to associate\n  an analysis breakdown to the analyzed document.\n\n  Like the FieldAnalysisRequestHandler, this handler also supports\n  query analysis by sending either an \"analysis.query\" or \"q\"\n  request parameter that holds the query text to be analyzed. It\n  also supports the \"analysis.showmatch\" parameter which when set to\n  true, all field tokens that match the query tokens will be marked\n  as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\"/>\n\n  <!-- Admin Handlers\n\n  Admin Handlers - This will register all the standard admin\n  RequestHandlers.\n  -->\n  <requestHandler name=\"/admin/\"\n                  class=\"solr.admin.AdminHandlers\"/>\n  <!-- This single handler is equivalent to the following... -->\n  <!--\n  <requestHandler name=\"/admin/luke\"       class=\"solr.admin.LukeRequestHandler\" />\n  <requestHandler name=\"/admin/system\"     class=\"solr.admin.SystemInfoHandler\" />\n  <requestHandler name=\"/admin/plugins\"    class=\"solr.admin.PluginInfoHandler\" />\n  <requestHandler name=\"/admin/threads\"    class=\"solr.admin.ThreadDumpHandler\" />\n  <requestHandler name=\"/admin/properties\" class=\"solr.admin.PropertiesRequestHandler\" />\n  <requestHandler name=\"/admin/file\"       class=\"solr.admin.ShowFileRequestHandler\" >\n  -->\n  <!-- If you wish to hide files under ${solr.home}/conf, explicitly\n  register the ShowFileRequestHandler using the definition below.\n  NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will\n  not exclude all files ending in '.xml'. Use it to exclude _all_ updates\n  -->\n  <!--\n  <requestHandler name=\"/admin/file\"\n  class=\"solr.admin.ShowFileRequestHandler\" >\n  <lst name=\"invariants\">\n  <str name=\"hidden\">synonyms.txt</str>\n  <str name=\"hidden\">anotherfile.txt</str>\n  <str name=\"hidden\">*</str>\n  </lst>\n  </requestHandler>\n  -->\n\n  <!--\n  Enabling this request handler (which is NOT a default part of the admin handler) will allow the Solr UI to edit\n  all the config files. This is intended for secure/development use ONLY! Leaving available and publically\n  accessible is a security vulnerability and should be done with extreme caution!\n  -->\n  <!--\n  <requestHandler name=\"/admin/fileedit\" class=\"solr.admin.EditFileRequestHandler\" >\n  <lst name=\"invariants\">\n  <str name=\"hidden\">synonyms.txt</str>\n  <str name=\"hidden\">anotherfile.txt</str>\n  </lst>\n  </requestHandler>\n  -->\n  <!-- ping/healthcheck -->\n  <requestHandler name=\"/admin/ping\" class=\"solr.PingRequestHandler\">\n    <lst name=\"invariants\">\n      <str name=\"q\">solrpingquery</str>\n    </lst>\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">all</str>\n    </lst>\n    <!-- An optional feature of the PingRequestHandler is to configure the\n    handler with a \"healthcheckFile\" which can be used to enable/disable\n    the PingRequestHandler.\n    relative paths are resolved against the data dir\n    -->\n    <!-- <str name=\"healthcheckFile\">server-enabled.txt</str> -->\n  </requestHandler>\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n  <!-- Solr Replication\n\n  The SolrReplicationHandler supports replicating indexes from a\n  \"master\" used for indexing and \"slaves\" used for queries.\n\n  http://wiki.apache.org/solr/SolrReplication\n\n  It is also necessary for SolrCloud to function (in Cloud mode, the\n  replication handler is used to bulk transfer segments when nodes\n  are added or need to recover).\n\n  https://wiki.apache.org/solr/SolrCloud/\n  -->\n  <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n    <!--\n    To enable simple master/slave replication, uncomment one of the\n    sections below, depending on whether this solr instance should be\n    the \"master\" or a \"slave\".  If this instance is a \"slave\" you will\n    also need to fill in the masterUrl to point to a real machine.\n    -->\n    <!--\n    <lst name=\"master\">\n    <str name=\"replicateAfter\">commit</str>\n    <str name=\"replicateAfter\">startup</str>\n    <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n    </lst>\n    -->\n    <!--\n    <lst name=\"slave\">\n    <str name=\"masterUrl\">http://your-master-hostname:8983/solr</str>\n    <str name=\"pollInterval\">00:00:60</str>\n    </lst>\n    -->\n  </requestHandler>\n\n  <!-- Search Components\n\n  Search components are registered to SolrCore and used by\n  instances of SearchHandler (which can access them by name)\n\n  By default, the following components are available:\n\n  <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n  <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n  <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n  <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n  <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n  <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n  Default configuration in a requestHandler would look like:\n\n  <arr name=\"components\">\n  <str>query</str>\n  <str>facet</str>\n  <str>mlt</str>\n  <str>highlight</str>\n  <str>stats</str>\n  <str>debug</str>\n  </arr>\n\n  If you register a searchComponent to one of the standard names,\n  that will be used instead of the default.\n\n  To insert components before or after the 'standard' components, use:\n\n  <arr name=\"first-components\">\n  <str>myFirstComponentName</str>\n  </arr>\n\n  <arr name=\"last-components\">\n  <str>myLastComponentName</str>\n  </arr>\n\n  NOTE: The component registered with the name \"debug\" will\n  always be executed after the \"last-components\"\n\n  -->\n\n  <!-- Spell Check\n\n  The spell check component can return a list of alternative spelling\n  suggestions.\n\n  http://wiki.apache.org/solr/SpellCheckComponent\n  -->\n  <searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">\n\n    <str name=\"queryAnalyzerFieldType\">key_lower_case</str>\n\n    <!-- Multiple \"Spell Checkers\" can be declared and used by this\n    component\n    -->\n\n    <!-- a spellchecker built from a field of the main index -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">default</str>\n      <str name=\"field\">text</str>\n      <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->\n      <str name=\"distanceMeasure\">internal</str>\n      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->\n      <float name=\"accuracy\">0.5</float>\n      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->\n      <int name=\"maxEdits\">2</int>\n      <!-- the minimum shared prefix when enumerating terms -->\n      <int name=\"minPrefix\">1</int>\n      <!-- maximum number of inspections per result. -->\n      <int name=\"maxInspections\">5</int>\n      <!-- minimum length of a query term to be considered for correction -->\n      <int name=\"minQueryLength\">4</int>\n      <!-- maximum threshold of documents a query term can appear to be considered for correction -->\n      <float name=\"maxQueryFrequency\">0.01</float>\n      <!-- uncomment this to require suggestions to occur in 1% of the documents\n      <float name=\"thresholdTokenFrequency\">.01</float>\n      -->\n    </lst>\n\n    <!-- a spellchecker that can break or combine words.  See \"/spell\" handler below for usage -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">wordbreak</str>\n      <str name=\"classname\">solr.WordBreakSolrSpellChecker</str>\n      <str name=\"field\">name</str>\n      <str name=\"combineWords\">true</str>\n      <str name=\"breakWords\">true</str>\n      <int name=\"maxChanges\">10</int>\n    </lst>\n\n    <!-- a spellchecker that uses a different distance measure -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"name\">jarowinkler</str>\n    <str name=\"field\">spell</str>\n    <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n    <str name=\"distanceMeasure\">\n    org.apache.lucene.search.spell.JaroWinklerDistance\n    </str>\n    </lst>\n    -->\n\n    <!-- a spellchecker that use an alternate comparator\n\n    comparatorClass be one of:\n    1. score (default)\n    2. freq (Frequency first, then score)\n    3. A fully qualified class name\n    -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"name\">freq</str>\n    <str name=\"field\">lowerfilt</str>\n    <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n    <str name=\"comparatorClass\">freq</str>\n    -->\n\n    <!-- A spellchecker that reads the list of words from a file -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"classname\">solr.FileBasedSpellChecker</str>\n    <str name=\"name\">file</str>\n    <str name=\"sourceLocation\">spellings.txt</str>\n    <str name=\"characterEncoding\">UTF-8</str>\n    <str name=\"spellcheckIndexDir\">spellcheckerFile</str>\n    </lst>\n    -->\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the spellcheck component.\n\n  NOTE: This is purely as an example.  The whole purpose of the\n  SpellCheckComponent is to hook it into the request handler that\n  handles your normal user queries so that a separate request is\n  not needed to get suggestions.\n\n  IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS\n  NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!\n\n  See http://wiki.apache.org/solr/SpellCheckComponent for details\n  on the request parameters.\n  -->\n  <requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <!-- Solr will use suggestions from both the 'default' spellchecker\n      and from the 'wordbreak' spellchecker and combine them.\n      collations (re-written queries) can include a combination of\n      corrections from both spellcheckers -->\n      <str name=\"spellcheck.dictionary\">default</str>\n      <str name=\"spellcheck.dictionary\">wordbreak</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.extendedResults\">true</str>\n      <str name=\"spellcheck.count\">10</str>\n      <str name=\"spellcheck.alternativeTermCount\">5</str>\n      <str name=\"spellcheck.maxResultsForSuggest\">5</str>\n      <str name=\"spellcheck.collate\">true</str>\n      <str name=\"spellcheck.collateExtendedResults\">true</str>\n      <str name=\"spellcheck.maxCollationTries\">10</str>\n      <str name=\"spellcheck.maxCollations\">5</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheck</str>\n    </arr>\n  </requestHandler>\n\n  <searchComponent name=\"suggest\" class=\"solr.SuggestComponent\">\n    <lst name=\"suggester\">\n      <str name=\"name\">mySuggester</str>\n      <str name=\"lookupImpl\">FuzzyLookupFactory</str>      <!-- org.apache.solr.spelling.suggest.fst -->\n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>     <!-- org.apache.solr.spelling.suggest.HighFrequencyDictionaryFactory -->\n      <str name=\"field\">cat</str>\n      <str name=\"weightField\">price</str>\n      <str name=\"suggestAnalyzerFieldType\">string</str>\n    </lst>\n  </searchComponent>\n\n  <requestHandler name=\"/suggest\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"suggest\">true</str>\n      <str name=\"suggest.count\">10</str>\n    </lst>\n    <arr name=\"components\">\n      <str>suggest</str>\n    </arr>\n  </requestHandler>\n  <!-- Term Vector Component\n\n  http://wiki.apache.org/solr/TermVectorComponent\n  -->\n  <searchComponent name=\"tvComponent\" class=\"solr.TermVectorComponent\"/>\n\n  <!-- A request handler for demonstrating the term vector component\n\n  This is purely as an example.\n\n  In reality you will likely want to add the component to your\n  already specified request handlers.\n  -->\n  <requestHandler name=\"/tvrh\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <bool name=\"tv\">true</bool>\n    </lst>\n    <arr name=\"last-components\">\n      <str>tvComponent</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Clustering Component\n\n  You'll need to set the solr.clustering.enabled system property\n  when running solr to run with clustering enabled:\n\n  java -Dsolr.clustering.enabled=true -jar start.jar\n\n  http://wiki.apache.org/solr/ClusteringComponent\n  http://carrot2.github.io/solr-integration-strategies/\n  -->\n  <searchComponent name=\"clustering\"\n                   enable=\"${solr.clustering.enabled:false}\"\n                   class=\"solr.clustering.ClusteringComponent\">\n    <lst name=\"engine\">\n      <str name=\"name\">lingo</str>\n\n      <!-- Class name of a clustering algorithm compatible with the Carrot2 framework.\n\n      Currently available open source algorithms are:\n      * org.carrot2.clustering.lingo.LingoClusteringAlgorithm\n      * org.carrot2.clustering.stc.STCClusteringAlgorithm\n      * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm\n\n      See http://project.carrot2.org/algorithms.html for more information.\n\n      A commercial algorithm Lingo3G (needs to be installed separately) is defined as:\n      * com.carrotsearch.lingo3g.Lingo3GClusteringAlgorithm\n      -->\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>\n\n      <!-- Override location of the clustering algorithm's resources\n      (attribute definitions and lexical resources).\n\n      A directory from which to load algorithm-specific stop words,\n      stop labels and attribute definition XMLs.\n\n      For an overview of Carrot2 lexical resources, see:\n      http://download.carrot2.org/head/manual/#chapter.lexical-resources\n\n      For an overview of Lingo3G lexical resources, see:\n      http://download.carrotsearch.com/lingo3g/manual/#chapter.lexical-resources\n      -->\n      <str name=\"carrot.resourcesDir\">clustering/carrot2</str>\n    </lst>\n\n    <!-- An example definition for the STC clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">stc</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>\n    </lst>\n\n    <!-- An example definition for the bisecting kmeans clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">kmeans</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm</str>\n    </lst>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the clustering component\n\n  This is purely as an example.\n\n  In reality you will likely want to add the component to your\n  already specified request handlers.\n  -->\n  <requestHandler name=\"/clustering\"\n                  startup=\"lazy\"\n                  enable=\"${solr.clustering.enabled:false}\"\n                  class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <bool name=\"clustering\">true</bool>\n      <bool name=\"clustering.results\">true</bool>\n      <!-- Field name with the logical \"title\" of a each document (optional) -->\n      <str name=\"carrot.title\">name</str>\n      <!-- Field name with the logical \"URL\" of a each document (optional) -->\n      <str name=\"carrot.url\">id</str>\n      <!-- Field name with the logical \"content\" of a each document (optional) -->\n      <str name=\"carrot.snippet\">features</str>\n      <!-- Apply highlighter to the title/ content and use this for clustering. -->\n      <bool name=\"carrot.produceSummary\">true</bool>\n      <!-- the maximum number of labels per cluster -->\n      <!--<int name=\"carrot.numDescriptions\">5</int>-->\n      <!-- produce sub clusters -->\n      <bool name=\"carrot.outputSubClusters\">false</bool>\n\n      <!-- Configure the remaining request handler parameters. -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"qf\">\n        text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4\n      </str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>clustering</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Terms Component\n\n  http://wiki.apache.org/solr/TermsComponent\n\n  A component to return terms and document frequency of those\n  terms\n  -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n\n  <!-- Query Elevation Component\n\n  http://wiki.apache.org/solr/QueryElevationComponent\n\n  a search component that enables you to configure the top\n  results for a given query regardless of the normal lucene\n  scoring.\n  -->\n  <searchComponent name=\"elevator\" class=\"solr.QueryElevationComponent\">\n    <!-- pick a fieldType to analyze queries -->\n    <str name=\"queryFieldType\">string</str>\n    <str name=\"config-file\">elevate.xml</str>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the elevator component -->\n  <requestHandler name=\"/elevate\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"df\">text</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>elevator</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Highlighting Component\n\n  http://wiki.apache.org/solr/HighlightingParameters\n  -->\n  <searchComponent class=\"solr.HighlightComponent\" name=\"highlight\">\n    <highlighting>\n      <!-- Configure the standard fragmenter -->\n      <!-- This could most likely be commented out in the \"default\" case -->\n      <fragmenter name=\"gap\"\n                  default=\"true\"\n                  class=\"solr.highlight.GapFragmenter\">\n        <lst name=\"defaults\">\n          <int name=\"hl.fragsize\">100</int>\n        </lst>\n      </fragmenter>\n\n      <!-- A regular-expression-based fragmenter\n      (for sentence extraction)\n      -->\n      <fragmenter name=\"regex\"\n                  class=\"solr.highlight.RegexFragmenter\">\n        <lst name=\"defaults\">\n          <!-- slightly smaller fragsizes work better because of slop -->\n          <int name=\"hl.fragsize\">70</int>\n          <!-- allow 50% slop on fragment sizes -->\n          <float name=\"hl.regex.slop\">0.5</float>\n          <!-- a basic sentence pattern -->\n          <str name=\"hl.regex.pattern\">[-\\w ,/\\n\\&amp;quot;&amp;apos;]{20,200}</str>\n        </lst>\n      </fragmenter>\n\n      <!-- Configure the standard formatter -->\n      <formatter name=\"html\"\n                 default=\"true\"\n                 class=\"solr.highlight.HtmlFormatter\">\n        <lst name=\"defaults\">\n          <str name=\"hl.simple.pre\"><![CDATA[<em>]]></str>\n          <str name=\"hl.simple.post\"><![CDATA[</em>]]></str>\n        </lst>\n      </formatter>\n\n      <!-- Configure the standard encoder -->\n      <encoder name=\"html\"\n               class=\"solr.highlight.HtmlEncoder\"/>\n\n      <!-- Configure the standard fragListBuilder -->\n      <fragListBuilder name=\"simple\"\n                       class=\"solr.highlight.SimpleFragListBuilder\"/>\n\n      <!-- Configure the single fragListBuilder -->\n      <fragListBuilder name=\"single\"\n                       class=\"solr.highlight.SingleFragListBuilder\"/>\n\n      <!-- Configure the weighted fragListBuilder -->\n      <fragListBuilder name=\"weighted\"\n                       default=\"true\"\n                       class=\"solr.highlight.WeightedFragListBuilder\"/>\n\n      <!-- default tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"default\"\n                        default=\"true\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <!--\n        <lst name=\"defaults\">\n        <str name=\"hl.multiValuedSeparatorChar\">/</str>\n        </lst>\n        -->\n      </fragmentsBuilder>\n\n      <!-- multi-colored tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"colored\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <lst name=\"defaults\">\n          <str name=\"hl.tag.pre\"><![CDATA[\n  <b style=\"background:yellow\">,<b style=\"background:lawgreen\">,\n  <b style=\"background:aquamarine\">,<b style=\"background:magenta\">,\n  <b style=\"background:palegreen\">,<b style=\"background:coral\">,\n  <b style=\"background:wheat\">,<b style=\"background:khaki\">,\n  <b style=\"background:lime\">,<b style=\"background:deepskyblue\">]]></str>\n          <str name=\"hl.tag.post\"><![CDATA[</b>]]></str>\n        </lst>\n      </fragmentsBuilder>\n\n      <boundaryScanner name=\"default\"\n                       default=\"true\"\n                       class=\"solr.highlight.SimpleBoundaryScanner\">\n        <lst name=\"defaults\">\n          <str name=\"hl.bs.maxScan\">10</str>\n          <str name=\"hl.bs.chars\">.,!? &amp;#9;&amp;#10;&amp;#13;</str>\n        </lst>\n      </boundaryScanner>\n\n      <boundaryScanner name=\"breakIterator\"\n                       class=\"solr.highlight.BreakIteratorBoundaryScanner\">\n        <lst name=\"defaults\">\n          <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->\n          <str name=\"hl.bs.type\">WORD</str>\n          <!-- language and country are used when constructing Locale object.  -->\n          <!-- And the Locale object will be used when getting instance of BreakIterator -->\n          <str name=\"hl.bs.language\">en</str>\n          <str name=\"hl.bs.country\">US</str>\n        </lst>\n      </boundaryScanner>\n    </highlighting>\n  </searchComponent>\n\n  <!-- Update Processors\n\n  Chains of Update Processor Factories for dealing with Update\n  Requests can be declared, and then used by name in Update\n  Request Processors\n\n  http://wiki.apache.org/solr/UpdateRequestProcessor\n\n  -->\n\n  <!-- Add unknown fields to the schema\n\n  An example field type guessing update processor that will\n  attempt to parse string-typed field values as Booleans, Longs,\n  Doubles, or Dates, and then add schema fields with the guessed\n  field types.\n\n  This requires that the schema is both managed and mutable, by\n  declaring schemaFactory as ManagedIndexSchemaFactory, with\n  mutable specified as true.\n\n  See http://wiki.apache.org/solr/GuessingFieldTypes\n  -->\n  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\">\n\n    <processor class=\"solr.DefaultValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_ttl_</str>\n      <str name=\"value\">+{{logsearch_service_logs_max_retention}}DAYS</str>\n    </processor>\n    <processor class=\"solr.processor.DocExpirationUpdateProcessorFactory\">\n      <int name=\"autoDeletePeriodSeconds\">86400</int>\n      <str name=\"ttlFieldName\">_ttl_</str>\n      <str name=\"expirationFieldName\">_expire_at_</str>\n    </processor>\n    <processor class=\"solr.FirstFieldValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_expire_at_</str>\n    </processor>\n\n\n    <processor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseLongFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDateFieldUpdateProcessorFactory\">\n      <arr name=\"format\">\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ssZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss</str>\n        <str>yyyy-MM-dd'T'HH:mmZ</str>\n        <str>yyyy-MM-dd'T'HH:mm</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd HH:mm:ssZ</str>\n        <str>yyyy-MM-dd HH:mm:ss</str>\n        <str>yyyy-MM-dd HH:mmZ</str>\n        <str>yyyy-MM-dd HH:mm</str>\n        <str>yyyy-MM-dd</str>\n      </arr>\n    </processor>\n    <processor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\">\n      <str name=\"defaultFieldType\">key_lower_case</str>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Boolean</str>\n        <str name=\"fieldType\">boolean</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.util.Date</str>\n        <str name=\"fieldType\">tdate</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Long</str>\n        <str name=\"valueClass\">java.lang.Integer</str>\n        <str name=\"fieldType\">tlong</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Number</str>\n        <str name=\"fieldType\">tdouble</str>\n      </lst>\n    </processor>\n\n    <processor class=\"solr.LogUpdateProcessorFactory\"/>\n    <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  </updateRequestProcessorChain>\n\n\n  <!-- Deduplication\n\n  An example dedup update processor that creates the \"id\" field\n  on the fly based on the hash code of some other fields.  This\n  example has overwriteDupes set to false since we are using the\n  id field as the signatureField and Solr will maintain\n  uniqueness based on that anyway.\n\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"dedupe\">\n  <processor class=\"solr.processor.SignatureUpdateProcessorFactory\">\n  <bool name=\"enabled\">true</bool>\n  <str name=\"signatureField\">id</str>\n  <bool name=\"overwriteDupes\">false</bool>\n  <str name=\"fields\">name,features,cat</str>\n  <str name=\"signatureClass\">solr.processor.Lookup3Signature</str>\n  </processor>\n  <processor class=\"solr.LogUpdateProcessorFactory\" />\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Language identification\n\n  This example update chain identifies the language of the incoming\n  documents using the langid contrib. The detected language is\n  written to field language_s. No field name mapping is done.\n  The fields used for detection are text, title, subject and description,\n  making this example suitable for detecting languages form full-text\n  rich documents injected via ExtractingRequestHandler.\n  See more about langId at http://wiki.apache.org/solr/LanguageDetection\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"langid\">\n  <processor class=\"org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory\">\n  <str name=\"langid.fl\">text,title,subject,description</str>\n  <str name=\"langid.langField\">language_s</str>\n  <str name=\"langid.fallback\">en</str>\n  </processor>\n  <processor class=\"solr.LogUpdateProcessorFactory\" />\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Script update processor\n\n  This example hooks in an update processor implemented using JavaScript.\n\n  See more about the script update processor at http://wiki.apache.org/solr/ScriptUpdateProcessor\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"script\">\n  <processor class=\"solr.StatelessScriptUpdateProcessorFactory\">\n  <str name=\"script\">update-script.js</str>\n  <lst name=\"params\">\n  <str name=\"config_param\">example config parameter</str>\n  </lst>\n  </processor>\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Response Writers\n\n  http://wiki.apache.org/solr/QueryResponseWriter\n\n  Request responses will be written using the writer specified by\n  the 'wt' request parameter matching the name of a registered\n  writer.\n\n  The \"default\" writer is the default and will be used if 'wt' is\n  not specified in the request.\n  -->\n  <!-- The following response writers are implicitly configured unless\n  overridden...\n  -->\n  <!--\n  <queryResponseWriter name=\"xml\"\n  default=\"true\"\n  class=\"solr.XMLResponseWriter\" />\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\"/>\n  <queryResponseWriter name=\"python\" class=\"solr.PythonResponseWriter\"/>\n  <queryResponseWriter name=\"ruby\" class=\"solr.RubyResponseWriter\"/>\n  <queryResponseWriter name=\"php\" class=\"solr.PHPResponseWriter\"/>\n  <queryResponseWriter name=\"phps\" class=\"solr.PHPSerializedResponseWriter\"/>\n  <queryResponseWriter name=\"csv\" class=\"solr.CSVResponseWriter\"/>\n  <queryResponseWriter name=\"schema.xml\" class=\"solr.SchemaXmlResponseWriter\"/>\n  -->\n\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">\n    <!-- For the purposes of the tutorial, JSON responses are written as\n    plain text so that they are easy to read in *any* browser.\n    If you expect a MIME type of \"application/json\" just remove this override.\n    -->\n    <str name=\"content-type\">text/plain; charset=UTF-8</str>\n  </queryResponseWriter>\n\n  <!--\n  Custom response writers can be declared as needed...\n  -->\n  <queryResponseWriter name=\"velocity\" class=\"solr.VelocityResponseWriter\" startup=\"lazy\">\n    <str name=\"template.base.dir\">${velocity.template.base.dir:}</str>\n  </queryResponseWriter>\n\n  <!-- XSLT response writer transforms the XML output by any xslt file found\n  in Solr's conf/xslt directory.  Changes to xslt files are checked for\n  every xsltCacheLifetimeSeconds.\n  -->\n  <queryResponseWriter name=\"xslt\" class=\"solr.XSLTResponseWriter\">\n    <int name=\"xsltCacheLifetimeSeconds\">5</int>\n  </queryResponseWriter>\n\n  <!-- Query Parsers\n\n  http://wiki.apache.org/solr/SolrQuerySyntax\n\n  Multiple QParserPlugins can be registered by name, and then\n  used in either the \"defType\" param for the QueryComponent (used\n  by SearchHandler) or in LocalParams\n  -->\n  <!-- example of registering a query parser -->\n  <!--\n  <queryParser name=\"myparser\" class=\"com.mycompany.MyQParserPlugin\"/>\n  -->\n  <queryParser name=\"xmlparser\" class=\"solr.ExtendedDismaxQParserPlugin\" />\n\n  <!-- Function Parsers\n\n  http://wiki.apache.org/solr/FunctionQuery\n\n  Multiple ValueSourceParsers can be registered by name, and then\n  used as function names when using the \"func\" QParser.\n  -->\n  <!-- example of registering a custom function parser  -->\n  <!--\n  <valueSourceParser name=\"myfunc\"\n  class=\"com.mycompany.MyValueSourceParser\" />\n  -->\n\n\n  <!-- Document Transformers\n  http://wiki.apache.org/solr/DocTransformers\n  -->\n  <!--\n  Could be something like:\n  <transformer name=\"db\" class=\"com.mycompany.LoadFromDatabaseTransformer\" >\n  <int name=\"connection\">jdbc://....</int>\n  </transformer>\n\n  To add a constant value to all docs, use:\n  <transformer name=\"mytrans2\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n  <int name=\"value\">5</int>\n  </transformer>\n\n  If you want the user to still be able to change it with _value:something_ use this:\n  <transformer name=\"mytrans3\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n  <double name=\"defaultValue\">5</double>\n  </transformer>\n\n  If you are using the QueryElevationComponent, you may wish to mark documents that get boosted.  The\n  EditorialMarkerFactory will do exactly that:\n  <transformer name=\"qecBooster\" class=\"org.apache.solr.response.transform.EditorialMarkerFactory\" />\n  -->\n\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>"
        }
      }
    },
    {
      "registry-common" : {
        "properties_attributes" : { },
        "properties" : {
          "jar.storage.type" : "local",
          "database_name" : "registry",
          "registry.storage.query.timeout" : "30",
          "registry.schema.cache.expiry.interval" : "3600",
          "registry.storage.connector.connectURI" : "jdbc:mysql://csur-hdf-1.field.hortonworks.com:3306/registry",
          "jar.storage" : "/hdf/registry",
          "registry.storage.connector.user" : "registry",
          "jar.storage.hdfs.url" : "hdfs://csur-hdf-1.field.hortonworks.com:9090",
          "port" : "7788",
          "adminPort" : "7789",
          "registry.schema.cache.size" : "10000",
          "registry.storage.type" : "mysql"
        }
      }
    },
    {
      "nifi-bootstrap-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Java command to use when running NiFi\njava=java\n\n# Username to use when running NiFi. This value will be ignored on Windows.\nrun.as={{nifi_user}}\n##run.as=root\n\n# Configure where NiFi's lib and conf directories live\nlib.dir={{nifi_install_dir}}/lib\nconf.dir={{nifi_config_dir}}\n\n# How long to wait after telling NiFi to shutdown before explicitly killing the Process\ngraceful.shutdown.seconds=20\n\n{% if security_enabled %}\njava.arg.0=-Djava.security.auth.login.config={{nifi_jaas_conf}}\n{% endif %}\n\n# Disable JSR 199 so that we can use JSP's without running a JDK\njava.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true\n\n# JVM memory settings\njava.arg.2=-Xms{{nifi_initial_mem}}\njava.arg.3=-Xmx{{nifi_max_mem}}\n\n# Enable Remote Debugging\n#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n\njava.arg.4=-Djava.net.preferIPv4Stack=true\n\n# allowRestrictedHeaders is required for Cluster/Node communications to work properly\njava.arg.5=-Dsun.net.http.allowRestrictedHeaders=true\njava.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol\n\n# The G1GC is still considered experimental but has proven to be very advantageous in providing great\n# performance without significant \"stop-the-world\" delays.\njava.arg.13=-XX:+UseG1GC\n\n#Set headless mode by default\njava.arg.14=-Djava.awt.headless=true\n\n#Ambari Metrics Collector URL - passed in to flow.xml for AmbariReportingTask\njava.arg.15=-Dambari.metrics.collector.url=http://{{metrics_collector_host}}:{{metrics_collector_port}}/ws/v1/timeline/metrics\n\n#Application ID - used in flow.xml - passed into flow.xml for AmbariReportingTask\njava.arg.16=-Dambari.application.id=nifi\n\n#Sets the provider of SecureRandom to /dev/urandom to prevent blocking on VMs\njava.arg.17=-Djava.security.egd=file:/dev/urandom\n\n# Requires JAAS to use only the provided JAAS configuration to authenticate a Subject, without using any \"fallback\" methods (such as prompting for username/password)\n# Please see https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/single-signon.html, section \"EXCEPTIONS TO THE MODEL\"\njava.arg.18=-Djavax.security.auth.useSubjectCredsOnly=true\n\n###\n# Notification Services for notifying interested parties when NiFi is stopped, started, dies\n###\n\n# XML File that contains the definitions of the notification services\nnotification.services.file={{nifi_config_dir}}/bootstrap-notification-services.xml\n\n# In the case that we are unable to send a notification for an event, how many times should we retry?\nnotification.max.attempts=5\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is started?\n#nifi.start.notification.services=email-notification\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is stopped?\n#nifi.stop.notification.services=email-notification\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi dies?\n#nifi.dead.notification.services=email-notification"
        }
      }
    },
    {
      "infra-solr-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "infra_log_maxbackupindex" : "9",
          "infra_log_maxfilesize" : "10",
          "content" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#  Logging level\ninfra.solr.log.dir={{infra_solr_log_dir}}\n#log4j.rootLogger=INFO, file, CONSOLE\nlog4j.rootLogger=WARN, file\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%-4r [%t] %-5p %c %x [%X{collection} %X{shard} %X{replica} %X{core}] \\u2013 %m%n\n\n#- size rotation with log cleanup.\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.MaxFileSize={{infra_log_maxfilesize}}MB\nlog4j.appender.file.MaxBackupIndex={{infra_log_maxbackupindex}}\n\n#- File to log to and log format\nlog4j.appender.file.File=${infra.solr.log.dir}/solr.log\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\n\nlog4j.logger.org.apache.zookeeper=WARN\nlog4j.logger.org.apache.hadoop=WARN\n\n# set to INFO to enable infostream log messages\nlog4j.logger.org.apache.solr.update.LoggingInfoStream=OFF"
        }
      }
    },
    {
      "ranger-nifi-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "storm-cluster-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "storm_a1_maxbackupindex" : "9",
          "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} %t [%p] %msg%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"{{storm_a1_maxfilesize}} MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"{{storm_a1_maxbackupindex}}\"/>\n    </RollingFile>\n    <RollingFile name=\"WEB-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log\"\n                 filePattern=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"THRIFT-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/access-${sys:logfile.name}.%i.gz\">\n    <PatternLayout>\n        <pattern>${pattern}</pattern>\n    </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n            protocol=\"UDP\" appName=\"[${sys:daemon.name}]\" mdcId=\"mdc\" includeMDC=\"true\"\n            facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n            messageId=\"[${sys:user.name}:S0]\" id=\"storm\" immediateFlush=\"true\" immediateFail=\"true\"/>\n</appenders>\n<loggers>\n\n    <Logger name=\"org.apache.storm.logging.filters.AccessLoggingFilter\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"WEB-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"org.apache.storm.logging.ThriftAccessLogger\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"THRIFT-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n</loggers>\n</configuration>",
          "storm_a1_maxfilesize" : "100"
        }
      }
    },
    {
      "ranger-nifi-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "logsearch-common-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_external_solr_ssl_enabled" : "false",
          "logsearch_external_solr_zk_znode" : "",
          "logsearch_use_external_solr" : "false",
          "logsearch_external_solr_kerberos_enabled" : "false",
          "logsearch_external_solr_zk_quorum" : ""
        }
      }
    },
    {
      "storm-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "NIMBUS:storm_nimbus;SUPERVISOR:storm_supervisor,storm_worker,storm_logviewer,storm_worker_event;STORM_UI_SERVER:storm_ui;DRPC_SERVER:storm_drpc",
          "content" : "\n            {\n            \"input\":[\n            {\n            \"type\":\"storm_drpc\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/drpc.log\"\n            },\n            {\n            \"type\":\"storm_logviewer\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/logviewer.log\"\n            },\n            {\n            \"type\":\"storm_nimbus\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/nimbus.log\"\n            },\n            {\n            \"type\":\"storm_supervisor\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/supervisor.log\"\n            },\n            {\n            \"type\":\"storm_ui\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/ui.log\"\n            }\n            ,{\n            \"type\":\"storm_worker\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/workers-artifacts/*/*/worker.log\",\n            \"init_default_fields\": \"true\"\n            },\n            {\n            \"type\":\"storm_worker_event\",\n            \"rowtype\":\"service\",\n            \"path\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/workers-artifacts/*/*/events.log\",\n            \"init_default_fields\": \"true\",\n            \"add_fields\": {\n            \"level\":\"INFO\"\n            }\n            }\n            ],\n            \"filter\":[\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 1,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_nimbus\",\n            \"storm_supervisor\",\n            \"storm_logviewer\",\n            \"storm_drpc\",\n            \"storm_ui\",\n            \"storm_worker\"\n            ]\n            }\n            },\n            \"log4j_format\":\"\",\n            \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n            \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{JAVACLASS:logger_name}\\\\s%{GREEDYDATA:thread_name}\\\\s\\\\[%{LOGLEVEL:level}\\\\]\\\\s%{GREEDYDATA:log_message}\",\n            \"post_map_values\":{\n            \"logtime\":{\n            \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss.SSS\"\n            }\n            }\n            }\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 2,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker\"\n            ]\n            }\n            },\n            \"source_field\": \"thread_name\",\n            \"remove_source_field\": \"false\",\n            \"message_pattern\":\"(Thread\\\\-[0-9]+\\\\-[0-9]+\\\\-%{DATA:sdi_streamline_component_name}\\\\-executor%{DATA}|%{DATA:thread_name})\"\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 3,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker\"\n            ]\n            }\n            },\n            \"source_field\": \"path\",\n            \"remove_source_field\": \"false\",\n            \"message_pattern\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/workers-artifacts/%{DATA:sdi_storm_topology_id}/%{DATA:sdi_storm_worker_port}/worker\\\\.log\"\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 4,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker\"\n            ]\n            }\n            },\n            \"source_field\": \"sdi_storm_topology_id\",\n            \"remove_source_field\": \"false\",\n            \"message_pattern\":\"(streamline\\\\-%{DATA:sdi_streamline_topology_id}\\\\-%{DATA:sdi_streamline_topology_name}\\\\-[0-9]+\\\\-[0-9]+)|(%{DATA:sdi_storm_topology_id})\"\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 5,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker_event\"\n            ]\n            }\n            },\n            \"log4j_format\":\"\",\n            \"message_pattern\":\"^%{TIMESTAMP_ISO8601:logtime}(!_DELIM_!<STREAMLINE_EVENT>!_DELIM_!%{DATA:sdi_streamline_component_name}!_DELIM_!%{DATA:sdi_streamline_event_id}!_DELIM_!%{DATA:sdi_streamline_root_ids}!_DELIM_!%{DATA:sdi_streamline_parent_ids}!_DELIM_!%{DATA:sdi_streamline_event_fields_and_values}!_DELIM_!%{DATA:sdi_streamline_event_headers}!_DELIM_!%{DATA:sdi_streamline_event_aux_fields_and_values})|(%{GREEDYDATA})\",\n            \"post_map_values\":{\n            \"logtime\":{\n            \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss.SSS\"\n            }\n            }\n            }\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 6,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker_event\"\n            ]\n            }\n            },\n            \"source_field\": \"path\",\n            \"remove_source_field\": \"false\",\n            \"message_pattern\":\"{{default('/configurations/storm-env/storm_log_dir', '/var/log/storm')}}/workers-artifacts/%{DATA:sdi_storm_topology_id}/%{DATA:sdi_storm_worker_port}/events\\\\.log\"\n            },\n            {\n            \"filter\":\"grok\",\n            \"sort_order\": 7,\n            \"conditions\":{\n            \"fields\":{\n            \"type\":[\n            \"storm_worker_event\"\n            ]\n            }\n            },\n            \"source_field\": \"sdi_storm_topology_id\",\n            \"remove_source_field\": \"false\",\n            \"message_pattern\":\"(streamline\\\\-%{DATA:sdi_streamline_topology_id}\\\\-%{DATA:sdi_streamline_topology_name}\\\\-[0-9]+\\\\-[0-9]+)|(%{DATA:sdi_storm_topology_id})\"\n            }\n            ]\n            }",
          "service_name" : "Storm"
        }
      }
    },
    {
      "infra-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "INFRA_SOLR:infra_solr",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"infra_solr\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/infra-solr-env/infra_solr_log_dir', '/var/log/ambari-infra-solr')}}/solr.log\"\n    }\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"infra_solr\"\n          ]\n        }\n      },\n      \"log4j_format\":\"\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n        }\n      }\n    }\n  ]\n}",
          "service_name" : "Infra"
        }
      }
    },
    {
      "logfeeder-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "logfeeder.cache.last.dedup.enabled" : "false",
          "logfeeder.cache.enabled" : "false",
          "logfeeder.log.filter.enable" : "true",
          "logfeeder.cache.size" : "100",
          "logfeeder.solr.config.interval" : "5",
          "logfeeder.cache.key.field" : "log_message",
          "logfeeder.cache.dedup.interval" : "1000",
          "logfeeder.checkpoint.folder" : "/etc/ambari-logsearch-logfeeder/conf/checkpoints",
          "logfeeder.metrics.collector.hosts" : "{metrics_collector_hosts}",
          "logfeeder.config.files" : "{default_config_files}"
        }
      }
    },
    {
      "kafka-broker" : {
        "properties_attributes" : { },
        "properties" : {
          "replica.high.watermark.checkpoint.interval.ms" : "5000",
          "offsets.topic.num.partitions" : "50",
          "auto.create.topics.enable" : "true",
          "controller.socket.timeout.ms" : "30000",
          "external.kafka.metrics.include.prefix" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request",
          "replica.socket.receive.buffer.bytes" : "65536",
          "min.insync.replicas" : "1",
          "kafka.timeline.metrics.maxRowCacheSize" : "10000",
          "zookeeper.connection.timeout.ms" : "25000",
          "controlled.shutdown.retry.backoff.ms" : "5000",
          "replica.fetch.wait.max.ms" : "500",
          "num.recovery.threads.per.data.dir" : "1",
          "kafka.timeline.metrics.reporter.sendInterval" : "5900",
          "log.roll.hours" : "168",
          "sasl.mechanism.inter.broker.protocol" : "GSSAPI",
          "default.replication.factor" : "1",
          "kafka.timeline.metrics.port" : "{{metric_collector_port}}",
          "offsets.topic.segment.bytes" : "104857600",
          "fetch.purgatory.purge.interval.requests" : "10000",
          "replica.socket.timeout.ms" : "30000",
          "message.max.bytes" : "1000000",
          "replica.lag.max.messages" : "4000",
          "kafka.ganglia.metrics.port" : "8671",
          "num.io.threads" : "8",
          "offsets.commit.required.acks" : "-1",
          "delete.topic.enable" : "false",
          "log.index.interval.bytes" : "4096",
          "offsets.commit.timeout.ms" : "5000",
          "log.segment.bytes" : "1073741824",
          "offset.metadata.max.bytes" : "4096",
          "zookeeper.connect" : "%HOSTGROUP::host_group_S1%:2181,%HOSTGROUP::host_group_M1%:2181,%HOSTGROUP::host_group_S2%:2181",
          "port" : "6667",
          "zookeeper.sync.time.ms" : "2000",
          "num.replica.fetchers" : "1",
          "log.dirs" : "/kafka-logs",
          "controlled.shutdown.enable" : "true",
          "compression.type" : "producer",
          "offsets.load.buffer.size" : "5242880",
          "controlled.shutdown.max.retries" : "3",
          "offsets.topic.replication.factor" : "3",
          "queued.max.requests" : "500",
          "auto.leader.rebalance.enable" : "true",
          "leader.imbalance.check.interval.seconds" : "300",
          "replica.lag.time.max.ms" : "10000",
          "socket.request.max.bytes" : "104857600",
          "zookeeper.session.timeout.ms" : "30000",
          "kafka.timeline.metrics.truststore.path" : "{{metric_truststore_path}}",
          "log.retention.bytes" : "-1",
          "num.network.threads" : "3",
          "kafka.timeline.metrics.protocol" : "{{metric_collector_protocol}}",
          "offsets.retention.minutes" : "86400000",
          "kafka.metrics.reporters" : "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter",
          "log.cleanup.interval.mins" : "10",
          "socket.send.buffer.bytes" : "102400",
          "log.retention.hours" : "168",
          "kafka.timeline.metrics.reporter.enabled" : "true",
          "num.partitions" : "1",
          "listeners" : "PLAINTEXT://localhost:6667",
          "socket.receive.buffer.bytes" : "102400",
          "replica.fetch.min.bytes" : "1",
          "kafka.timeline.metrics.hosts" : "{{ams_collector_hosts}}",
          "sasl.enabled.mechanisms" : "GSSAPI",
          "external.kafka.metrics.exclude.prefix" : "kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec,kafka.server.KafkaServer.ClusterId",
          "controller.message.queue.size" : "10",
          "kafka.ganglia.metrics.reporter.enabled" : "true",
          "log.index.size.max.bytes" : "10485760",
          "offsets.retention.check.interval.ms" : "600000",
          "producer.purgatory.purge.interval.requests" : "10000",
          "kafka.ganglia.metrics.group" : "kafka",
          "security.inter.broker.protocol" : "PLAINTEXT",
          "offsets.topic.compression.codec" : "0",
          "replica.fetch.max.bytes" : "1048576",
          "leader.imbalance.per.broker.percentage" : "10",
          "kafka.timeline.metrics.truststore.type" : "{{metric_truststore_type}}"
        }
      }
    },
    {
      "logfeeder-system_log-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logfeeder_secure_log_content" : "{\n  \"input\": [\n    {\n      \"type\": \"secure_log\",\n      \"rowtype\": \"service\",\n      \"path\": \"/var/log/secure\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"filter\": \"grok\",\n      \"conditions\": {\n        \"fields\": {\n          \"type\": [\n            \"secure_log\"\n          ]\n        }\n      },\n      \"multiline_pattern\": \"^(%{SYSLOGTIMESTAMP:logtime})\",\n      \"message_pattern\": \"(?m)^%{SYSLOGTIMESTAMP:logtime}%{SPACE}%{SYSLOGHOST:host}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\": {\n        \"logtime\": {\n          \"map_date\": {\n            \"target_date_pattern\": \"yyyy-MM-dd HH:mm:ss,SSS\",\n            \"src_date_pattern\" :\"MMM dd HH:mm:ss\"\n          }\n        }\n      }\n    }\n  ]\n}",
          "logfeeder_system_log_enabled" : "false",
          "logfeeder_system_messages_content" : "{\n  \"input\": [\n    {\n      \"type\": \"system_message\",\n      \"rowtype\": \"service\",\n      \"path\": \"/var/log/messages\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"filter\": \"grok\",\n      \"conditions\": {\n        \"fields\": {\n          \"type\": [\n            \"system_message\"\n          ]\n        }\n      },\n      \"multiline_pattern\": \"^(%{SYSLOGTIMESTAMP:logtime})\",\n      \"message_pattern\": \"(?m)^%{SYSLOGTIMESTAMP:logtime}%{SPACE}%{SYSLOGHOST:host}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\": {\n        \"logtime\": {\n          \"map_date\": {\n            \"target_date_pattern\": \"yyyy-MM-dd HH:mm:ss,SSS\",\n            \"src_date_pattern\" :\"MMM dd HH:mm:ss\"\n          }\n        }\n      }\n    }\n  ]\n}"
        }
      }
    },
    {
      "nifi-flow-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n<flowController>\n  <maxTimerDrivenThreadCount>10</maxTimerDrivenThreadCount>\n  <maxEventDrivenThreadCount>5</maxEventDrivenThreadCount>\n  <rootGroup>\n    <id>7c84501d-d10c-407c-b9f3-1d80e38fe36a</id>\n    <name>NiFi Flow</name>\n    <position x=\"0.0\" y=\"0.0\"/>\n    <comment/>\n  </rootGroup>\n  <controllerServices/>\n  <reportingTasks>\n    <reportingTask>\n      <id>3b80ba0f-a6c0-48db-b721-4dbc04cef28e</id>\n      <name>AmbariReportingTask</name>\n      <comment/>\n      <class>org.apache.nifi.reporting.ambari.AmbariReportingTask</class>\n      <schedulingPeriod>{{nifi_ambari_reporting_frequency}}</schedulingPeriod>\n      <scheduledState>RUNNING</scheduledState>\n      <schedulingStrategy>TIMER_DRIVEN</schedulingStrategy>\n      <property>\n        <name>Metrics Collector URL</name>\n        <value>${ambari.metrics.collector.url}</value>\n      </property>\n      <property>\n        <name>Application ID</name>\n        <value>${ambari.application.id}</value>\n      </property>\n      <property>\n        <name>Hostname</name>\n        <value>${hostname(true)}</value>\n      </property>\n    </reportingTask>\n  </reportingTasks>\n</flowController>"
        }
      }
    },
    {
      "nifi-jaas-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\nNiFiClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{nifi_service_keytab}}\"\n    storeKey=true\n    useTicketCache=false\n    principal=\"{{nifi_service_principal}}\";\n};\nRegistryClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{nifi_service_keytab}}\"\n    storeKey=true\n    useTicketCache=false\n    principal=\"{{nifi_service_principal}}\";\n};"
        }
      }
    },
    {
      "registry-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "registry_log_maxbackupindex" : "20",
          "registry_log_maxfilesize" : "256",
          "content" : "\n # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.\n level: INFO\n # Logger-specific levels.\n loggers:\n  # Sets the level for 'com.example.app' to DEBUG.\n  com.hortonworks.registry: INFO\n appenders:\n   - type: file\n     threshold: DEBUG\n     logFormat: \"%-6level [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n\"\n     currentLogFilename: {{registry_log_dir}}/registry.log\n     archivedLogFilenamePattern: {{registry_log_dir}}/registry-%d{yyyy-MM-dd}-%i.log.gz\n     archivedFileCount: {{registry_log_maxbackupindex}}\n     timeZone: UTC\n     maxFileSize: {{registry_log_maxfilesize}}"
        }
      }
    },
    {
      "ams-hbase-security-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase.coprocessor.master.classes" : "",
          "hbase.myclient.keytab" : "",
          "hadoop.security.authentication" : "",
          "ams.zookeeper.keytab" : "",
          "hbase.zookeeper.property.jaasLoginRenew" : "",
          "hbase.regionserver.keytab.file" : "",
          "hbase.zookeeper.property.authProvider.1" : "",
          "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "",
          "hbase.coprocessor.region.classes" : "",
          "hbase.security.authentication" : "",
          "hbase.master.keytab.file" : "",
          "hbase.security.authorization" : "",
          "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : ""
        }
      }
    },
    {
      "storm-env" : {
        "properties_attributes" : { },
        "properties" : {
          "storm_user_nofile_limit" : "128000",
          "jmxremote_port" : "56431",
          "storm.atlas.hook" : "false",
          "storm_log_dir" : "/var/log/storm",
          "storm_pid_dir" : "/var/run/storm",
          "nimbus_seeds_supported" : "true",
          "storm_logs_supported" : "true",
          "storm_user" : "storm",
          "storm_user_nproc_limit" : "65536",
          "content" : "\n#!/bin/bash\n\n# Set Storm specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\n\nexport STORM_CONF_DIR={{conf_dir}}\nexport STORM_HOME={{storm_component_home_dir}}\nexport STORM_JAR_JVM_OPTS={{jar_jvm_opts}}\n\n#set storm-auto creds\n# check if storm_jaas.conf in config , only enable storm_auto_creds in secure mode.\nSTORM_JAAS_CONF=$STORM_HOME/conf/storm_jaas.conf\nSTORM_AUTOCREDS_LIB_DIR=$STORM_HOME/external/storm-autocreds\n\nif [ -f $STORM_JAAS_CONF ] && [ -d $STORM_AUTOCREDS_LIB_DIR ]; then\nexport STORM_EXT_CLASSPATH=\"$STORM_AUTOCREDS_LIB_DIR/*\"\nfi"
        }
      }
    },
    {
      "ranger-storm-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "nifi-registry-ambari-config" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.registry.database.dir" : "{nifi_registry_internal_dir}/database",
          "nifi.registry.port.ssl" : "61443",
          "nifi.registry.initial_mem" : "512m",
          "nifi.registry.max_mem" : "512m",
          "nifi.registry.internal.config.dir" : "{nifi_registry_internal_dir}/conf",
          "nifi.registry.port" : "61080",
          "nifi.registry.internal.dir" : "/var/lib/nifi-registry",
          "nifi.registry.config.dir" : "{nifi_registry_install_dir}/conf"
        }
      }
    },
    {
      "nifi-registry-ambari-ssl-config" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.registry.security.keystore" : "{{nifi_registry_config_dir}}/keystore.jks",
          "nifi.registry.security.needClientAuth" : "false",
          "nifi.registry.security.truststore" : "{{nifi_registry_config_dir}}/truststore.jks",
          "nifi.registry.security.keystoreType" : "",
          "nifi.registry.security.truststoreType" : "",
          "nifi.toolkit.tls.regenerate" : "false",
          "nifi.registry.ssl.isenabled" : "false",
          "nifi.registry.initial.admin.identity" : "",
          "content" : "\n            <!-- Provide the identity (typically a DN) of NiFi nodes. -->\n\n            <!--\n            <property name=\"NiFi Identity 1\"></property>\n            <property name=\"NiFi Identity 2\"></property>\n            <property name=\"NiFi Identity 3\"></property>\n            <property name=\"NiFi Identity 4\"></property>\n            -->"
        }
      }
    },
    {
      "ranger-storm-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ranger-storm-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "infra-solr-env" : {
        "properties_attributes" : { },
        "properties" : {
          "infra_solr_keystore_type" : "jks",
          "infra_solr_kerberos_keytab" : "/etc/security/keytabs/infra_solr.service.keytab",
          "infra_solr_keystore_location" : "/etc/security/serverKeys/infra.solr.keyStore.jks",
          "infra_solr_truststore_type" : "jks",
          "infra_solr_datadir" : "/opt/ambari_infra_solr/data",
          "infra_solr_web_kerberos_keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "infra_solr_user" : "infra-solr",
          "infra_solr_log_dir" : "/var/log/ambari-infra-solr",
          "infra_solr_jmx_port" : "18886",
          "infra_solr_maxmem" : "2048",
          "content" : "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# By default the script will use JAVA_HOME to determine which java\n# to use, but you can set a specific path for Solr to use without\n# affecting other Java applications on your server/workstation.\nSOLR_JAVA_HOME={{java64_home}}\n\n# Increase Java Min/Max Heap as needed to support your indexing / query needs\nSOLR_JAVA_MEM=\"-Xms{{infra_solr_min_mem}}m -Xmx{{infra_solr_max_mem}}m\"\n\n# Enable verbose GC logging\nGC_LOG_OPTS=\"-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails \\\n-XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime\"\n\n# These GC settings have shown to work well for a number of common Solr workloads\nGC_TUNE=\"-XX:NewRatio=3 \\\n-XX:SurvivorRatio=4 \\\n-XX:TargetSurvivorRatio=90 \\\n-XX:MaxTenuringThreshold=8 \\\n-XX:+UseConcMarkSweepGC \\\n-XX:+UseParNewGC \\\n-XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 \\\n-XX:+CMSScavengeBeforeRemark \\\n-XX:PretenureSizeThreshold=64m \\\n-XX:+UseCMSInitiatingOccupancyOnly \\\n-XX:CMSInitiatingOccupancyFraction=50 \\\n-XX:CMSMaxAbortablePrecleanTime=6000 \\\n-XX:+CMSParallelRemarkEnabled \\\n-XX:+ParallelRefProcEnabled\"\n\n# Set the ZooKeeper connection string if using an external ZooKeeper ensemble\n# e.g. host1:2181,host2:2181/chroot\n# Leave empty if not using SolrCloud\nZK_HOST=\"{{zookeeper_quorum}}{{infra_solr_znode}}\"\n\n# Set the ZooKeeper client timeout (for SolrCloud mode)\nZK_CLIENT_TIMEOUT=\"60000\"\n\n# By default the start script uses \"localhost\"; override the hostname here\n# for production SolrCloud environments to control the hostname exposed to cluster state\n#SOLR_HOST=\"192.168.1.1\"\n\n# By default the start script uses UTC; override the timezone if needed\n#SOLR_TIMEZONE=\"UTC\"\n\n# Set to true to activate the JMX RMI connector to allow remote JMX client applications\n# to monitor the JVM hosting Solr; set to \"false\" to disable that behavior\n# (false is recommended in production environments)\nENABLE_REMOTE_JMX_OPTS=\"true\"\n\n# The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here\nRMI_PORT={{infra_solr_jmx_port}}\n\n# Anything you add to the SOLR_OPTS variable will be included in the java\n# start command line as-is, in ADDITION to other options. If you specify the\n# -a option on start script, those options will be appended as well. Examples:\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.clustering.enabled=true\"\nSOLR_OPTS=\"$SOLR_OPTS -Ddisable.configEdit=true\"\n\n# Location where the bin/solr script will save PID files for running instances\n# If not set, the script will create PID files in $SOLR_TIP/bin\nSOLR_PID_DIR={{infra_solr_piddir}}\n\n# Path to a directory where Solr creates index files, the specified directory\n# must contain a solr.xml; by default, Solr will use server/solr\nSOLR_HOME={{infra_solr_datadir}}\n\n# Solr provides a default Log4J configuration properties file in server/resources\n# however, you may want to customize the log settings and file appender location\n# so you can point the script to use a different log4j.properties file\nLOG4J_PROPS={{infra_solr_conf}}/log4j.properties\n\n# Location where Solr should write logs to; should agree with the file appender\n# settings in server/resources/log4j.properties\nSOLR_LOGS_DIR={{infra_solr_log_dir}}\n\n# Sets the port Solr binds to, default is 8983\nSOLR_PORT={{infra_solr_port}}\n\n# Be sure to update the paths to the correct keystore for your environment\n{% if infra_solr_ssl_enabled %}\nSOLR_SSL_KEY_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_KEY_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_TRUST_STORE={{infra_solr_truststore_location}}\nSOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_truststore_password}}\nSOLR_SSL_NEED_CLIENT_AUTH=false\nSOLR_SSL_WANT_CLIENT_AUTH=false\n{% endif %}\n\n# Uncomment to set a specific SSL port (-Djetty.ssl.port=N); if not set\n# and you are using SSL, then the start script will use SOLR_PORT for the SSL port\n#SOLR_SSL_PORT=\n\n{% if security_enabled -%}\nSOLR_HOST=`hostname -f`\nSOLR_JAAS_FILE={{infra_solr_jaas_file}}\nSOLR_KERB_KEYTAB={{infra_solr_web_kerberos_keytab}}\nSOLR_KERB_PRINCIPAL={{infra_solr_web_kerberos_principal}}\nSOLR_KERB_NAME_RULES=\"{{infra_solr_kerberos_name_rules}}\"\n\nSOLR_AUTHENTICATION_CLIENT_CONFIGURER=\"org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer\"\nSOLR_AUTHENTICATION_OPTS=\" -DauthenticationPlugin=org.apache.solr.security.KerberosPlugin -Djava.security.auth.login.config=$SOLR_JAAS_FILE -Dsolr.kerberos.principal=${SOLR_KERB_PRINCIPAL} -Dsolr.kerberos.keytab=${SOLR_KERB_KEYTAB} -Dsolr.kerberos.cookie.domain=${SOLR_HOST}\"\n{% endif %}",
          "infra_solr_kerberos_name_rules" : "DEFAULT",
          "infra_solr_minmem" : "1024",
          "infra_solr_port" : "8886",
          "infra_solr_pid_dir" : "/var/run/ambari-infra-solr",
          "infra_solr_ssl_enabled" : "false",
          "infra_solr_znode" : "/infra-solr",
          "infra_solr_truststore_location" : "/etc/security/serverKeys/infra.solr.trustStore.jks"
        }
      }
    },
    {
      "kafka_client_jaas_conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n{% if kerberos_security_enabled %}\nKafkaClient {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseTicketCache=true\nrenewTicket=true\nserviceName=\"{{kafka_bare_jaas_principal}}\";\n};\n{% endif %}"
        }
      }
    },
    {
      "logfeeder-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logfeeder_keystore_type" : "jks",
          "logfeeder_truststore_location" : "/etc/security/serverKeys/logsearch.trustStore.jks",
          "logfeeder_kerberos_keytab" : "/etc/security/keytabs/logfeeder.service.keytab",
          "logfeeder_pid_dir" : "/var/run/ambari-logsearch-logfeeder",
          "logfeeder_solr_audit_logs_enable" : "true",
          "content" : "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\n\nexport LOGFEEDER_PATH={{logfeeder_dir}}\n\nexport LOGFEEDER_CONF_DIR={{logsearch_logfeeder_conf}}\n\n#Logfile e.g. /var/log/logfeeder.log\nexport LOGFILE={{logfeeder_log}}\n\n#pid file e.g. /var/run/logfeeder.pid\nexport PID_FILE={{logfeeder_pid_file}}\n\nexport JAVA_HOME={{java64_home}}\n\nif [ \"$LOGFEEDER_JAVA_MEM\" = \"\" ]; then\n  export LOGFEEDER_JAVA_MEM=-Xmx{{logfeeder_max_mem}}\nfi\n\n{% if logfeeder_use_ssl %}\nexport LOGFEEDER_SSL=\"true\"\nexport LOGFEEDER_KEYSTORE_LOCATION={{logfeeder_keystore_location}}\nexport LOGFEEDER_KEYSTORE_TYPE={{logfeeder_keystore_type}}\nexport LOGFEEDER_TRUSTSTORE_LOCATION={{logfeeder_truststore_location}}\nexport LOGFEEDER_TRUSTSTORE_TYPE={{logfeeder_truststore_type}}\n{% endif %}",
          "logfeeder_external_solr_kerberos_keytab" : "",
          "logfeeder_max_mem" : "512m",
          "logfeeder_log_dir" : "/var/log/ambari-logsearch-logfeeder",
          "logfeeder_truststore_type" : "jks",
          "logfeeder_keystore_location" : "/etc/security/serverKeys/logsearch.keyStore.jks",
          "logfeeder_solr_service_logs_enable" : "true"
        }
      }
    },
    {
      "nifi-registry-bootstrap-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Java command to use when running nifi-registry\njava=java\n\n# Username to use when running nifi-registry. This value will be ignored on Windows.\nrun.as={{nifi_registry_user}}\n\n# Configure where nifi-registry's lib and conf directories live\nlib.dir={{nifi_registry_install_dir}}/lib\nconf.dir={{nifi_registry_config_dir}}\n\n# How long to wait after telling nifi-registry to shutdown before explicitly killing the Process\ngraceful.shutdown.seconds=20\n\n# Disable JSR 199 so that we can use JSP's without running a JDK\njava.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true\n\n# JVM memory settings\njava.arg.2=-Xms{{nifi_registry_initial_mem}}\njava.arg.3=-Xmx{{nifi_registry_max_mem}}\n\n# Enable Remote Debugging\n#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n\njava.arg.4=-Djava.net.preferIPv4Stack=true\n\n# allowRestrictedHeaders is required for Cluster/Node communications to work properly\njava.arg.5=-Dsun.net.http.allowRestrictedHeaders=true\njava.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol"
        }
      }
    },
    {
      "ams-env" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.skip.disk.metrics.patterns" : "true",
          "ambari_metrics_user" : "ams",
          "metrics_monitor_log_dir" : "/var/log/ambari-metrics-monitor",
          "metrics_collector_heapsize" : "512",
          "failover_strategy_blacklisted_interval" : "300",
          "metrics_collector_pid_dir" : "/var/run/ambari-metrics-collector",
          "metrics_collector_log_dir" : "/var/log/ambari-metrics-collector",
          "metrics_monitor_pid_dir" : "/var/run/ambari-metrics-monitor",
          "ams_classpath_additional" : "",
          "content" : "\n# Set environment variables here.\n\n# AMS instance name\nexport AMS_INSTANCE_NAME={{hostname}}\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase Tables Initialization check enabled\nexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"\n\n# Metrics collector host will be blacklisted for specified number of seconds if metric monitor failed to connect to it.\nexport AMS_FAILOVER_STRATEGY_BLACKLISTED_INTERVAL={{failover_strategy_blacklisted_interval}}\n\n# Extra Java CLASSPATH elements for Metrics Collector. Optional.\nexport COLLECTOR_ADDITIONAL_CLASSPATH={{ams_classpath_additional}}"
        }
      }
    },
    {
      "nifi-registry-providers-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<providers>\n    <flowPersistenceProvider>\n        <class>org.apache.nifi.registry.provider.flow.FileSystemFlowPersistenceProvider</class>\n        <property name=\"Flow Storage Directory\">{{nifi_registry_internal_dir}}/flow_storage</property>\n    </flowPersistenceProvider>\n</providers>"
        }
      }
    },
    {
      "ranger-kafka-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "nifi-registry-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.registry.kerberos.spnego.principal" : "",
          "nifi.registry.security.truststore" : "{{nifi_registry_truststore}}",
          "nifi.registry.security.authorizers.configuration.file" : "{{nifi_registry_config_dir}}/authorizers.xml",
          "nifi.registry.security.identity.mapping.value.kerb" : "",
          "nifi.registry.extension.dir.2" : "",
          "nifi.registry.security.identity.provider" : "",
          "nifi.registry.extension.dir.1" : "",
          "nifi.registry.security.keystore" : "{{nifi_registry_keystore}}",
          "nifi.registry.security.needClientAuth" : "{{nifi_registry_needClientAuth}}",
          "nifi.registry.security.identity.mapping.pattern.kerb" : "",
          "nifi.registry.db.directory" : "{{nifi_registry_database_dir}}",
          "nifi.registry.security.identity.providers.configuration.file" : "{{nifi_registry_config_dir}}/identity-providers.xml",
          "nifi.registry.web.jetty.threads" : "200",
          "nifi.registry.security.identity.mapping.value.dn" : "",
          "nifi.registry.web.http.host" : "{{nifi_registry_nonssl_host}}",
          "nifi.registry.providers.configuration.file" : "{{nifi_registry_config_dir}}/providers.xml",
          "nifi.registry.kerberos.spnego.authentication.expiration" : "12 hours",
          "nifi.registry.web.http.port" : "{{nifi_registry_port}}",
          "nifi.registry.security.keyPasswd" : "{{nifi_registry_keyPasswd}}",
          "nifi.registry.web.https.host" : "{{nifi_registry_ssl_host}}",
          "nifi.registry.security.authorizer" : "{{nifi_registry_authorizer}}",
          "nifi.registry.security.identity.mapping.pattern.dn" : "",
          "nifi.registry.security.truststorePasswd" : "{{nifi_registry_truststorePasswd}}",
          "nifi.registry.db.url.append" : ";LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE",
          "nifi.registry.kerberos.spnego.keytab.location" : "",
          "nifi.registry.security.keystoreType" : "{{nifi_registry_keystoreType}}",
          "nifi.registry.security.truststoreType" : "{{nifi_registry_truststoreType}}",
          "nifi.registry.security.keystorePasswd" : "{{nifi_registry_keystorePasswd}}",
          "nifi.registry.web.jetty.working.directory" : "{{nifi_registry_internal_dir}}/work/jetty",
          "nifi.registry.kerberos.krb5.file" : "",
          "nifi.registry.web.https.port" : "{{nifi_registry_ssl_port}}",
          "nifi.registry.web.war.directory" : "{{nifi_registry_install_dir}}/lib"
        }
      }
    },
    {
      "logsearch-admin-json" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "{#\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n # regarding copyright ownership.  The ASF licenses this file\n # to you under the Apache License, Version 2.0 (the\n # \"License\"); you may not use this file except in compliance\n # with the License.  You may obtain a copy of the License at\n #\n #   http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n # distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #}\n{\n \"users\": [{\n \"name\": \"Logsearch Admin\",\n \"username\": \"{{logsearch_admin_username}}\",\n \"password\": \"{{logsearch_admin_password}}\",\n \"en_password\": \"\"\n  }]\n}",
          "logsearch_admin_username" : "ambari_logsearch_admin"
        }
      }
    },
    {
      "nifi-registry-identity-providers-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n<!--\n    This file lists the login identity providers to use when running securely. In order\n    to use a specific provider it must be configured here and it's identifier\n    must be specified in the nifi.properties file.\n-->\n<identityProviders>\n    <!--\n        Identity Provider for users logging in with username/password against an LDAP server.\n\n        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.\n\n        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n        'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using LDAPS or START_TLS.\n        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n        'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).\n        'User Search Filter' - Filter for searching for users against the 'User Search Base'.\n            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.\n\n        'Identity Strategy' - Strategy to identify users. Possible values are USE_DN and USE_USERNAME.\n            The default functionality if this property is missing is USE_DN in order to retain\n            backward compatibility. USE_DN will use the full DN of the user entry if possible.\n            USE_USERNAME will use the username the user logged in with.\n        'Authentication Expiration' - The duration of how long the user authentication is valid\n            for. If the user never logs out, they will be required to log back in following\n            this duration.\n    -->\n    <!-- To enable the ldap-identity-provider remove 2 lines. This is 1 of 2.\n    <provider>\n        <identifier>ldap-provider</identifier>\n        <class>org.apache.nifi.registry.security.ldap.LdapIdentityProvider</class>\n        <property name=\"Authentication Strategy\">SIMPLE</property>\n\n        <property name=\"Manager DN\">cn=read-only-admin,dc=example,dc=com</property>\n        <property name=\"Manager Password\">password</property>\n\n        <property name=\"Referral Strategy\">FOLLOW</property>\n        <property name=\"Connect Timeout\">10 secs</property>\n        <property name=\"Read Timeout\">10 secs</property>\n\n        <property name=\"Url\">ldap://localhost:8389</property>\n        <property name=\"User Search Base\">dc=example,dc=com</property>\n        <property name=\"User Search Filter\">(uid={0})</property>\n\n        <property name=\"Identity Strategy\">USE_DN</property>\n\n        <property name=\"Authentication Expiration\">12 hours</property>\n    </provider>\n    To enable the ldap-identity-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n    Identity Provider for users logging in with username/password against a Kerberos KDC server.\n\n    'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).\n    'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.\n    -->\n    {% if not security_enabled %}\n    <!-- To enable the kerberos-identity-provider remove 2 lines. This is 1 of 2.\n    {% endif %}\n    <provider>\n        <identifier>kerberos-identity-provider</identifier>\n        <class>org.apache.nifi.registry.web.security.authentication.kerberos.KerberosIdentityProvider</class>\n        <property name=\"Default Realm\">{{nifi_registry_kerberos_realm}}</property>\n        <property name=\"Authentication Expiration\">{{nifi_registry_kerberos_authentication_expiration}}</property>\n        <property name=\"Enable Debug\">false</property>\n    </provider>\n    {% if not security_enabled %}\n    To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->\n    {% endif %}\n</identityProviders>"
        }
      }
    },
    {
      "nifi-env" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi_node_log_dir" : "/var/log/nifi",
          "nifi_user" : "nifi",
          "nifi_pid_dir" : "/var/run/nifi",
          "nifi_user_nproc_limit" : "10000",
          "nifi_user_nofile_limit" : "50000",
          "nifi_group" : "nifi",
          "content" : "\n#!/bin/sh\n#\n#    Licensed to the Apache Software Foundation (ASF) under one or more\n#    contributor license agreements.  See the NOTICE file distributed with\n#    this work for additional information regarding copyright ownership.\n#    The ASF licenses this file to You under the Apache License, Version 2.0\n#    (the \"License\"); you may not use this file except in compliance with\n#    the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#\n\n# The java implementation to use.\nexport JAVA_HOME={{jdk64_home}}\n\nexport NIFI_HOME={{nifi_install_dir}}\n\n#The directory for the NiFi pid file\nexport NIFI_PID_DIR=\"{{nifi_pid_dir}}\"\n\n#The directory for NiFi log files\nexport NIFI_LOG_DIR=\"{{nifi_node_log_dir}}\""
        }
      }
    },
    {
      "logsearch-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch.collection.audit.logs.replication.factor" : "1",
          "logsearch.spnego.kerberos.enabled" : "false",
          "logsearch.solr.collection.audit.logs" : "audit_logs",
          "logsearch.auth.jwt.query.param.original_url" : "originalUrl",
          "logsearch.auth.jwt.provider_url" : "",
          "logsearch.solr.collection.service.logs" : "hadoop_logs",
          "logsearch.roles.allowed" : "AMBARI.ADMINISTRATOR,CLUSTER.ADMINISTRATOR",
          "logsearch.spnego.kerberos.host" : "_HOST",
          "logsearch.auth.jwt.public_key" : "",
          "logsearch.auth.jwt.audiances" : "",
          "logsearch.auth.jwt.enabled" : "false",
          "logsearch.audit.logs.split.interval.mins" : "15",
          "logsearch.service.logs.fields" : "logtime,level,event_count,ip,type,seq_num,path,file,line_number,host,log_message,id",
          "logsearch.auth.external_auth.enabled" : "true",
          "logsearch.collection.audit.logs.numshards" : "2",
          "logsearch.ranger.audit.logs.collection.name" : "ranger_audits",
          "logsearch.logfeeder.include.default.level" : "FATAL,ERROR,WARN",
          "logsearch.spnego.kerberos.keytab" : "",
          "logsearch.auth.external_auth.login_url" : "/api/v1/users/$USERNAME/privileges?fields=*",
          "logsearch.collection.service.logs.replication.factor" : "1",
          "logsearch.solr.metrics.collector.hosts" : "{metrics_collector_hosts}",
          "logsearch.collection.service.logs.numshards" : "2",
          "logsearch.auth.jwt.cookie.name" : "hadoop-jwt",
          "logsearch.service.logs.split.interval.mins" : "15",
          "logsearch.solr.audit.logs.use.ranger" : "false",
          "logsearch.auth.external_auth.host_url" : "{ambari_server_auth_host_url}"
        }
      }
    },
    {
      "logfeeder-output-config" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "{#\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n # regarding copyright ownership.  The ASF licenses this file\n # to you under the Apache License, Version 2.0 (the\n # \"License\"); you may not use this file except in compliance\n # with the License.  You may obtain a copy of the License at\n #\n #   http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n # distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #}\n{\n  \"output\":[\n    {\n      \"comment\":\"Output to solr for service logs\",\n      \"is_enabled\":\"{{solr_service_logs_enable}}\",\n      \"destination\":\"solr\",\n      \"zk_connect_string\":\"{{logsearch_solr_zk_quorum}}{{logsearch_solr_zk_znode}}\",\n      \"collection\":\"{{logsearch_solr_collection_service_logs}}\",\n      \"number_of_shards\": \"{{logsearch_collection_service_logs_numshards}}\",\n      \"splits_interval_mins\": \"{{logsearch_service_logs_split_interval_mins}}\",\n      \"conditions\":{\n        \"fields\":{\n          \"rowtype\":[\n            \"service\"\n          ]\n\n        }\n\n      }\n\n    },\n    {\n      \"comment\":\"Output to solr for audit records\",\n      \"is_enabled\":\"{{solr_audit_logs_enable}}\",\n      \"destination\":\"solr\",\n      \"zk_connect_string\":\"{{logsearch_solr_zk_quorum}}{{logsearch_solr_zk_znode}}\",\n      \"collection\":\"{{logsearch_solr_collection_audit_logs}}\",\n      \"number_of_shards\": \"{{logsearch_collection_audit_logs_numshards}}\",\n      \"splits_interval_mins\": \"{{logsearch_audit_logs_split_interval_mins}}\",\n      \"conditions\":{\n        \"fields\":{\n          \"rowtype\":[\n            \"audit\"\n          ]\n\n        }\n\n      }\n\n    }\n\n  ]\n  \n}"
        }
      }
    },
    {
      "nifi-toolkit-env" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi_toolkit_java_options" : "-Xms128m -Xmx256m"
        }
      }
    },
    {
      "nifi-registry-logback-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<configuration scan=\"true\" scanPeriod=\"30 seconds\">\n    <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n        <resetJUL>true</resetJUL>\n    </contextListener>\n\n    <appender name=\"APP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>{{nifi_registry_log_dir}}/nifi-registry-app.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n              For daily rollover, use 'app_%d.log'.\n              For hourly rollover, use 'app_%d{yyyy-MM-dd_HH}.log'.\n              To GZIP rolled files, replace '.log' with '.log.gz'.\n              To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>{{nifi_registry_log_dir}}/nifi-registry-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            <immediateFlush>true</immediateFlush>\n        </encoder>\n    </appender>\n\n    <appender name=\"BOOTSTRAP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>{{nifi_registry_log_dir}}/nifi-registry-bootstrap.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n              For daily rollover, use 'user_%d.log'.\n              For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n              To GZIP rolled files, replace '.log' with '.log.gz'.\n              To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>{{nifi_registry_log_dir}}/nifi-registry-bootstrap_%d.log</fileNamePattern>\n            <!-- keep 5 log files worth of history -->\n            <maxHistory>5</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->\n\n    <logger name=\"org.apache.nifi.registry\" level=\"INFO\"/>\n\n    <!-- To see SQL statements set this to DEBUG -->\n    <logger name=\"org.hibernate.SQL\" level=\"INFO\" />\n    <!-- To see the values in SQL statements set this to TRACE -->\n    <logger name=\"org.hibernate.type\" level=\"INFO\" />\n\n    <!--\n        Logger for capturing Bootstrap logs and NiFi Registry's standard error and standard out.\n    -->\n    <logger name=\"org.apache.nifi.registry.bootstrap\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n    <logger name=\"org.apache.nifi.registry.bootstrap.Command\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"CONSOLE\" />\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <!-- Everything written to NiFi Registry's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->\n    <logger name=\"org.apache.nifi.registry.StdOut\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <!-- Everything written to NiFi Registry's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->\n    <logger name=\"org.apache.nifi.registry.StdErr\" level=\"ERROR\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"APP_FILE\"/>\n    </root>\n\n</configuration>"
        }
      }
    },
    {
      "streamline-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "streamline_log_maxfilesize" : "256",
          "content" : "\n # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.\n level: INFO\n # Logger-specific levels.\n loggers:\n  # Sets the level for 'com.example.app' to DEBUG.\n  com.hortonworks.streamline: INFO\n appenders:\n   - type: file\n     threshold: DEBUG\n     logFormat: \"%-6level [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n\"\n     currentLogFilename: {{streamline_log_dir}}/streamline.log\n     archivedLogFilenamePattern: {{streamline_log_dir}}/streamline-%d{yyyy-MM-dd}-%i.log.gz\n     archivedFileCount: {{streamline_log_maxbackupindex}}\n     timeZone: UTC\n     maxFileSize: {{streamline_log_maxfilesize}}",
          "streamline_log_maxbackupindex" : "20"
        }
      }
    },
    {
      "ams-site" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.cluster.aggregator.hourly.interval" : "3600",
          "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.hourly.interval" : "3600",
          "timeline.metrics.aggregators.skip.blockcache.enabled" : "false",
          "timeline.metrics.service.rpc.address" : "0.0.0.0:60200",
          "timeline.metrics.service.operation.mode" : "embedded",
          "timeline.metrics.aggregator.checkpoint.dir" : "/var/lib/ambari-metrics-collector/checkpoint",
          "failover.strategy" : "round-robin",
          "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.http.policy" : "HTTP_ONLY",
          "timeline.metrics.downsampler.topn.value" : "10",
          "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.watcher.timeout" : "30",
          "timeline.metrics.service.checkpointDelay" : "60",
          "timeline.metrics.cluster.aggregator.second.interval" : "120",
          "timeline.metrics.service.webapp.address" : "%HOSTGROUP::host_group_S2%:6188",
          "timeline.metrics.host.aggregator.daily.ttl" : "31536000",
          "timeline.metrics.service.watcher.delay" : "30",
          "timeline.metrics.service.watcher.disabled" : "false",
          "timeline.metrics.hbase.init.check.enabled" : "true",
          "timeline.metrics.host.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.cluster.aggregator.appIds" : "datanode,nodemanager,hbase",
          "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.resultset.fetchSize" : "2000",
          "timeline.metrics.cluster.aggregator.hourly.ttl" : "31536000",
          "cluster.zookeeper.quorum" : "{{cluster_zookeeper_quorum_hosts}}",
          "timeline.metrics.downsampler.topn.function" : "max",
          "timeline.metrics.host.aggregator.ttl" : "86400",
          "phoenix.spool.directory" : "/tmp",
          "timeline.metrics.host.aggregate.splitpoints" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetFetch.98percentile",
          "timeline.metrics.service.handler.thread.count" : "20",
          "timeline.metrics.cache.size" : "150",
          "timeline.metrics.cluster.aggregator.minute.interval" : "300",
          "timeline.metrics.cluster.aggregator.minute.ttl" : "2592000",
          "timeline.metrics.host.aggregator.minute.interval" : "300",
          "timeline.metrics.cluster.aggregator.interpolation.enabled" : "true",
          "timeline.metrics.cache.commit.interval" : "3",
          "timeline.metrics.host.aggregator.minute.disabled" : "false",
          "timeline.metrics.service.metadata.filters" : "ContainerResource",
          "timeline.metrics.cache.enabled" : "true",
          "timeline.metrics.cluster.aggregate.splitpoints" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetFetch.98percentile",
          "timeline.metrics.cluster.aggregator.minute.disabled" : "false",
          "timeline.metrics.service.use.groupBy.aggregators" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "25",
          "timeline.metrics.service.default.result.limit" : "15840",
          "timeline.metrics.hbase.compression.scheme" : "SNAPPY",
          "timeline.metrics.cluster.aggregator.daily.ttl" : "63072000",
          "cluster.zookeeper.property.clientPort" : "{{cluster_zookeeper_clientPort}}",
          "timeline.metrics.sink.report.interval" : "60",
          "timeline.metrics.cluster.aggregator.second.timeslice.interval" : "30",
          "timeline.metrics.cluster.aggregation.sql.filters" : "sdisk\\_%,boottime",
          "timeline.metrics.downsampler.topn.metric.patterns" : "dfs.NNTopUserOpCounts.windowMs=60000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=300000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=1500000.op=__%.user=%",
          "timeline.metrics.host.aggregator.hourly.ttl" : "2592000",
          "timeline.metrics.cluster.aggregator.daily.interval" : "86400",
          "timeline.metrics.host.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.watcher.initial.delay" : "600",
          "timeline.metrics.host.aggregator.minute.ttl" : "604800",
          "timeline.metrics.hbase.data.block.encoding" : "FAST_DIFF",
          "timeline.metrics.cluster.aggregator.second.disabled" : "false",
          "timeline.metrics.sink.collection.period" : "10",
          "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.daily.aggregator.minute.interval" : "86400",
          "timeline.metrics.cluster.aggregator.second.ttl" : "259200"
        }
      }
    },
    {
      "logfeeder-ambari-config" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "{#\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n # regarding copyright ownership.  The ASF licenses this file\n # to you under the Apache License, Version 2.0 (the\n # \"License\"); you may not use this file except in compliance\n # with the License.  You may obtain a copy of the License at\n #\n #   http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n # distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #}\n{\n  \"input\":[\n    {\n      \"type\":\"ambari_agent\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{ambari_agent_log_dir}}/ambari-agent.log\"\n    },\n    {\n      \"type\":\"ambari_server\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{ambari_server_log_dir}}/ambari-server.log\"\n    },\n    {\n      \"type\":\"ambari_alerts\",\n      \"rowtype\":\"service\",\n      \"add_fields\":{\n        \"level\":\"UNKNOWN\"\n      },\n      \"path\":\"{{ambari_server_log_dir}}/ambari-alerts.log\"\n    },\n    {\n      \"type\":\"ambari_config_changes\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{ambari_server_log_dir}}/ambari-config-changes.log\"\n    },\n    {\n      \"type\":\"ambari_eclipselink\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{ambari_server_log_dir}}/ambari-eclipselink.log\"\n    },\n    {\n      \"type\":\"ambari_server_check_database\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{ambari_server_log_dir}}/ambari-server-check-database.log\"\n    },\n    {\n      \"type\":\"ambari_audit\",\n      \"rowtype\":\"audit\",\n      \"add_fields\":{\n        \"logType\":\"AmbariAudit\",\n        \"enforcer\":\"ambari-acl\",\n        \"repoType\":\"1\",\n        \"repo\":\"ambari\",\n        \"level\":\"INFO\"\n      },\n      \"path\":\"{{ambari_server_log_dir}}/ambari-audit.log\"\n    }\n\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_agent\"\n          ]\n\n        }\n\n      },\n      \"log4j_format\":\"\",\n      \"multiline_pattern\":\"^(%{LOGLEVEL:level} %{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{LOGLEVEL:level} %{TIMESTAMP_ISO8601:logtime} %{JAVAFILE:file}:%{INT:line_number} - %{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n\n        },\n        \"level\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"WARNING\",\n            \"post_value\":\"WARN\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_server\"\n          ]\n          \n        }\n        \n      },\n      \"log4j_format\":\"%d{DATE} %5p [%t] %c{1}:%L - %m%n\",\n      \"multiline_pattern\":\"^(%{USER_SYNC_DATE:logtime})\",\n      \"message_pattern\":\"(?m)^%{USER_SYNC_DATE:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{JAVACLASS:logger_name}:%{INT:line_number}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"dd MMM yyyy HH:mm:ss\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_alerts\"\n          ]\n          \n        }\n        \n      },\n      \"log4j_format\":\"%d{DATE} %5p [%t] %c{1}:%L - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_config_changes\"\n          ]\n          \n        }\n        \n      },\n      \"log4j_format\":\"%d{DATE} %5p [%t] %c{1}:%L - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_eclipselink\"\n          ]\n          \n        }\n        \n      },\n      \"log4j_format\":\"%d{DATE} %5p [%t] %c{1}:%L - %m%n\",\n      \"multiline_pattern\":\"^(\\\\[EL%{SPACE}%{LOGLEVEL:level}\\\\])\",\n      \"message_pattern\":\"(?m)^\\\\[EL%{SPACE}%{LOGLEVEL:level}\\\\]:%{SPACE}%{TIMESTAMP_ISO8601:logtime}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss.SSS\"\n          }\n\n        },\n        \"level\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"Warning\",\n            \"post_value\":\"Warn\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_server_check_database\"\n          ]\n          \n        }\n        \n      },\n      \"log4j_format\":\"%d{DATE} %5p [%t] %c{1}:%L - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_audit\"\n          ]\n\n        }\n\n      },\n      \"log4j_format\":\"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:evtTime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:evtTime},%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"evtTime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd'T'HH:mm:ss.SSSXX\"\n          }\n\n        }\n\n      }\n\n    },\n    {\n      \"filter\":\"keyvalue\",\n      \"sort_order\":1,\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ambari_audit\"\n          ]\n\n        }\n\n      },\n      \"source_field\":\"log_message\",\n      \"field_split\":\", \",\n      \"value_borders\":\"()\",\n      \"post_map_values\":{\n        \"User\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"null\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"reqUser\"\n          }\n        },\n        \"Hostname\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"host\"\n          }\n        },\n        \"Host name\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"host\"\n          }\n        },\n        \"RemoteIp\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"cliIP\"\n          }\n        },\n        \"RequestType\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"cliType\"\n          }\n        },\n        \"TaskId\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"task_id\"\n          }\n        },\n        \"Operation\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"action\"\n          }\n        },\n        \"url\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"resource\"\n          }\n        },\n        \"ResourcePath\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"resource\"\n          }\n        },\n        \"Cluster name\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"cluster\"\n          }\n        },\n        \"Reason\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"reason\"\n          }\n        },\n        \"Base URL\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_base_url\"\n          }\n        },\n        \"Command\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"null\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_command\"\n          }\n        },\n        \"Component\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_component\"\n          }\n        },\n        \"Details\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_details\"\n          }\n        },\n        \"Display name\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"null\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_display_name\"\n          }\n        },\n        \"OS\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_os\"\n          }\n        },\n        \"Repo id\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_repo_id\"\n          }\n        },\n        \"Repo version\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"null\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_repo_version\"\n          }\n        },\n        \"Repositories\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_repositories\"\n          }\n        },\n        \"RequestId\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_request_id\"\n          }\n        },\n        \"Roles\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_roles\"\n          }\n        },\n        \"Stack\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_stack\"\n          }\n        },\n        \"Stack version\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_stack_version\"\n          }\n        },\n        \"VersionNote\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"null\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_version_note\"\n          }\n        },\n        \"VersionNumber\":{\n          \"map_fieldvalue\":{\n            \"pre_value\":\"Vnull\",\n            \"post_value\":\"unknown\"\n          },\n          \"map_fieldname\":{\n            \"new_fieldname\":\"ws_version_number\"\n          }\n        },\n        \"Status\":[\n          {\n            \"map_fieldcopy\":{\n              \"copy_name\": \"ws_status\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"Success\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"Successfully queued\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"QUEUED\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"PENDING\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"COMPLETED\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"IN_PROGRESS\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"Failed\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"Failed to queue\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"HOLDING\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"HOLDING_FAILED\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"HOLDING_TIMEDOUT\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"FAILED\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"TIMEDOUT\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"ABORTED\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"SKIPPED_FAILED\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldname\":{\n              \"new_fieldname\":\"result\"\n            }\n          }\n        ],\n        \"ResultStatus\":[\n          {\n            \"map_fieldcopy\":{\n              \"copy_name\": \"ws_result_status\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"200 OK\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"201 Created\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"202 Accepted\",\n              \"post_value\":\"1\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"400 Bad Request\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"401 Unauthorized\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"403 Forbidden\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"404 Not Found\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"409 Resource Conflict\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"500 Internal Server Error\",\n              \"post_value\":\"0\"\n            }\n          },\n          {\n            \"map_fieldname\":{\n              \"new_fieldname\":\"result\"\n            }\n          }\n        ]\n\n      }\n\n    }\n\n  ]\n\n}"
        }
      }
    },
    {
      "logfeeder-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "logfeeder_json_log_maxfilesize" : "10",
          "logfeeder_log_maxbackupindex" : "10",
          "logfeeder_log_maxfilesize" : "10",
          "logfeeder_json_log_maxbackupindex" : "10",
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n  <appender name=\"console\" class=\"org.apache.log4j.ConsoleAppender\">\n    <param name=\"Target\" value=\"System.out\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d [%t] %-5p %C{6} (%F:%L) - %m%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"rolling_file\" class=\"org.apache.log4j.RollingFileAppender\">\n    <param name=\"file\" value=\"{{logfeeder_log_dir}}/logfeeder.log\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"{{logfeeder_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"{{logfeeder_log_maxbackupindex}}\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d [%t] %-5p %C{6} (%F:%L) - %m%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"rolling_file_json\"\n    class=\"org.apache.ambari.logsearch.appender.LogsearchRollingFileAppender\">\n    <param name=\"file\" value=\"{{logfeeder_log_dir}}/logsearch-logfeeder.json\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"{{logfeeder_json_log_maxfilesize}}MB\" />\n    <param name=\"maxBackupIndex\" value=\"{{logfeeder_json_log_maxbackupindex}}\" />\n    <layout class=\"org.apache.ambari.logsearch.appender.LogsearchConversion\" />\n  </appender>\n\n\n  <!-- Logs to suppress BEGIN -->\n  <category name=\"org.apache.solr.common.cloud.ZkStateReader\" additivity=\"false\">\n    <priority value=\"error\" />\n    <appender-ref ref=\"daily_rolling_file\" />\n  </category>\n\n  <category name=\"apache.solr.client.solrj.impl.CloudSolrClient\" additivity=\"false\">\n    <priority value=\"fatal\" />\n    <appender-ref ref=\"daily_rolling_file\" />\n  </category>\n  <!-- Logs to suppress END -->\n\n  <category name=\"org.apache.ambari.logfeeder\" additivity=\"false\">\n    <priority value=\"INFO\" />\n    <appender-ref ref=\"console\" />\n    <!-- <appender-ref ref=\"daily_rolling_file\" /> -->\n    <appender-ref ref=\"rolling_file_json\"/>\n  </category>\n\n  <root>\n    <priority value=\"warn\"/>\n    <!-- <appender-ref ref=\"rolling_file\"/> -->\n    <!-- <appender-ref ref=\"daily_rolling_file\" /> -->\n  </root>\n</log4j:configuration>"
        }
      }
    },
    {
      "ranger-kafka-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ranger-storm-audit" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "logfeeder-custom-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : " ",
          "service_component_mappings" : ""
        }
      }
    },
    {
      "streamline_jaas_conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\nStreamlineServer {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseKeyTab=true\nkeyTab=\"{{streamline_keytab_path}}\"\nstoreKey=true\nuseTicketCache=false\nserviceName=\"{{streamline_bare_principal}}\"\nprincipal=\"{{streamline_jaas_principal}}\";\n};\nStormClient {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseKeyTab=true\nkeyTab=\"{{streamline_keytab_path}}\"\nstoreKey=true\nuseTicketCache=false\nserviceName=\"nimbus\"\nprincipal=\"{{streamline_jaas_principal}}\";\n};\nRegistryClient {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseKeyTab=true\nkeyTab=\"{{streamline_keytab_path}}\"\nstoreKey=true\nuseTicketCache=false\nprincipal=\"{{streamline_jaas_principal}}\";\n};\nClient {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseKeyTab=true\nkeyTab=\"{{streamline_keytab_path}}\"\nstoreKey=true\nuseTicketCache=false\ndebug=true\nprincipal=\"{{streamline_jaas_principal}}\";\n};"
        }
      }
    },
    {
      "nifi-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "NIFI_MASTER:nifi_app,nifi_bootstrap,nifi_setup,nifi_user;NIFI_CA:nifi_ca",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"nifi_app\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-app.log\"\n    },\n    {\n      \"type\":\"nifi_bootstrap\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-bootstrap.log\"\n    },\n    {\n      \"type\":\"nifi_setup\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-setup.log\"\n    },\n    {\n      \"type\":\"nifi_user\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-user.log\"\n    },\n    {\n      \"type\":\"nifi_ca\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-ca.stdout\"\n    }\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"nifi_app\",\n            \"nifi_bootstrap\",\n            \"nifi_setup\",\n            \"nifi_user\",\n            \"nifi_ca\"\n          ]\n        }\n      },\n      \"log4j_format\":\"\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n        }\n      }\n    }\n  ]\n}",
          "service_name" : "NiFi"
        }
      }
    },
    {
      "ams-hbase-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase_master_maxperm_size" : "128",
          "max_open_files_limit" : "32768",
          "regionserver_xmn_size" : "128",
          "hbase_master_heapsize" : "640",
          "hbase_regionserver_xmn_ratio" : "0.2",
          "hbase_master_xmn_size" : "192",
          "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n\n# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\nexport HBASE_HOME={{ams_hbase_home_dir}}",
          "hbase_pid_dir" : "/var/run/ambari-metrics-collector/",
          "hbase_regionserver_shutdown_timeout" : "30",
          "hbase_log_dir" : "/var/log/ambari-metrics-collector",
          "hbase_regionserver_heapsize" : "768",
          "hbase_classpath_additional" : ""
        }
      }
    },
    {
      "ams-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ams_log_number_of_backup_files" : "60",
          "ams_log_max_backup_size" : "80",
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize={{ams_log_max_backup_size}}MB\nlog4j.appender.file.MaxBackupIndex={{ams_log_number_of_backup_files}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
        }
      }
    },
    {
      "ams-ssl-server" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
          "ssl.server.truststore.reload.interval" : "10000",
          "ssl.server.truststore.type" : "jks",
          "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
          "ssl.server.keystore.type" : "jks"
        }
      }
    },
    {
      "nifi-state-management-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n\n            <!--\n            This file provides a mechanism for defining and configuring the State Providers\n            that should be used for storing state locally and across a NiFi cluster. In order\n            to use a specific provider, it must be configured here and its identifier\n            must be specified in the nifi.properties file.\n            -->\n            <stateManagement>\n            <!--\n            State Provider that stores state locally in a configurable directory. This Provider requires the following properties:\n\n            Directory - the directory to store components' state in. If the directory being used is a sub-directory of the NiFi installation, it\n            is important that the directory be copied over to the new version when upgrading NiFi.\n            -->\n            <local-provider>\n            <id>local-provider</id>\n            <class>org.apache.nifi.controller.state.providers.local.WriteAheadLocalStateProvider</class>\n            <property name=\"Directory\">{{nifi_state_dir}}</property>\n            <property name=\"Always Sync\">false</property>\n            <property name=\"Partitions\">16</property>\n            <property name=\"Checkpoint Interval\">2 mins</property>\n            </local-provider>\n\n            <!--\n            State Provider that is used to store state in ZooKeeper. This Provider requires the following properties:\n\n            Root Node - the root node in ZooKeeper where state should be stored. The default is '/nifi', but it is advisable to change this to a different value if not using\n            the embedded ZooKeeper server and if multiple NiFi instances may all be using the same ZooKeeper Server.\n\n            Connect String - A comma-separated list of host:port pairs to connect to ZooKeeper. For example, myhost.mydomain:2181,host2.mydomain:5555,host3:6666\n\n            Session Timeout - Specifies how long this instance of NiFi is allowed to be disconnected from ZooKeeper before creating a new ZooKeeper Session. Default value is \"30 seconds\"\n\n            Access Control - Specifies which Access Controls will be applied to the ZooKeeper ZNodes that are created by this State Provider. This value must be set to one of:\n            - Open  : ZNodes will be open to any ZooKeeper client.\n            - CreatorOnly  : ZNodes will be accessible only by the creator. The creator will have full access to create children, read, write, delete, and administer the ZNodes.\n            This option is available only if access to ZooKeeper is secured via Kerberos or if a Username and Password are set.\n            -->\n\n\n            <cluster-provider>\n            <id>zk-provider</id>\n            <class>org.apache.nifi.controller.state.providers.zookeeper.ZooKeeperStateProvider</class>\n            <property name=\"Connect String\">{{zookeeper_quorum}}</property>\n            <property name=\"Root Node\">{{nifi_znode}}</property>\n            <property name=\"Session Timeout\">30 seconds</property>\n            <property name=\"Access Control\">Open</property>\n            </cluster-provider>\n            </stateManagement>"
        }
      }
    },
    {
      "ams-hbase-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ams_hbase_log_maxfilesize" : "256",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize={{ams_hbase_log_maxfilesize}}MB\nhbase.log.maxbackupindex={{ams_hbase_log_maxbackupindex}}\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize={{ams_hbase_security_log_maxfilesize}}MB\nhbase.security.log.maxbackupindex={{ams_hbase_security_log_maxbackupindex}}\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO",
          "ams_hbase_log_maxbackupindex" : "20",
          "ams_hbase_security_log_maxbackupindex" : "20",
          "ams_hbase_security_log_maxfilesize" : "256"
        }
      }
    },
    {
      "registry-env" : {
        "properties_attributes" : { },
        "properties" : {
          "registry_user" : "registry",
          "registry_pid_dir" : "/var/run/registry",
          "registry_user_nofile_limit" : "65536",
          "registry_log_dir" : "/var/log/registry",
          "content" : "\n#!/bin/bash\n\n# Set REGISTRY specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{registry_pid_dir}}\nexport LOG_DIR={{registry_log_dir}}\nexport REGISTRY_KERBEROS_PARAMS={{registry_kerberos_params}}",
          "registry_user_nproc_limit" : "65536"
        }
      }
    },
    {
      "logsearch-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_pid_dir" : "/var/run/ambari-logsearch-portal",
          "logsearch_external_solr_kerberos_keytab" : "",
          "logsearch_user" : "logsearch",
          "logsearch_kerberos_keytab" : "/etc/security/keytabs/logsearch.service.keytab",
          "logsearch_debug_enabled" : "false",
          "content" : "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e\n\nexport LOGSEARCH_PORT={{logsearch_ui_port}}\n\n# path containing LogSearch.jar file\nexport LOGSEARCH_PATH={{logsearch_dir}}\n\nexport LOGSEARCH_CONF_DIR={{logsearch_server_conf}}\n\nexport LOGFILE={{logsearch_log_dir}}/logsearch.log\n\nexport PID_FILE={{logsearch_pid_file}}\n\nexport JAVA_HOME={{java64_home}}\n\nexport LOGSEARCH_JAVA_MEM=-Xmx{{logsearch_app_max_memory}}m\nif [ \"$LOGSEARCH_JAVA_MEM\" = \"\" ]; then\n  export LOGSEARCH_JAVA_MEM=\"-Xmx1g\"\nfi\n\nexport LOGSEARCH_DEBUG={{logsearch_debug_enabled}}\n\nexport LOGSEARCH_DEBUG_PORT={{logsearch_debug_port}}\n\n{% if logsearch_use_ssl %}\nexport LOGSEARCH_SSL=\"true\"\nexport LOGSEARCH_KEYSTORE_LOCATION={{logsearch_keystore_location}}\nexport LOGSEARCH_KEYSTORE_TYPE={{logsearch_keystore_type}}\nexport LOGSEARCH_TRUSTSTORE_LOCATION={{logsearch_truststore_location}}\nexport LOGSEARCH_TRUSTSTORE_TYPE={{logsearch_truststore_type}}\n{% endif %}",
          "logsearch_keystore_type" : "jks",
          "logsearch_log_dir" : "/var/log/ambari-logsearch-portal",
          "logsearch_keystore_location" : "/etc/ambari-logsearch-portal/conf/keys/logsearch.jks",
          "logsearch_ui_protocol" : "http",
          "logsearch_ui_port" : "61888",
          "logsearch_truststore_type" : "jks",
          "logsearch_debug_port" : "5005",
          "logsearch_app_max_memory" : "1024",
          "logsearch_truststore_location" : "/etc/ambari-logsearch-portal/conf/keys/logsearch.jks"
        }
      }
    },
    {
      "ams-ssl-client" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.client.truststore.type" : "jks",
          "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks"
        }
      }
    },
    {
      "infra-solr-xml" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n<solr>\n  <solrcloud>\n    <str name=\"host\">${host:}</str>\n    <int name=\"hostPort\">${jetty.port:}</int>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n    <int name=\"zkClientTimeout\">${zkClientTimeout:15000}</int>\n    <bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n  </solrcloud>\n</solr>"
        }
      }
    },
    {
      "kafka-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "controller_log_maxbackupindex" : "20",
          "controller_log_maxfilesize" : "256",
          "kafka_log_maxfilesize" : "256",
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\nkafka.logs.dir=logs\n\nlog4j.rootLogger=INFO, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\nlog4j.appender.kafkaAppender.MaxFileSize = {{kafka_log_maxfilesize}}MB\nlog4j.appender.kafkaAppender.MaxBackupIndex = {{kafka_log_maxbackupindex}}\n\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\nlog4j.appender.controllerAppender.MaxFileSize = {{controller_log_maxfilesize}}MB\nlog4j.appender.controllerAppender.MaxBackupIndex = {{controller_log_maxbackupindex}}\n# Turn on all our debugging info\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\nlog4j.additivity.kafka.network.RequestChannel$=false\n\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\n#log4j.additivity.kafka.server.KafkaApis=false\nlog4j.logger.kafka.request.logger=WARN, requestAppender\nlog4j.additivity.kafka.request.logger=false\n\nlog4j.logger.kafka.controller=TRACE, controllerAppender\nlog4j.additivity.kafka.controller=false\n\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\nlog4j.additivity.kafka.log.LogCleaner=false\n\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\nlog4j.additivity.state.change.logger=false",
          "kafka_log_maxbackupindex" : "20"
        }
      }
    },
    {
      "nifi-node-logback-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n\n            <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n            <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n            <resetJUL>true</resetJUL>\n            </contextListener>\n\n            <appender name=\"APP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-app.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'app_%d.log'.\n            For hourly rollover, use 'app_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>\n            <maxFileSize>100MB</maxFileSize>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n\n            <!-- optional setting for keeping 10GB total of log files\n            <totalSizeCap>10GB</totalSizeCap>\n            -->\n            </rollingPolicy>\n            <immediateFlush>true</immediateFlush>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"USER_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-user.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'user_%d.log'.\n            For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-user_%d.log</fileNamePattern>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n            </rollingPolicy>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"BOOTSTRAP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'user_%d.log'.\n            For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap_%d.log</fileNamePattern>\n            <!-- keep 5 log files worth of history -->\n            <maxHistory>5</maxHistory>\n            </rollingPolicy>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->\n\n            <logger name=\"org.apache.nifi\" level=\"INFO\"/>\n            <logger name=\"org.apache.nifi.processors\" level=\"WARN\"/>\n            <logger name=\"org.apache.nifi.processors.standard.LogAttribute\" level=\"INFO\"/>\n            <logger name=\"org.apache.nifi.controller.repository.StandardProcessSession\" level=\"WARN\" />\n\n\n            <logger name=\"org.apache.zookeeper.ClientCnxn\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.NIOServerCnxn\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.NIOServerCnxnFactory\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.quorum\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.ZooKeeper\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.PrepRequestProcessor\" level=\"ERROR\" />\n\n            <logger name=\"org.apache.curator.framework.recipes.leader.LeaderSelector\" level=\"OFF\" />\n            <logger name=\"org.apache.curator.ConnectionState\" level=\"OFF\" />\n\n            <!-- Logger for managing logging statements for nifi clusters. -->\n            <logger name=\"org.apache.nifi.cluster\" level=\"INFO\"/>\n\n            <!-- Logger for logging HTTP requests received by the web server. -->\n            <logger name=\"org.apache.nifi.server.JettyServer\" level=\"INFO\"/>\n\n            <!-- Logger for managing logging statements for jetty -->\n            <logger name=\"org.eclipse.jetty\" level=\"INFO\"/>\n\n            <!-- Suppress non-error messages due to excessive logging by class or library -->\n            <logger name=\"com.sun.jersey.spi.container.servlet.WebComponent\" level=\"ERROR\"/>\n            <logger name=\"com.sun.jersey.spi.spring\" level=\"ERROR\"/>\n            <logger name=\"org.springframework\" level=\"ERROR\"/>\n\n            <!-- Suppress non-error messages due to known warning about redundant path annotation (NIFI-574) -->\n            <logger name=\"com.sun.jersey.spi.inject.Errors\" level=\"ERROR\"/>\n\n            <!--\n            Logger for capturing user events. We do not want to propagate these\n            log events to the root logger. These messages are only sent to the\n            user-log appender.\n            -->\n            <logger name=\"org.apache.nifi.web.security\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.web.api.config\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.authorization\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.cluster.authorization\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.web.filter.RequestLogger\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n\n\n            <!--\n            Logger for capturing Bootstrap logs and NiFi's standard error and standard out.\n            -->\n            <logger name=\"org.apache.nifi.bootstrap\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n            <logger name=\"org.apache.nifi.bootstrap.Command\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"CONSOLE\" />\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Everything written to NiFi's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->\n            <logger name=\"org.apache.nifi.StdOut\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Everything written to NiFi's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->\n            <logger name=\"org.apache.nifi.StdErr\" level=\"ERROR\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Turn off Calcite Exception logging -->\n            <logger name=\"org.apache.calcite.runtime.CalciteException\" level=\"OFF\" />\n\n\n            <root level=\"INFO\">\n            <appender-ref ref=\"APP_FILE\"/>\n            </root>\n\n            </configuration>"
        }
      }
    },
    {
      "ranger-kafka-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "ams-hbase-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.masterregion.protocol.acl" : "*",
          "security.admin.protocol.acl" : "*",
          "security.client.protocol.acl" : "*"
        }
      }
    },
    {
      "kafka-env" : {
        "properties_attributes" : { },
        "properties" : {
          "kafka_pid_dir" : "/var/run/kafka",
          "kafka_user_nofile_limit" : "128000",
          "kafka_log_dir" : "/var/log/kafka",
          "kafka_user_nproc_limit" : "65536",
          "content" : "\n#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{kafka_pid_dir}}\nexport LOG_DIR={{kafka_log_dir}}\n{% if kerberos_security_enabled or kafka_other_sasl_enabled %}\nexport KAFKA_KERBEROS_PARAMS=\"-Djavax.security.auth.useSubjectCredsOnly=false {{kafka_kerberos_params}}\"\n{% else %}\nexport KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}\n{% endif %}\n# Add kafka sink to classpath and related depenencies\nif [ -e \"/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\" ]; then\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/lib/*\nfi\nif [ -f /etc/kafka/conf/kafka-ranger-env.sh ]; then\n. /etc/kafka/conf/kafka-ranger-env.sh\nfi",
          "is_supported_kafka_ranger" : "true",
          "kafka_user" : "kafka"
        }
      }
    },
    {
      "ams-grafana-ini" : {
        "properties_attributes" : { },
        "properties" : {
          "protocol" : "http",
          "cert_key" : "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
          "port" : "3000",
          "cert_file" : "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
          "ca_cert" : "",
          "content" : "\n##################### Grafana Configuration Example #####################\n#\n# Everything has defaults so you only need to uncomment things you want to\n# change\n\n# possible values : production, development\n; app_mode = production\n\n#################################### Paths ####################################\n[paths]\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\n#\n;data = /var/lib/grafana\ndata = {{ams_grafana_data_dir}}\n#\n# Directory where grafana can store logs\n#\n;logs = /var/log/grafana\nlogs = {{ams_grafana_log_dir}}\n\n\n#################################### Server ####################################\n[server]\n# Protocol (http or https)\n;protocol = http\nprotocol = {{ams_grafana_protocol}}\n# The ip address to bind to, empty will bind to all interfaces\n;http_addr =\n\n# The http port  to use\n;http_port = 3000\nhttp_port = {{ams_grafana_port}}\n\n# The public facing domain name used to access grafana from a browser\n;domain = localhost\n\n# Redirect to correct domain if host header does not match domain\n# Prevents DNS rebinding attacks\n;enforce_domain = false\n\n# The full public facing url\n;root_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n# Log web requests\n;router_logging = false\n\n# the path relative working path\n;static_root_path = public\nstatic_root_path = /usr/lib/ambari-metrics-grafana/public\n\n# enable gzip\n;enable_gzip = false\n\n# https certs & key file\n;cert_file =\n;cert_key =\ncert_file = {{ams_grafana_cert_file}}\ncert_key = {{ams_grafana_cert_key}}\n\n#################################### Database ####################################\n[database]\n# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice\n;type = sqlite3\n;host = 127.0.0.1:3306\n;name = grafana\n;user = root\n;password =\n\n# For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\n;ssl_mode = disable\n\n# For \"sqlite3\" only, path relative to data_path setting\n;path = grafana.db\n\n#################################### Session ####################################\n[session]\n# Either \"memory\", \"file\", \"redis\", \"mysql\", \"postgres\", default is \"file\"\n;provider = file\n\n# Provider config options\n# memory: not have any config yet\n# file: session dir path, is relative to grafana data_path\n# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`\n# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`\n# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable\n;provider_config = sessions\n\n# Session cookie name\n;cookie_name = grafana_sess\n\n# If you use session in https only, default is false\n;cookie_secure = false\n\n# Session life time, default is 86400\n;session_life_time = 86400\n\n#################################### Analytics ####################################\n[analytics]\n# Server reporting, sends usage counters to stats.grafana.org every 24 hours.\n# No ip addresses are being tracked, only simple counters to track\n# running instances, dashboard and error counts. It is very helpful to us.\n# Change this option to false to disable reporting.\n;reporting_enabled = true\n\n# Google Analytics universal tracking code, only enabled if you specify an id here\n;google_analytics_ua_id =\n\n#################################### Security ####################################\n[security]\n# default admin user, created on startup\nadmin_user = {{ams_grafana_admin_user}}\n\n# default admin password, can be changed before first start of grafana,  or in profile settings\n;admin_password =\n\n# used for signing\n;secret_key = SW2YcwTIb9zpOOhoPsMm\n\n# Auto-login remember days\n;login_remember_days = 7\n;cookie_username = grafana_user\n;cookie_remember_name = grafana_remember\n\n# disable gravatar profile images\n;disable_gravatar = false\n\n# data source proxy whitelist (ip_or_domain:port seperated by spaces)\n;data_source_proxy_whitelist =\n\n#################################### Users ####################################\n[users]\n# disable user signup / registration\n;allow_sign_up = true\n\n# Allow non admin users to create organizations\n;allow_org_create = true\n\n# Set to true to automatically assign new users to the default organization (id 1)\n;auto_assign_org = true\n\n# Default role new users will be automatically assigned (if disabled above is set to true)\n;auto_assign_org_role = Viewer\n\n# Background text for the user field on the login page\n;login_hint = email or username\n\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = Main Org.\n\n# specify role for unauthenticated users\n;org_role = Admin\n\n#################################### Github Auth ##########################\n[auth.github]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_id\n;client_secret = some_secret\n;scopes = user:email,read:org\n;auth_url = https://github.com/login/oauth/authorize\n;token_url = https://github.com/login/oauth/access_token\n;api_url = https://api.github.com/user\n;team_ids =\n;allowed_organizations =\n\n#################################### Google Auth ##########################\n[auth.google]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_client_id\n;client_secret = some_client_secret\n;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\n;auth_url = https://accounts.google.com/o/oauth2/auth\n;token_url = https://accounts.google.com/o/oauth2/token\n;api_url = https://www.googleapis.com/oauth2/v1/userinfo\n;allowed_domains =\n\n#################################### Auth Proxy ##########################\n[auth.proxy]\n;enabled = false\n;header_name = X-WEBAUTH-USER\n;header_property = username\n;auto_sign_up = true\n\n#################################### Basic Auth ##########################\n[auth.basic]\n;enabled = true\n\n#################################### Auth LDAP ##########################\n[auth.ldap]\n;enabled = false\n;config_file = /etc/grafana/ldap.toml\n\n#################################### SMTP / Emailing ##########################\n[smtp]\n;enabled = false\n;host = localhost:25\n;user =\n;password =\n;cert_file =\n;key_file =\n;skip_verify = false\n;from_address = admin@grafana.localhost\n\n[emails]\n;welcome_email_on_sign_up = false\n\n#################################### Logging ##########################\n[log]\n# Either \"console\", \"file\", default is \"console\"\n# Use comma to separate multiple modes, e.g. \"console, file\"\n;mode = console, file\n\n# Buffer length of channel, keep it as it is if you don't know what it is.\n;buffer_len = 10000\n\n# Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\n;level = Info\n\n# For \"console\" mode only\n[log.console]\n;level =\n\n# For \"file\" mode only\n[log.file]\n;level =\n# This enables automated log rotate(switch of following options), default is true\n;log_rotate = true\n\n# Max line number of single file, default is 1000000\n;max_lines = 1000000\n\n# Max size shift of single file, default is 28 means 1 << 28, 256MB\n;max_lines_shift = 28\n\n# Segment log daily, default is true\n;daily_rotate = true\n\n# Expired days of log file(delete after max days), default is 7\n;max_days = 7\n\n#################################### AMPQ Event Publisher ##########################\n[event_publisher]\n;enabled = false\n;rabbitmq_url = amqp://localhost/\n;exchange = grafana_events\n\n;#################################### Dashboard JSON files ##########################\n[dashboards.json]\n;enabled = false\n;path = /var/lib/grafana/dashboards\npath = /usr/lib/ambari-metrics-grafana/public/dashboards"
        }
      }
    },
    {
      "storm-site" : {
        "properties_attributes" : { },
        "properties" : {
          "storm.messaging.netty.min_wait_ms" : "100",
          "topology.enable.message.timeouts" : "true",
          "storm.messaging.netty.buffer_size" : "5242880",
          "client.jartransformer.class" : "org.apache.storm.hack.StormShadeTransformer",
          "ui.filter" : "null",
          "storm.messaging.netty.client_worker_threads" : "1",
          "transactional.zookeeper.root" : "/transactional",
          "topology.metrics.aggregate.metric.evict.secs" : "5",
          "topology.tuple.serializer" : "org.apache.storm.serialization.types.ListDelegateSerializer",
          "topology.spout.wait.strategy" : "org.apache.storm.spout.SleepSpoutWaitStrategy",
          "drpc.port" : "3772",
          "topology.max.spout.pending" : "1000",
          "topology.transfer.buffer.size" : "1024",
          "supervisor.worker.timeout.secs" : "30",
          "logviewer.port" : "8000",
          "metrics.reporter.register" : "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter",
          "nimbus.file.copy.expiration.secs" : "600",
          "drpc.childopts" : "-Xmx768m _JAAS_PLACEHOLDER",
          "logviewer.childopts" : "-Xmx128m _JAAS_PLACEHOLDER",
          "nimbus.task.launch.secs" : "120",
          "storm.zookeeper.servers" : "['%HOSTGROUP::host_group_M1%','%HOSTGROUP::host_group_S1%','%HOSTGROUP::host_group_S2%']",
          "storm.messaging.transport" : "org.apache.storm.messaging.netty.Context",
          "topology.workers" : "1",
          "drpc.invocations.port" : "3773",
          "topology.kryo.factory" : "org.apache.storm.serialization.DefaultKryoFactory",
          "nimbus.cleanup.inbox.freq.secs" : "600",
          "_storm.thrift.secure.transport" : "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
          "topology.fall.back.on.java.serialization" : "true",
          "logviewer.appender.name" : "A1",
          "storm.messaging.netty.server_worker_threads" : "1",
          "supervisor.slots.ports" : "[6700, 6701]",
          "storm.zookeeper.connection.timeout" : "30000",
          "topology.tick.tuple.freq.secs" : "null",
          "storm.cluster.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter\"}]",
          "topology.stats.sample.rate" : "0.05",
          "storm.local.dir" : "/hadoop/storm",
          "nimbus.inbox.jar.expiration.secs" : "3600",
          "topology.max.replication.wait.time.sec.default" : "60",
          "storm.messaging.netty.max_retries" : "30",
          "topology.debug" : "false",
          "storm.zookeeper.retry.interval" : "1000",
          "topology.receiver.buffer.size" : "8",
          "storm.zookeeper.retry.times" : "5",
          "java.library.path" : "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdf/current/storm-client/lib",
          "zmq.linger.millis" : "5000",
          "drpc.request.timeout.secs" : "600",
          "zmq.threads" : "1",
          "topology.state.synchronization.timeout.secs" : "60",
          "topology.worker.shared.thread.pool.size" : "4",
          "topology.executor.receive.buffer.size" : "1024",
          "supervisor.monitor.frequency.secs" : "3",
          "topology.optimize" : "true",
          "transactional.zookeeper.port" : "null",
          "storm.zookeeper.port" : "2181",
          "storm.zookeeper.retry.intervalceiling.millis" : "30000",
          "nimbus.thrift.port" : "6627",
          "nimbus.thrift.threads" : "196",
          "_storm.thrift.nonsecure.transport" : "org.apache.storm.security.auth.SimpleTransportPlugin",
          "nimbus.seeds" : "['%HOSTGROUP::host_group_S2%']",
          "topology.min.replication.count" : "{{actual_topology_min_replication_count}}",
          "topology.worker.childopts" : "null",
          "topology.max.replication.wait.time.sec" : "{{actual_topology_max_replication_wait_time_sec}}",
          "topology.min.replication.count.default" : "1",
          "topology.max.task.parallelism" : "null",
          "topology.acker.executors" : "null",
          "supervisor.worker.start.timeout.secs" : "120",
          "_storm.min.ruid" : "null",
          "nimbus.reassign" : "true",
          "supervisor.heartbeat.frequency.secs" : "5",
          "topology.metrics.aggregate.per.worker" : "true",
          "topology.trident.batch.emit.interval.millis" : "500",
          "task.heartbeat.frequency.secs" : "3",
          "storm.thrift.transport" : "{{storm_thrift_transport}}",
          "drpc.worker.threads" : "64",
          "ui.port" : "8744",
          "drpc.queue.size" : "128",
          "topology.message.timeout.secs" : "30",
          "topology.error.throttle.interval.secs" : "10",
          "storm.log.dir" : "{{log_dir}}",
          "topology.builtin.metrics.bucket.size.secs" : "60",
          "nimbus.monitor.freq.secs" : "10",
          "topology.executor.send.buffer.size" : "1024",
          "storm.local.mode.zmq" : "false",
          "transactional.zookeeper.servers" : "null",
          "nimbus.task.timeout.secs" : "30",
          "topology.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsSink\", \"parallelism.hint\": 1, \"whitelist\": [\"kafkaOffset\\\\..+/\", \"__complete-latency\", \"__process-latency\", \"__execute-latency\", \"__receive\\\\.population$\", \"__sendqueue\\\\.population$\", \"__execute-count\", \"__emit-count\", \"__ack-count\", \"__fail-count\", \"memory/heap\\\\.usedBytes$\", \"memory/nonHeap\\\\.usedBytes$\", \"GC/.+\\\\.count$\", \"GC/.+\\\\.timeMs$\"]}]",
          "dev.zookeeper.path" : "/tmp/dev-storm-zookeeper",
          "topology.metrics.expand.map.type" : "true",
          "nimbus.supervisor.timeout.secs" : "60",
          "topology.skip.missing.kryo.registrations" : "false",
          "storm.zookeeper.root" : "/storm",
          "storm.zookeeper.session.timeout" : "30000",
          "topology.disruptor.wait.strategy" : "com.lmax.disruptor.BlockingWaitStrategy",
          "zmq.hwm" : "0",
          "topology.sleep.spout.wait.strategy.time.ms" : "1",
          "nimbus.topology.validator" : "org.apache.storm.nimbus.DefaultTopologyValidator",
          "storm.cluster.mode" : "distributed",
          "task.refresh.poll.secs" : "10",
          "ui.childopts" : "-Xmx768m _JAAS_PLACEHOLDER",
          "storm.messaging.netty.max_wait_ms" : "1000",
          "worker.heartbeat.frequency.secs" : "1",
          "topology.max.error.report.per.interval" : "5",
          "nimbus.thrift.max_buffer_size" : "1048576",
          "topology.metrics.metric.name.separator" : "."
        }
      }
    },
    {
      "nifi-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi.remote.input.http.transaction.ttl" : "30 sec",
          "nifi.flow.configuration.archive.max.storage" : "500 MB",
          "nifi.content.claim.max.appendable.size" : "1 MB",
          "nifi.sensitive.props.provider" : "BC",
          "nifi.cluster.node.protocol.max.threads" : "",
          "nifi.web.proxy.host" : "",
          "nifi.content.repository.archive.enabled" : "true",
          "nifi.flow.configuration.archive.dir" : "{{nifi_internal_dir}}/archive/",
          "nifi.security.keystore" : "{{nifi_keystore}}",
          "nifi.web.http.host" : "{{nifi_node_nonssl_host}}",
          "nifi.flowservice.writedelay.interval" : "500 ms",
          "nifi.remote.input.secure" : "{{nifi_ssl_enabled}}",
          "nifi.provenance.repository.max.storage.time" : "24 hours",
          "nifi.swap.in.period" : "5 sec",
          "nifi.web.https.network.interface.default" : "",
          "nifi.bored.yield.duration" : "10 millis",
          "nifi.variable.registry.properties" : "",
          "nifi.provenance.repository.query.threads" : "2",
          "nifi.swap.in.threads" : "1",
          "nifi.cluster.node.protocol.threads" : "10",
          "nifi.ui.banner.text" : "",
          "nifi.flow.configuration.archive.max.time" : "30 days",
          "nifi.security.keyPasswd" : "{{nifi_keyPasswd}}",
          "nifi.web.proxy.context.path" : "",
          "nifi.security.ocsp.responder.url" : "",
          "nifi.provenance.repository.compress.on.rollover" : "true",
          "nifi.kerberos.spnego.principal" : "",
          "nifi.flowcontroller.graceful.shutdown.period" : "10 sec",
          "nifi.cluster.node.event.history.size" : "25",
          "nifi.provenance.repository.implementation" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
          "nifi.provenance.repository.rollover.size" : "100 MB",
          "nifi.cluster.flow.election.max.wait.time" : "5 mins",
          "nifi.components.status.repository.implementation" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
          "nifi.content.repository.archive.max.retention.period" : "12 hours",
          "nifi.flow.configuration.archive.max.count" : "",
          "nifi.cluster.flow.election.max.candidates" : "{{nifi_num_nodes}}",
          "nifi.provenance.repository.encryption.key.provider.implementation" : "",
          "nifi.web.jetty.threads" : "200",
          "nifi.provenance.repository.rollover.time" : "30 secs",
          "nifi.cluster.protocol.heartbeat.interval" : "5 sec",
          "nifi.provenance.repository.max.storage.size" : "1 GB",
          "nifi.h2.url.append" : ";LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE",
          "nifi.provenance.repository.debug.frequency" : "1_000_000",
          "nifi.sensitive.props.additional.keys" : "",
          "nifi.security.ocsp.responder.certificate" : "",
          "nifi.version" : "1.5.0.{{stack_version_buildnum}}",
          "nifi.cluster.node.connection.timeout" : "5 sec",
          "nifi.security.user.knox.audiences" : "",
          "nifi.components.status.snapshot.frequency" : "1 min",
          "nifi.security.identity.mapping.pattern.kerb" : "",
          "nifi.web.http.network.interface.default" : "",
          "nifi.security.user.knox.cookieName" : "hadoop-jwt",
          "nifi.cluster.is.node" : "{{nifi_is_node}}",
          "nifi.security.needClientAuth" : "{{nifi_needClientAuth}}",
          "nifi.flowfile.repository.partitions" : "256",
          "nifi.provenance.repository.indexed.attributes" : "",
          "nifi.provenance.repository.index.shard.size" : "500 MB",
          "nifi.state.management.embedded.zookeeper.start" : "false",
          "nifi.security.keystoreType" : "{{nifi_keystoreType}}",
          "nifi.state.management.provider.local" : "local-provider",
          "nifi.provenance.repository.concurrent.merge.threads" : "2",
          "nifi.provenance.repository.encryption.key.provider.location" : "",
          "nifi.flow.configuration.file" : "{{nifi_flow_config_dir}}/flow.xml.gz",
          "nifi.nar.working.directory" : "{{nifi_internal_dir}}/work/nar",
          "nifi.authorizer.configuration.file" : "{{nifi_config_dir}}/authorizers.xml",
          "nifi.templates.directory" : "{{nifi_internal_dir}}/templates",
          "nifi.state.management.provider.cluster" : "zk-provider",
          "nifi.zookeeper.root.node" : "{{nifi_znode}}",
          "nifi.security.user.oidc.discovery.url" : "",
          "nifi.security.keystorePasswd" : "{{nifi_keystorePasswd}}",
          "nifi.security.user.oidc.connect.timeout" : "5 secs",
          "nifi.security.truststoreType" : "{{nifi_truststoreType}}",
          "nifi.content.viewer.url" : "../nifi-content-viewer/",
          "nifi.provenance.repository.encryption.key.id" : "",
          "nifi.zookeeper.session.timeout" : "3 secs",
          "nifi.content.repository.archive.max.usage.percentage" : "50%",
          "nifi.nar.library.directory" : "{{nifi_install_dir}}/lib",
          "nifi.swap.manager.implementation" : "org.apache.nifi.controller.FileSystemSwapManager",
          "nifi.cluster.node.address" : "{{nifi_node_host}}",
          "nifi.flow.configuration.archive.enabled" : "true",
          "nifi.provenance.repository.journal.count" : "16",
          "nifi.provenance.repository.buffer.size" : "100000",
          "nifi.kerberos.krb5.file" : "",
          "nifi.queue.swap.threshold" : "20000",
          "nifi.sensitive.props.key" : "{{nifi_sensitive_props_key}}",
          "nifi.components.status.repository.buffer.size" : "1440",
          "nifi.security.identity.mapping.value.kerb" : "",
          "nifi.content.repository.directory.default" : "{{nifi_content_repo_dir_default}}",
          "nifi.kerberos.service.principal" : "",
          "nifi.flowfile.repository.implementation" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
          "nifi.state.management.embedded.zookeeper.properties" : "{{nifi_config_dir}}/zookeeper.properties",
          "nifi.web.war.directory" : "{{nifi_install_dir}}/lib",
          "nifi.swap.out.period" : "5 sec",
          "nifi.kerberos.spnego.authentication.expiration" : "12 hours",
          "nifi.documentation.working.directory" : "{{nifi_internal_dir}}/work/docs/components",
          "nifi.remote.input.socket.port" : "",
          "nifi.web.https.host" : "{{nifi_node_ssl_host}}",
          "nifi.web.max.header.size" : "16 KB",
          "nifi.web.jetty.working.directory" : "{{nifi_internal_dir}}/work/jetty",
          "nifi.security.identity.mapping.pattern.dn" : "",
          "nifi.security.user.oidc.preferred.jwsalgorithm" : "",
          "nifi.zookeeper.connect.timeout" : "3 secs",
          "nifi.flowfile.repository.checkpoint.interval" : "2 mins",
          "nifi.cluster.node.max.concurrent.requests" : "100",
          "nifi.cluster.node.read.timeout" : "5 sec",
          "nifi.provenance.repository.warm.cache.frequency" : "1 hour",
          "nifi.administrative.yield.duration" : "30 sec",
          "nifi.security.user.knox.publicKey" : "",
          "nifi.sensitive.props.algorithm" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
          "nifi.content.repository.always.sync" : "false",
          "nifi.provenance.repository.indexed.fields" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
          "nifi.provenance.repository.index.threads" : "1",
          "nifi.provenance.repository.encryption.key" : "",
          "nifi.swap.out.threads" : "4",
          "nifi.security.user.oidc.read.timeout" : "5 secs",
          "nifi.cluster.protocol.is.secure" : "{{nifi_ssl_enabled}}",
          "nifi.web.http.port" : "{{nifi_node_port}}",
          "nifi.remote.input.host" : "",
          "nifi.content.claim.max.flow.files" : "100",
          "nifi.flowcontroller.autoResumeState" : "true",
          "nifi.remote.contents.cache.expiration" : "30 secs",
          "nifi.security.user.knox.url" : "",
          "nifi.provenance.repository.max.attribute.length" : "65536",
          "nifi.security.user.authorizer" : "{{nifi_authorizer}}",
          "nifi.kerberos.spnego.keytab.location" : "",
          "nifi.zookeeper.connect.string" : "{{zookeeper_quorum}}",
          "nifi.flowfile.repository.always.sync" : "false",
          "nifi.provenance.repository.directory.default" : "{{nifi_provenance_repo_dir_default}}",
          "nifi.state.management.configuration.file" : "{{nifi_config_dir}}/state-management.xml",
          "nifi.web.https.port" : "{{nifi_node_ssl_port}}",
          "nifi.security.user.login.identity.provider" : "",
          "nifi.security.user.oidc.client.id" : "",
          "nifi.content.repository.implementation" : "org.apache.nifi.controller.repository.FileSystemRepository",
          "nifi.flowfile.repository.directory" : "{{nifi_flowfile_repo_dir}}",
          "nifi.login.identity.provider.configuration.file" : "{{nifi_config_dir}}/login-identity-providers.xml",
          "nifi.provenance.repository.always.sync" : "false",
          "nifi.kerberos.service.keytab.location" : "",
          "nifi.cluster.node.protocol.port" : "{{nifi_node_protocol_port}}",
          "nifi.security.truststorePasswd" : "{{nifi_truststorePasswd}}",
          "nifi.ui.autorefresh.interval" : "30 sec",
          "nifi.security.identity.mapping.value.dn" : "",
          "nifi.security.truststore" : "{{nifi_truststore}}",
          "nifi.remote.input.http.enabled" : "true",
          "nifi.database.directory" : "{{nifi_database_dir}}"
        }
      }
    },
    {
      "kafka-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "KAFKA_BROKER:kafka_server,kafka_request,kafka_logcleaner,kafka_controller,kafka_statechange",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"kafka_controller\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/controller.log\"\n    },\n    {\n      \"type\":\"kafka_request\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/kafka-request.log\"\n    },\n    {\n      \"type\":\"kafka_logcleaner\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/log-cleaner.log\"\n    },\n    {\n      \"type\":\"kafka_server\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/server.log\"\n    },\n    {\n      \"type\":\"kafka_statechange\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{kafka_log_dir}}/state-change.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"kafka_controller\",\n            \"kafka_request\",\n            \"kafka_logcleaner\"\n          ]\n         }\n       },\n      \"log4j_format\":\"[%d] %p %m (%c)%n\",\n      \"multiline_pattern\":\"^(\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\])\",\n      \"message_pattern\":\"(?m)^\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"comment\":\"Suppose to be same log4j pattern as other kafka processes, but some reason thread is not printed\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"kafka_server\",\n            \"kafka_statechange\"\n          ]\n         }\n       },\n      \"log4j_format\":\"[%d] %p %m (%c)%n\",\n      \"multiline_pattern\":\"^(\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\])\",\n      \"message_pattern\":\"(?m)^\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     }\n   ]\n }",
          "service_name" : "Kafka"
        }
      }
    },
    {
      "logfeeder-grok" : {
        "properties_attributes" : { },
        "properties" : {
          "default_grok_patterns" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#Updated JAVACLASS to be same as JAVAFILE. Because if class doesn't have package, then it doesn't work.\nJAVACLASS (?:[A-Za-z$0-9_. -]+)\n#JAVACLASS (?:[a-zA-Z$_][a-zA-Z$_0-9]*\\.)*[a-zA-Z$_][a-zA-Z$_0-9]*\n#JAVACLASS (?:[a-zA-Z0-9-]+\\.)+[A-Za-z0-9$]+\n\n#Space is an allowed character to match special cases like 'Native Method' or 'Unknown Source'\nJAVAFILE (?:[A-Za-z0-9_. -]+)\n#Allow special <init> or <clinit> method\nJAVAMETHOD (?:(<init>)|(<clinit>)|[a-zA-Z$_][a-zA-Z$_0-9]*)\n#Line number is optional in special cases 'Native method' or 'Unknown source'\nJAVASTACKTRACEPART %{SPACE}at %{JAVACLASS:class}\\.%{JAVAMETHOD:method}\\(%{JAVAFILE:file}(?::%{NUMBER:line})?\\)\n# Java Logs\nJAVATHREAD (?:[A-Z]{2}-Processor[\\d]+)\n\nJAVASTACKTRACEPART at %{JAVACLASS:class}\\.%{WORD:method}\\(%{JAVAFILE:file}:%{NUMBER:line}\\)\nJAVALOGMESSAGE (.*)\n# MMM dd, yyyy HH:mm:ss eg: Jan 9, 2014 7:13:13 AM\nCATALINA_DATESTAMP %{MONTH} %{MONTHDAY}, 20%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND}) (?:AM|PM)\n# yyyy-MM-dd HH:mm:ss,SSS ZZZ eg: 2014-01-09 17:32:25,527 -0800\nTOMCAT_DATESTAMP 20%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:?%{MINUTE}(?::?%{SECOND}) %{ISO8601_TIMEZONE}\nCATALINALOG %{CATALINA_DATESTAMP:timestamp} %{JAVACLASS:class} %{JAVALOGMESSAGE:logmessage}\n# 2014-01-09 20:03:28,269 -0800 | ERROR | com.example.service.ExampleService - something compeletely unexpected happened...\nTOMCATLOG %{TOMCAT_DATESTAMP:timestamp} \\| %{LOGLEVEL:level} \\| %{JAVACLASS:class} - %{JAVALOGMESSAGE:logmessage}\n\nUSERNAME [a-zA-Z0-9._-]+\nUSER %{USERNAME}\nEMAILLOCALPART [a-zA-Z][a-zA-Z0-9_.+-=:]+\nEMAILADDRESS %{EMAILLOCALPART}@%{HOSTNAME}\nHTTPDUSER %{EMAILADDRESS}|%{USER}\nINT (?:[+-]?(?:[0-9]+))\nBASE10NUM (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))\nNUMBER (?:%{BASE10NUM})\nBASE16NUM (?<![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))\nBASE16FLOAT \\b(?<![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:\\.[0-9A-Fa-f]*)?)|(?:\\.[0-9A-Fa-f]+)))\\b\n\nPOSINT \\b(?:[1-9][0-9]*)\\b\nNONNEGINT \\b(?:[0-9]+)\\b\nWORD \\b\\w+\\b\nNOTSPACE \\S+\nSPACE \\s*\nDATA .*?\nGREEDYDATA .*\nQUOTEDSTRING (?>(?<!\\\\)(?>\"(?>\\\\.|[^\\\\\"]+)+\"|\"\"|(?>'(?>\\\\.|[^\\\\']+)+')|''|(?>`(?>\\\\.|[^\\\\`]+)+`)|``))\nUUID [A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}\n\n# Networking\nMAC (?:%{CISCOMAC}|%{WINDOWSMAC}|%{COMMONMAC})\nCISCOMAC (?:(?:[A-Fa-f0-9]{4}\\.){2}[A-Fa-f0-9]{4})\nWINDOWSMAC (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})\nCOMMONMAC (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})\nIPV6 ((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\nIPV4 (?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])\nIP (?:%{IPV6}|%{IPV4})\nHOSTNAME \\b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\\.?|\\b)\nIPORHOST (?:%{IP}|%{HOSTNAME})\nHOSTPORT %{IPORHOST}:%{POSINT}\n\n# paths\nPATH (?:%{UNIXPATH}|%{WINPATH})\nUNIXPATH (/([\\w_%!$@:.,~-]+|\\\\.)*)+\nTTY (?:/dev/(pts|tty([pq])?)(\\w+)?/?(?:[0-9]+))\nWINPATH (?>[A-Za-z]+:|\\\\)(?:\\\\[^\\\\?*]*)+\nURIPROTO [A-Za-z]+(\\+[A-Za-z+]+)?\nURIHOST %{IPORHOST}(?::%{POSINT:port})?\n# uripath comes loosely from RFC1738, but mostly from what Firefox\n# doesn't turn into %XX\nURIPATH (?:/[A-Za-z0-9$.+!*'(){},~:;=@#%_\\-]*)+\n#URIPARAM \\?(?:[A-Za-z0-9]+(?:=(?:[^&]*))?(?:&(?:[A-Za-z0-9]+(?:=(?:[^&]*))?)?)*)?\nURIPARAM \\?[A-Za-z0-9$.+!*'|(){},~@#%&/=:;_?\\-\\[\\]<>]*\nURIPATHPARAM %{URIPATH}(?:%{URIPARAM})?\nURI %{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST})?(?:%{URIPATHPARAM})?\n\n# Months: January, Feb, 3, 03, 12, December\nMONTH \\b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May?|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\\b\nMONTHNUM (?:0?[1-9]|1[0-2])\nMONTHNUM2 (?:0[1-9]|1[0-2])\nMONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])\n\n# Days: Monday, Tue, Thu, etc...\nDAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)\n\n# Years?\nYEAR (?>\\d\\d){1,2}\nHOUR (?:2[0123]|[01]?[0-9])\nMINUTE (?:[0-5][0-9])\n# '60' is a leap second in most time standards and thus is valid.\nSECOND (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)\nTIME (?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9])\n# datestamp is YYYY/MM/DD-HH:MM:SS.UUUU (or something like it)\nDATE_US %{MONTHNUM}[/-]%{MONTHDAY}[/-]%{YEAR}\nDATE_EU %{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}\nDATE_EU2 %{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}\nISO8601_TIMEZONE (?:Z|[+-]%{HOUR}(?::?%{MINUTE}))\nISO8601_SECOND (?:%{SECOND}|60)\nTIMESTAMP_ISO8601 %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?\nDATE %{DATE_US}|%{DATE_EU}|%{DATE_EU2}\nDATESTAMP %{DATE}[- ]%{TIME}\nTZ (?:[PMCE][SD]T|UTC)\nDATESTAMP_RFC822 %{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME} %{TZ}\nDATESTAMP_RFC2822 %{DAY}, %{MONTHDAY} %{MONTH} %{YEAR} %{TIME} %{ISO8601_TIMEZONE}\nDATESTAMP_OTHER %{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{TZ} %{YEAR}\nDATESTAMP_EVENTLOG %{YEAR}%{MONTHNUM2}%{MONTHDAY}%{HOUR}%{MINUTE}%{SECOND}\nHTTPDERROR_DATE %{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}\n\n# Syslog Dates: Month Day HH:MM:SS\nSYSLOGTIMESTAMP %{MONTH} +%{MONTHDAY} %{TIME}\nPROG [\\x21-\\x5a\\x5c\\x5e-\\x7e]+\nSYSLOGPROG %{PROG:program}(?:\\[%{POSINT:pid}\\])?\nSYSLOGHOST %{IPORHOST}\nSYSLOGFACILITY <%{NONNEGINT:facility}.%{NONNEGINT:priority}>\nHTTPDATE %{MONTHDAY}/%{MONTH}/%{YEAR}:%{TIME} %{INT}\n\n# Shortcuts\nQS %{QUOTEDSTRING}\n\n# Log formats\nSYSLOGBASE %{SYSLOGTIMESTAMP:timestamp} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:logsource} %{SYSLOGPROG}:\nCOMMONAPACHELOG %{IPORHOST:clientip} %{HTTPDUSER:ident} %{USER:auth} \\[%{HTTPDATE:timestamp}\\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)\nCOMBINEDAPACHELOG %{COMMONAPACHELOG} %{QS:referrer} %{QS:agent}\nHTTPD20_ERRORLOG \\[%{HTTPDERROR_DATE:timestamp}\\] \\[%{LOGLEVEL:loglevel}\\] (?:\\[client %{IPORHOST:clientip}\\] ){0,1}%{GREEDYDATA:errormsg}\nHTTPD24_ERRORLOG \\[%{HTTPDERROR_DATE:timestamp}\\] \\[%{WORD:module}:%{LOGLEVEL:loglevel}\\] \\[pid %{POSINT:pid}:tid %{NUMBER:tid}\\]( \\(%{POSINT:proxy_errorcode}\\)%{DATA:proxy_errormessage}:)?( \\[client %{IPORHOST:client}:%{POSINT:clientport}\\])? %{DATA:errorcode}: %{GREEDYDATA:message}\nHTTPD_ERRORLOG %{HTTPD20_ERRORLOG}|%{HTTPD24_ERRORLOG}\n\n\n# Log Levels\nLOGLEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)\n\n\n# Log specific patterns\nUSER_SYNC_DATE %{MONTHDAY} %{MONTH} %{YEAR} %{TIME}\nSPARK_DATESTAMP %{YEAR}[/-]%{MONTHNUM2}[/-]%{MONTHDAY} %{TIME}\nCUSTOM_DATESTAMP %{MONTHDAY} %{MONTH} %{YEAR} %{TIME}\nCUSTOM_SEPARATOR %{SPACE}\\|%{SPACE}",
          "custom_grok_patterns" : ""
        }
      }
    },
    {
      "storm-atlas-application.properties" : {
        "properties_attributes" : { },
        "properties" : {
          "atlas.hook.storm.numRetries" : "3"
        }
      }
    },
    {
      "zookeeper-env" : {
        "properties_attributes" : { },
        "properties" : {
          "zk_log_dir" : "/var/log/zookeeper",
          "zk_user" : "zookeeper",
          "zk_pid_dir" : "/var/run/zookeeper",
          "content" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}"
        }
      }
    },
    {
      "ranger-kafka-security" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "cluster-env" : {
        "properties_attributes" : { },
        "properties" : {
          "recovery_max_count" : "6",
          "managed_hdfs_resource_property_names" : "",
          "recovery_retry_interval" : "5",
          "stack_features" : "{\n  \"HDF\": {\n    \"stack_features\": [\n      {\n        \"name\": \"snappy\",\n        \"description\": \"Snappy compressor/decompressor support\",\n        \"min_version\": \"0.0.0.0\",\n        \"max_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"lzo\",\n        \"description\": \"LZO libraries support\",\n        \"min_version\": \"0.2.1.0\"\n      },\n      {\n        \"name\": \"express_upgrade\",\n        \"description\": \"Express upgrade support\",\n        \"min_version\": \"0.1.0.0\"\n      },\n      {\n        \"name\": \"rolling_upgrade\",\n        \"description\": \"Rolling upgrade support\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_acl_migration_support\",\n        \"description\": \"ACL migration support\",\n        \"min_version\": \"2.3.4.0\"\n      },\n      {\n        \"name\": \"config_versioning\",\n        \"description\": \"Configurable versions support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"datanode_non_root\",\n        \"description\": \"DataNode running as non-root support (AMBARI-7615)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"remove_ranger_hdfs_plugin_env\",\n        \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger\",\n        \"description\": \"Ranger Service support\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_tagsync_component\",\n        \"description\": \"Ranger Tagsync component support (AMBARI-14383)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"phoenix\",\n        \"description\": \"Phoenix Service support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"nfs\",\n        \"description\": \"NFS support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"tez_for_spark\",\n        \"description\": \"Tez dependency for Spark\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"timeline_state_store\",\n        \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"copy_tarball_to_hdfs\",\n        \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"spark_16plus\",\n        \"description\": \"Spark 1.6+\",\n        \"min_version\": \"1.2.0.0\"\n      },\n      {\n        \"name\": \"spark_thriftserver\",\n        \"description\": \"Spark Thrift Server\",\n        \"min_version\": \"0.3.2.0\"\n      },\n      {\n        \"name\": \"storm_kerberos\",\n        \"description\": \"Storm Kerberos support (AMBARI-7570)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"storm_ams\",\n        \"description\": \"Storm AMS integration (AMBARI-10710)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"create_kafka_broker_id\",\n        \"description\": \"Ambari should create Kafka Broker Id (AMBARI-12678)\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_listeners\",\n        \"description\": \"Kafka listeners (AMBARI-10984)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_kerberos\",\n        \"description\": \"Kafka Kerberos support (AMBARI-10984)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"pig_on_tez\",\n        \"description\": \"Pig on Tez support (AMBARI-7863)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_non_root\",\n        \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_audit_db_support\",\n        \"description\": \"Ranger Audit to DB support\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"accumulo_kerberos_user_auth\",\n        \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"knox_versioned_data_dir\",\n        \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\",\n        \"min_version\": \"0.3.2.0\"\n      },\n      {\n        \"name\": \"knox_sso_topology\",\n        \"description\": \"Knox SSO Topology support (AMBARI-13975)\",\n        \"min_version\": \"0.3.8.0\"\n      },\n      {\n        \"name\": \"atlas_rolling_upgrade\",\n        \"description\": \"Rolling upgrade support for Atlas\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"oozie_admin_user\",\n        \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_create_hive_tez_configs\",\n        \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_setup_shared_lib\",\n        \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_host_kerberos\",\n        \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\",\n        \"min_version\": \"0.0.0.0\",\n        \"max_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"falcon_extensions\",\n        \"description\": \"Falcon Extension\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_upgrade_schema\",\n        \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server_interactive\",\n        \"description\": \"Hive server interactive support (AMBARI-15573)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_webhcat_specific_configs\",\n        \"description\": \"Hive webhcat specific configurations support (AMBARI-12364)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_purge_table\",\n        \"description\": \"Hive purge table support (AMBARI-12260)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server2_kerberized_env\",\n        \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\",\n        \"min_version\": \"0.2.3.0\",\n        \"max_version\": \"0.2.5.0\"\n      },\n      {\n        \"name\": \"hive_env_heapsize\",\n        \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_hsm_support\",\n        \"description\": \"Ranger KMS HSM support (AMBARI-15752)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_log4j_support\",\n        \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_kerberos_support\",\n        \"description\": \"Ranger Kerberos support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_site_support\",\n        \"description\": \"Hive Metastore site support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_password_jceks\",\n        \"description\": \"Saving Ranger Usersync credentials in jceks\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_install_infra_client\",\n        \"description\": \"Ambari Infra Service support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hbase_home_directory\",\n        \"description\": \"Hbase home directory in HDFS needed for HBASE backup\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"spark_livy\",\n        \"description\": \"Livy as slave component of spark\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"atlas_ranger_plugin_support\",\n        \"description\": \"Atlas Ranger plugin support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"atlas_conf_dir_in_path\",\n        \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\",\n        \"min_version\": \"0.3.0.0\",\n        \"max_version\": \"0.4.99.99\"\n      },\n      {\n        \"name\": \"atlas_upgrade_support\",\n        \"description\": \"Atlas supports express and rolling upgrades\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_pid_support\",\n        \"description\": \"Ranger Service support pid generation AMBARI-16756\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_pid_support\",\n        \"description\": \"Ranger KMS Service support pid generation\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_admin_password_change\",\n        \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"storm_metrics_apache_classes\",\n        \"description\": \"Metrics sink for Storm that uses Apache class names\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"toolkit_config_update\",\n        \"description\": \"Support separate input and output for toolkit configuration\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypt_config\",\n        \"description\": \"Encrypt sensitive properties written to nifi property file\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"ranger_xml_configuration\",\n        \"description\": \"Ranger code base support xml configurations\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_ranger_plugin_support\",\n        \"description\": \"Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_setup_db_on_start\",\n        \"description\": \"Allows setup of ranger db and java patches to be called multiple times on each START\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_solr_config_support\",\n        \"description\": \"Showing Ranger solrconfig.xml on UI\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"core_site_for_ranger_plugins\",\n        \"description\": \"Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"secure_ranger_ssl_password\",\n        \"description\": \"Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"tls_toolkit_san\",\n        \"description\": \"Support subject alternative name flag\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"admin_toolkit_support\",\n        \"description\": \"Supports the nifi admin toolkit\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"nifi_jaas_conf_create\",\n        \"description\": \"Create NIFI jaas configuration when kerberos is enabled\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_remove_rootpath\",\n        \"description\": \"Registry remove root path setting\",\n        \"min_version\": \"3.0.2.0\"\n      },\n      {\n        \"name\": \"registry_allowed_resources_support\",\n        \"description\": \"Registry allowed resources\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"registry_rewriteuri_filter_support\",\n        \"description\": \"Registry RewriteUri servlet filter\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n         \"name\": \"registry_support_schema_migrate\",\n         \"description\": \"Support schema migrate in registry for version 3.1 onwards\",\n         \"min_version\": \"3.1.0.0\"\n       },\n       {\n         \"name\": \"sam_support_schema_migrate\",\n         \"description\": \"Support schema migrate in SAM for version 3.1 onwards\",\n         \"min_version\": \"3.1.0.0\"\n       },\n      {\n        \"name\": \"sam_storage_core_in_registry\",\n        \"description\": \"Storage core module moved to registry\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"sam_db_file_storage\",\n        \"description\": \"DB based file storage in SAM\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"kafka_extended_sasl_support\",\n        \"description\": \"Support SASL PLAIN and GSSAPI\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypted_authorizers_config\",\n        \"description\": \"Support encrypted authorizers.xml configuration for version 3.1 onwards\",\n        \"min_version\": \"3.1.0.0\"\n      }\n    ]\n  }\n}",
          "stack_tools" : "{\n  \"HDF\": {\n    \"stack_selector\": [\n      \"hdf-select\",\n      \"/usr/bin/hdf-select\",\n      \"hdf-select\"\n    ],\n    \"conf_selector\": [\n      \"hdfconf-select\",\n      \"/usr/bin/hdfconf-select\",\n      \"hdf-select\"\n    ]\n  }\n}",
          "repo_ubuntu_template" : "{{package_type}} {{base_url}} {{components}}",
          "stack_root" : "{\"HDF\":\"/usr/hdf\"}",
          "fetch_nonlocal_groups" : "true",
          "kerberos_domain" : "EXAMPLE.COM",
          "stack_packages" : "{\n  \"HDF\": {\n    \"stack-select\": {\n      \"KAFKA\": {\n        \"KAFKA_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"kafka-broker\",\n          \"INSTALL\": [\n            \"kafka-broker\"\n          ],\n          \"PATCH\": [\n            \"kafka-broker\"\n          ],\n          \"STANDARD\": [\n            \"kafka-broker\"\n          ]\n        }\n      },\n      \"RANGER\": {\n        \"RANGER_ADMIN\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-admin\",\n          \"INSTALL\": [\n            \"ranger-admin\"\n          ],\n          \"PATCH\": [\n            \"ranger-admin\"\n          ],\n          \"STANDARD\": [\n            \"ranger-admin\"\n          ]\n        },\n        \"RANGER_TAGSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-tagsync\",\n          \"INSTALL\": [\n            \"ranger-tagsync\"\n          ],\n          \"PATCH\": [\n            \"ranger-tagsync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-tagsync\"\n          ]\n        },\n        \"RANGER_USERSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-usersync\",\n          \"INSTALL\": [\n            \"ranger-usersync\"\n          ],\n          \"PATCH\": [\n            \"ranger-usersync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-usersync\"\n          ]\n        }\n      },\n      \"RANGER_KMS\": {\n        \"RANGER_KMS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-kms\",\n          \"INSTALL\": [\n            \"ranger-kms\"\n          ],\n          \"PATCH\": [\n            \"ranger-kms\"\n          ],\n          \"STANDARD\": [\n            \"ranger-kms\"\n          ]\n        }\n      },\n      \"STORM\": {\n        \"NIMBUS\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-nimbus\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ]\n        },\n        \"SUPERVISOR\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-supervisor\",\n          \"INSTALL\": [\n            \"storm-supervisor\"\n          ],\n          \"PATCH\": [\n            \"storm-supervisor\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ]\n        },\n        \"DRPC_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        },\n        \"STORM_UI_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        }\n      },\n      \"ZOOKEEPER\": {\n        \"ZOOKEEPER_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-client\",\n          \"INSTALL\": [\n            \"zookeeper-client\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-client\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-client\"\n          ]\n        },\n        \"ZOOKEEPER_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-server\",\n          \"INSTALL\": [\n            \"zookeeper-server\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-server\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-server\"\n          ]\n        }\n      },\n      \"NIFI\": {\n        \"NIFI_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"nifi\",\n          \"INSTALL\": [\n            \"nifi\"\n          ],\n          \"PATCH\": [\n            \"nifi\"\n          ],\n          \"STANDARD\": [\n            \"nifi\"\n          ]\n        }\n       },\n      \"NIFI_REGISTRY\": {\n        \"NIFI_REGISTRY_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"nifi-registry\",\n          \"INSTALL\": [\n            \"nifi-registry\"\n          ],\n          \"PATCH\": [\n            \"nifi-registry\"\n          ],\n          \"STANDARD\": [\n            \"nifi-registry\"\n          ]\n        }\n      },\n       \"REGISTRY\": {\n        \"REGISTRY_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"registry\",\n          \"INSTALL\": [\n            \"registry\"\n          ],\n          \"PATCH\": [\n            \"registry\"\n          ],\n          \"STANDARD\": [\n            \"registry\"\n          ]\n        }\n      },\n      \"STREAMLINE\": {\n        \"STREAMLINE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"streamline\",\n          \"INSTALL\": [\n            \"streamline\"\n          ],\n          \"PATCH\": [\n            \"streamline\"\n          ],\n          \"STANDARD\": [\n            \"streamline\"\n          ]\n        }\n      }\n    },\n    \"conf-select\": {\n      \"kafka\": [\n        {\n          \"conf_dir\": \"/etc/kafka/conf\",\n          \"current_dir\": \"{0}/current/kafka-broker/conf\"\n        }\n      ],\n      \"nifi\": [\n        {\n          \"conf_dir\": \"/etc/nifi/conf\",\n          \"current_dir\": \"{0}/current/nifi/conf\"\n        }\n      ],\n      \"nifi-registry\": [\n        {\n          \"conf_dir\": \"/etc/nifi-registry/conf\",\n          \"current_dir\": \"{0}/current/nifi-registry/conf\"\n        }\n      ],\n      \"streamline\": [\n        {\n          \"conf_dir\": \"/etc/streamline/conf\",\n          \"current_dir\": \"{0}/current/streamline/conf\"\n        }\n      ],\n      \"registry\": [\n        {\n          \"conf_dir\": \"/etc/registry/conf\",\n          \"current_dir\": \"{0}/current/registry/conf\"\n        }\n      ],\n      \"ranger-admin\": [\n        {\n          \"conf_dir\": \"/etc/ranger/admin/conf\",\n          \"current_dir\": \"{0}/current/ranger-admin/conf\"\n        }\n      ],\n      \"ranger-kms\": [\n        {\n          \"conf_dir\": \"/etc/ranger/kms/conf\",\n          \"current_dir\": \"{0}/current/ranger-kms/conf\"\n        }\n      ],\n      \"ranger-tagsync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/tagsync/conf\",\n          \"current_dir\": \"{0}/current/ranger-tagsync/conf\"\n        }\n      ],\n      \"ranger-usersync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/usersync/conf\",\n          \"current_dir\": \"{0}/current/ranger-usersync/conf\"\n        }\n      ],\n      \"storm\": [\n        {\n          \"conf_dir\": \"/etc/storm/conf\",\n          \"current_dir\": \"{0}/current/storm-client/conf\"\n        }\n      ],\n      \"storm-slider-client\": [\n        {\n          \"conf_dir\": \"/etc/storm-slider-client/conf\",\n          \"current_dir\": \"{0}/current/storm-slider-client/conf\"\n        }\n      ],\n      \"zookeeper\": [\n        {\n          \"conf_dir\": \"/etc/zookeeper/conf\",\n          \"current_dir\": \"{0}/current/zookeeper-client/conf\"\n        }\n      ]\n    }\n  }\n}",
          "user_group" : "hadoop",
          "sysprep_skip_setup_jce" : "false",
          "override_uid" : "true",
          "security_enabled" : "false",
          "recovery_lifetime_max_count" : "1024",
          "recovery_type" : "AUTO_START",
          "repo_suse_rhel_template" : "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
          "recovery_enabled" : "true",
          "smokeuser" : "ambari-qa",
          "smokeuser_keytab" : "/etc/security/keytabs/smokeuser.headless.keytab",
          "alerts_repeat_tolerance" : "1",
          "recovery_window_in_minutes" : "60",
          "stack_name" : "HDF",
          "ignore_groupsusers_create" : "false"
        }
      }
    },
    {
      "ams-grafana-env" : {
        "properties_attributes" : { },
        "properties" : {
          "metrics_grafana_log_dir" : "/var/log/ambari-metrics-grafana",
          "metrics_grafana_pid_dir" : "/var/run/ambari-metrics-grafana",
          "content" : "\n# Set environment variables here.\n\n# AMS UI Server Home Dir\nexport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}\n\n# AMS UI Server Data Dir\nexport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}\n\n# AMS UI Server Log Dir\nexport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}\n\n# AMS UI Server PID Dir\nexport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
          "metrics_grafana_data_dir" : "/var/lib/ambari-metrics-grafana",
          "metrics_grafana_username" : "admin",
					"metrics_grafana_password" : "grafana_password"
        }
      }
    },
    {
      "logsearch-audit_logs-solrconfig" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_audit_logs_max_retention" : "7",
          "logsearch_audit_logs_merge_factor" : "5",
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<!--\nFor more details about configurations options that may appear in\nthis file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n  is an alias that causes solr to search appropriate packages,\n  including org.apache.solr.(search|update|request|core|analysis)\n\n  You may also specify a fully qualified Java classname if you\n  have your own custom plugins.\n  -->\n\n  <!-- Controls what version of Lucene various components of Solr\n  adhere to.  Generally, you want to use the latest version to\n  get all bug fixes and improvements. It is highly recommended\n  that you fully re-index after changing this setting as it can\n  affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>5.0.0</luceneMatchVersion>\n\n  <!-- <lib/> directives can be used to instruct Solr to load any Jars\n  identified and use them to resolve any \"plugins\" specified in\n  your solrconfig.xml or schema.xml (ie: Analyzers, Request\n  Handlers, etc...).\n\n  All directories and paths are resolved relative to the\n  instanceDir.\n\n  Please note that <lib/> directives are processed in the order\n  that they appear in your solrconfig.xml file, and are \"stacked\"\n  on top of each other when building a ClassLoader - so if you have\n  plugin jars with dependencies on other jars, the \"lower level\"\n  dependency jars should be loaded first.\n\n  If a \"./lib\" directory exists in your instanceDir, all files\n  found in it are included as if you had used the following\n  syntax...\n\n  <lib dir=\"./lib\" />\n  -->\n\n  <!-- A 'dir' option by itself adds any files found in the directory\n  to the classpath, this is useful for including all jars in a\n  directory.\n\n  When a 'regex' is specified in addition to a 'dir', only the\n  files in that directory which completely match the regex\n  (anchored on both ends) will be included.\n\n  If a 'dir' option (with or without a regex) is used and nothing\n  is found that matches, a warning will be logged.\n\n  The examples below can be used to load some solr-contribs along\n  with their external dependencies.\n  -->\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-dataimporthandler-.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/extraction/lib\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-cell-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/clustering/lib/\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-clustering-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/langid/lib/\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-langid-\\d.*\\.jar\"/>\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/velocity/lib\" regex=\".*\\.jar\"/>\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-velocity-\\d.*\\.jar\"/>\n\n  <!-- an exact 'path' can be used instead of a 'dir' to specify a\n  specific jar file.  This will cause a serious error to be logged\n  if it can't be loaded.\n  -->\n  <!--\n  <lib path=\"../a-jar-that-does-not-exist.jar\" />\n  -->\n\n  <!-- Data Directory\n\n  Used to specify an alternate directory to hold all index data\n  other than the default ./data under the Solr home.  If\n  replication is in use, this should match the replication\n  configuration.\n  -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n  solr.StandardDirectoryFactory is filesystem\n  based and tries to pick the best implementation for the current\n  JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n  wraps solr.StandardDirectoryFactory and caches small files in memory\n  for better NRT performance.\n\n  One can force a particular implementation via solr.MMapDirectoryFactory,\n  solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n  solr.RAMDirectoryFactory is memory based, not\n  persistent, and doesn't work with replication.\n  -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n\n\n    <!-- These will be used if you are using the solr.HdfsDirectoryFactory,\n    otherwise they will be ignored. If you don't plan on using hdfs,\n    you can safely remove this section. -->\n    <!-- The root directory that collection data should be written to. -->\n    <str name=\"solr.hdfs.home\">${solr.hdfs.home:}</str>\n    <!-- The hadoop configuration files to use for the hdfs client. -->\n    <str name=\"solr.hdfs.confdir\">${solr.hdfs.confdir:}</str>\n    <!-- Enable/Disable the hdfs cache. -->\n    <str name=\"solr.hdfs.blockcache.enabled\">${solr.hdfs.blockcache.enabled:true}</str>\n    <!-- Enable/Disable using one global cache for all SolrCores.\n    The settings used will be from the first HdfsDirectoryFactory created. -->\n    <str name=\"solr.hdfs.blockcache.global\">${solr.hdfs.blockcache.global:true}</str>\n\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n  The default implementation is SchemaCodecFactory, which is the official Lucene\n  index format, but hooks into the schema to provide per-field customization of\n  the postings lists and per-document values in the fieldType element\n  (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n  are experimental, so if you choose to customize the index format, it's a good\n  idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n  before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To enable dynamic schema REST APIs, use the following for <schemaFactory>: -->\n\n  <schemaFactory class=\"ManagedIndexSchemaFactory\">\n    <bool name=\"mutable\">true</bool>\n    <str name=\"managedSchemaResourceName\">managed-schema</str>\n  </schemaFactory>\n  <!--\n  When ManagedIndexSchemaFactory is specified, Solr will load the schema from\n  the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n  Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n  schema does not exist, Solr will create it after reading schema.xml, then rename\n  'schema.xml' to 'schema.xml.bak'.\n\n  Do NOT hand edit the managed schema - external modifications will be ignored and\n  overwritten as a result of schema modification REST API calls.\n\n  When ManagedIndexSchemaFactory is specified with mutable = true, schema\n  modification REST API calls will be allowed; otherwise, error responses will be\n  sent back for these requests.\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  Index Config - These settings control low-level behavior of indexing\n  Most example settings here show the default value, but are commented\n  out, to more easily see where customizations have been made.\n\n  Note: This replaces <indexDefaults> and <mainIndex> from older versions\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n    <!-- maxFieldLength was removed in 4.0. To get similar behavior, include a\n    LimitTokenCountFilterFactory in your fieldType definition. E.g.\n    <filter class=\"solr.LimitTokenCountFilterFactory\" maxTokenCount=\"10000\"/>\n    -->\n    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->\n    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->\n    <!-- LogSearch customization to avoid timeouts -->\n    <writeLockTimeout>10000</writeLockTimeout>\n\n    <!-- The maximum number of simultaneous threads that may be\n    indexing documents at once in IndexWriter; if more than this\n    many threads arrive they will wait for others to finish.\n    Default in Solr/Lucene is 8. -->\n    <!-- <maxIndexingThreads>8</maxIndexingThreads>  -->\n    <!-- LogSearch customization of increase performance -->\n    <maxIndexingThreads>50</maxIndexingThreads>\n\n    <!-- Expert: Enabling compound file will use less files for the index,\n    using fewer file descriptors on the expense of performance decrease.\n    Default in Lucene is \"true\". Default in Solr is \"false\" (since 3.6) -->\n    <!-- <useCompoundFile>false</useCompoundFile> -->\n\n    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene\n    indexing for buffering added documents and deletions before they are\n    flushed to the Directory.\n    maxBufferedDocs sets a limit on the number of documents buffered\n    before flushing.\n    If both ramBufferSizeMB and maxBufferedDocs is set, then\n    Lucene will flush based on whichever limit is hit first.\n    The default is 100 MB.  -->\n    <!-- <ramBufferSizeMB>100</ramBufferSizeMB> -->\n    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->\n\n    <!-- Expert: Merge Policy\n    The Merge Policy in Lucene controls how merging of segments is done.\n    The default since Solr/Lucene 3.3 is TieredMergePolicy.\n    The default since Lucene 2.3 was the LogByteSizeMergePolicy,\n    Even older versions of Lucene used LogDocMergePolicy.\n    -->\n    <!--\n    <mergePolicy class=\"org.apache.lucene.index.TieredMergePolicy\">\n    <int name=\"maxMergeAtOnce\">10</int>\n    <int name=\"segmentsPerTier\">10</int>\n    </mergePolicy>\n    -->\n\n    <!-- Merge Factor\n    The merge factor controls how many segments will get merged at a time.\n    For TieredMergePolicy, mergeFactor is a convenience parameter which\n    will set both MaxMergeAtOnce and SegmentsPerTier at once.\n    For LogByteSizeMergePolicy, mergeFactor decides how many new segments\n    will be allowed before they are merged into one.\n    Default is 10 for both merge policies.\n    -->\n    <!--\n    <mergeFactor>10</mergeFactor>\n    -->\n    <!-- LogSearch customization. Set to 5 to trigger purging of deleted documents more often -->\n    <mergeFactor>{{logsearch_audit_logs_merge_factor}}</mergeFactor>\n\n    <!-- Expert: Merge Scheduler\n    The Merge Scheduler in Lucene controls how merges are\n    performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)\n    can perform merges in the background using separate threads.\n    The SerialMergeScheduler (Lucene 2.2 default) does not.\n    -->\n    <!--\n    <mergeScheduler class=\"org.apache.lucene.index.ConcurrentMergeScheduler\"/>\n    -->\n\n    <!-- LockFactory\n\n    This option specifies which Lucene LockFactory implementation\n    to use.\n\n    single = SingleInstanceLockFactory - suggested for a\n    read-only index or when there is no possibility of\n    another process trying to modify the index.\n    native = NativeFSLockFactory - uses OS native file locking.\n    Do not use when multiple solr webapps in the same\n    JVM are attempting to share a single index.\n    simple = SimpleFSLockFactory  - uses a plain file for locking\n\n    Defaults: 'native' is default for Solr3.6 and later, otherwise\n    'simple' is the default\n\n    More details on the nuances of each LockFactory...\n    http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Unlock On Startup\n\n    If true, unlock any held write or commit locks on startup.\n    This defeats the locking mechanism that allows multiple\n    processes to safely access a lucene index, and should be used\n    with care. Default is \"false\".\n\n    This is not needed if lock type is 'single'\n    -->\n    <!--\n    <unlockOnStartup>false</unlockOnStartup>\n    -->\n\n    <!-- Commit Deletion Policy\n    Custom deletion policies can be specified here. The class must\n    implement org.apache.lucene.index.IndexDeletionPolicy.\n\n    The default Solr IndexDeletionPolicy implementation supports\n    deleting index commit points on number of commits, age of\n    commit point and optimized status.\n\n    The latest commit point should always be preserved regardless\n    of the criteria.\n    -->\n    <!--\n    <deletionPolicy class=\"solr.SolrDeletionPolicy\">\n    -->\n    <!-- The number of commit points to be kept -->\n    <!-- <str name=\"maxCommitsToKeep\">1</str> -->\n    <!-- The number of optimized commit points to be kept -->\n    <!-- <str name=\"maxOptimizedCommitsToKeep\">0</str> -->\n    <!--\n    Delete all commit points once they have reached the given age.\n    Supports DateMathParser syntax e.g.\n    -->\n    <!--\n    <str name=\"maxCommitAge\">30MINUTES</str>\n    <str name=\"maxCommitAge\">1DAY</str>\n    -->\n    <!--\n    </deletionPolicy>\n    -->\n\n    <!-- Lucene Infostream\n\n    To aid in advanced debugging, Lucene provides an \"InfoStream\"\n    of detailed information when indexing.\n\n    Setting the value to true will instruct the underlying Lucene\n    IndexWriter to write its info stream to solr's log. By default,\n    this is enabled here, and controlled through log4j.properties.\n    -->\n    <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n  This example enables JMX if and only if an existing MBeanServer\n  is found, use this if you want to configure JMX through JVM\n  parameters. Remove this to disable exposing Solr configuration\n  and statistics to JMX.\n\n  For more details see http://wiki.apache.org/solr/SolrJmx\n  -->\n  <jmx/>\n  <!-- If you want to connect to a particular server, specify the\n  agentId\n  -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n  -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n    and solr cloud replica recovery.  The log can grow as big as\n    uncommitted changes to the index, so use of a hard autoCommit\n    is recommended (see below).\n    \"dir\" - the target directory for transaction logs, defaults to the\n    solr data directory.  -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n\n    <!-- AutoCommit\n\n    Perform a hard commit automatically under certain conditions.\n    Instead of enabling autoCommit, consider using \"commitWithin\"\n    when adding documents.\n\n    http://wiki.apache.org/solr/UpdateXmlMessages\n\n    maxDocs - Maximum number of documents to add since the last\n    commit before automatically triggering a new commit.\n\n    maxTime - Maximum amount of time in ms that is allowed to pass\n    since a document was added before automatically\n    triggering a new commit.\n    openSearcher - if false, the commit causes recent index changes\n    to be flushed to stable storage, but does not cause a new\n    searcher to be opened to make those changes visible.\n\n    If the updateLog is enabled, then it's highly recommended to\n    have some sort of hard autoCommit to limit the log size.\n    -->\n    <autoCommit>\n      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n      <openSearcher>false</openSearcher>\n    </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n    'soft' commit which only ensures that changes are visible\n    but does not ensure that data is synced to disk.  This is\n    faster and more near-realtime friendly than a hard commit.\n    -->\n\n    <autoSoftCommit>\n      <maxTime>${solr.autoSoftCommit.maxTime:5000}</maxTime>\n    </autoSoftCommit>\n\n    <!-- Update Related Event Listeners\n\n    Various IndexWriter related events can trigger Listeners to\n    take actions.\n\n    postCommit - fired after every commit or optimize command\n    postOptimize - fired after every optimize command\n    -->\n    <!-- The RunExecutableListener executes an external command from a\n    hook such as postCommit or postOptimize.\n\n    exe - the name of the executable to run\n    dir - dir to use as the current working directory. (default=\".\")\n    wait - the calling thread waits until the executable returns.\n    (default=\"true\")\n    args - the arguments to pass to the program.  (default is none)\n    env - environment variables to set.  (default is none)\n    -->\n    <!-- This example shows how RunExecutableListener could be used\n    with the script based replication...\n    http://wiki.apache.org/solr/CollectionDistribution\n    -->\n    <!--\n    <listener event=\"postCommit\" class=\"solr.RunExecutableListener\">\n    <str name=\"exe\">solr/bin/snapshooter</str>\n    <str name=\"dir\">.</str>\n    <bool name=\"wait\">true</bool>\n    <arr name=\"args\"> <str>arg1</str> <str>arg2</str> </arr>\n    <arr name=\"env\"> <str>MYVAR=val1</str> </arr>\n    </listener>\n    -->\n\n  </updateHandler>\n\n  <!-- IndexReaderFactory\n\n  Use the following format to specify a custom IndexReaderFactory,\n  which allows for alternate IndexReader implementations.\n\n  ** Experimental Feature **\n\n  Please note - Using a custom IndexReaderFactory may prevent\n  certain other features from working. The API to\n  IndexReaderFactory may change without warning or may even be\n  removed from future releases if the problems cannot be\n  resolved.\n\n\n  ** Features that may not work with custom IndexReaderFactory **\n\n  The ReplicationHandler assumes a disk-resident index. Using a\n  custom IndexReader implementation may cause incompatibility\n  with ReplicationHandler and may cause replication to not work\n  correctly. See SOLR-1366 for details.\n\n  -->\n  <!--\n  <indexReaderFactory name=\"IndexReaderFactory\" class=\"package.class\">\n  <str name=\"someArg\">Some Value</str>\n  </indexReaderFactory >\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  Query section - these settings control query time things like caches\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n    Maximum number of clauses in each BooleanQuery,  an exception\n    is thrown if exceeded.\n\n    ** WARNING **\n\n    This option actually modifies a global Lucene property that\n    will affect all SolrCores.  If multiple solrconfig.xml files\n    disagree on this property, the value at any given moment will\n    be based on the last SolrCore to be initialized.\n\n    -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n    There are two implementations of cache available for Solr,\n    LRUCache, based on a synchronized LinkedHashMap, and\n    FastLRUCache, based on a ConcurrentHashMap.\n\n    FastLRUCache has faster gets and slower puts in single\n    threaded operation and thus is generally faster than LRUCache\n    when the hit ratio of the cache is high (> 75%), and may be\n    faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n    Cache used by SolrIndexSearcher for filters (DocSets),\n    unordered sets of *all* documents that match a query.  When a\n    new searcher is opened, its caches may be prepopulated or\n    \"autowarmed\" using data from caches in the old searcher.\n    autowarmCount is the number of items to prepopulate.  For\n    LRUCache, the autowarmed items will be the most recently\n    accessed items.\n\n    Parameters:\n    class - the SolrCache implementation LRUCache or\n    (LRUCache or FastLRUCache)\n    size - the maximum number of entries in the cache\n    initialSize - the initial capacity (number of entries) of\n    the cache.  (see java.util.HashMap)\n    autowarmCount - the number of entries to prepopulate from\n    and old cache.\n    -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n    Caches results of searches - ordered lists of document ids\n    (DocList) based on a query, a sort, and the range of documents requested.\n    -->\n    <queryResultCache class=\"solr.LRUCache\"\n                      size=\"512\"\n                      initialSize=\"512\"\n                      autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n    Caches Lucene Document objects (the stored fields for each\n    document).  Since Lucene internal document ids are transient,\n    this cache will not be autowarmed.\n    -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n           class=\"solr.search.LRUCache\"\n           size=\"10\"\n           initialSize=\"0\"\n           autowarmCount=\"10\"\n           regenerator=\"solr.NoOpRegenerator\"/>\n\n    <!-- Field Value Cache\n\n    Cache used to hold field values that are quickly accessible\n    by document id.  The fieldValueCache is created by default\n    even if not configured here.\n    -->\n    <!--\n    <fieldValueCache class=\"solr.FastLRUCache\"\n    size=\"512\"\n    autowarmCount=\"128\"\n    showItems=\"32\" />\n    -->\n\n    <!-- Custom Cache\n\n    Example of a generic cache.  These caches may be accessed by\n    name through SolrIndexSearcher.getCache(),cacheLookup(), and\n    cacheInsert().  The purpose is to enable easy caching of\n    user/application level data.  The regenerator argument should\n    be specified as an implementation of solr.CacheRegenerator\n    if autowarming is desired.\n    -->\n    <!--\n    <cache name=\"myUserCache\"\n    class=\"solr.LRUCache\"\n    size=\"4096\"\n    initialSize=\"1024\"\n    autowarmCount=\"1024\"\n    regenerator=\"com.mycompany.MyRegenerator\"\n    />\n    -->\n\n\n    <!-- Lazy Field Loading\n\n    If true, stored fields that are not requested will be loaded\n    lazily.  This can result in a significant speed improvement\n    if the usual case is to not load all stored fields,\n    especially if the skipped fields are large compressed text\n    fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n    <!-- Use Filter For Sorted Query\n\n    A possible optimization that attempts to use a filter to\n    satisfy a search.  If the requested sort does not include\n    score, then the filterCache will be checked for a filter\n    matching the query. If found, the filter will be used as the\n    source of document ids, and then the sort will be applied to\n    that.\n\n    For most situations, this will not be useful unless you\n    frequently get the same search repeatedly with different sort\n    options, and none of them ever use \"score\"\n    -->\n    <!--\n    <useFilterForSortedQuery>true</useFilterForSortedQuery>\n    -->\n\n    <!-- Result Window Size\n\n    An optimization for use with the queryResultCache.  When a search\n    is requested, a superset of the requested number of document ids\n    are collected.  For example, if a search for a particular query\n    requests matching documents 10 through 19, and queryWindowSize is 50,\n    then documents 0 through 49 will be collected and cached.  Any further\n    requests in that range can be satisfied via the cache.\n    -->\n    <queryResultWindowSize>20</queryResultWindowSize>\n\n    <!-- Maximum number of documents to cache for any entry in the\n    queryResultCache.\n    -->\n    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Query Related Event Listeners\n\n    Various IndexSearcher related events can trigger Listeners to\n    take actions.\n\n    newSearcher - fired whenever a new searcher is being prepared\n    and there is a current searcher handling requests (aka\n    registered).  It can be used to prime certain caches to\n    prevent long request times for certain requests.\n\n    firstSearcher - fired whenever a new searcher is being\n    prepared but there is no current registered searcher to handle\n    requests or to gain autowarming data from.\n\n\n    -->\n    <!-- QuerySenderListener takes an array of NamedList and executes a\n    local query request for each NamedList in sequence.\n    -->\n    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <!--\n        <lst><str name=\"q\">solr</str><str name=\"sort\">price asc</str></lst>\n        <lst><str name=\"q\">rocks</str><str name=\"sort\">weight asc</str></lst>\n        -->\n      </arr>\n    </listener>\n    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <lst>\n          <str name=\"q\">static firstSearcher warming in solrconfig.xml</str>\n        </lst>\n      </arr>\n    </listener>\n\n    <!-- Use Cold Searcher\n\n    If a search request comes in and there is no current\n    registered searcher, then immediately register the still\n    warming searcher and use it.  If \"false\" then all requests\n    will block until the first searcher is done warming.\n    -->\n    <useColdSearcher>true</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n    Maximum number of searchers that may be warming in the\n    background concurrently.  An error is returned if this limit\n    is exceeded.\n\n    Recommend values of 1-2 for read-only slaves, higher for\n    masters w/o cache warming.\n    -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n  This section contains instructions for how the SolrDispatchFilter\n  should behave when processing requests for this SolrCore.\n\n  handleSelect is a legacy option that affects the behavior of requests\n  such as /select?qt=XXX\n\n  handleSelect=\"true\" will cause the SolrDispatchFilter to process\n  the request and dispatch the query to a handler specified by the\n  \"qt\" param, assuming \"/select\" isn't already registered.\n\n  handleSelect=\"false\" will cause the SolrDispatchFilter to\n  ignore \"/select\" requests, resulting in a 404 unless a handler\n  is explicitly registered with the name \"/select\"\n\n  handleSelect=\"true\" is not recommended for new users, but is the default\n  for backwards compatibility\n  -->\n  <requestDispatcher handleSelect=\"false\">\n    <!-- Request Parsing\n\n    These settings indicate how Solr Requests may be parsed, and\n    what restrictions may be placed on the ContentStreams from\n    those requests\n\n    enableRemoteStreaming - enables use of the stream.file\n    and stream.url parameters for specifying remote streams.\n\n    multipartUploadLimitInKB - specifies the max size (in KiB) of\n    Multipart File Uploads that Solr will allow in a Request.\n\n    formdataUploadLimitInKB - specifies the max size (in KiB) of\n    form data (application/x-www-form-urlencoded) sent via\n    POST. You can use POST to pass request parameters not\n    fitting into the URL.\n\n    addHttpRequestToContext - if set to true, it will instruct\n    the requestParsers to include the original HttpServletRequest\n    object in the context map of the SolrQueryRequest under the\n    key \"httpRequest\". It will not be used by any of the existing\n    Solr components, but may be useful when developing custom\n    plugins.\n\n    *** WARNING ***\n    The settings below authorize Solr to fetch remote files, You\n    should make sure your system has some authentication before\n    using enableRemoteStreaming=\"true\"\n\n    -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n    Set HTTP caching related parameters (for proxy caches and clients).\n\n    The options below instruct Solr not to output any HTTP Caching\n    related headers\n    -->\n    <httpCaching never304=\"true\"/>\n    <!-- If you include a <cacheControl> directive, it will be used to\n    generate a Cache-Control header (as well as an Expires header\n    if the value contains \"max-age=\")\n\n    By default, no Cache-Control header is generated.\n\n    You can use the <cacheControl> option even if you have set\n    never304=\"true\"\n    -->\n    <!--\n    <httpCaching never304=\"true\" >\n    <cacheControl>max-age=30, public</cacheControl>\n    </httpCaching>\n    -->\n    <!-- To enable Solr to respond with automatically generated HTTP\n    Caching headers, and to response to Cache Validation requests\n    correctly, set the value of never304=\"false\"\n\n    This will cause Solr to generate Last-Modified and ETag\n    headers based on the properties of the Index.\n\n    The following options can also be specified to affect the\n    values of these headers...\n\n    lastModFrom - the default value is \"openTime\" which means the\n    Last-Modified value (and validation against If-Modified-Since\n    requests) will all be relative to when the current Searcher\n    was opened.  You can change it to lastModFrom=\"dirLastMod\" if\n    you want the value to exactly correspond to when the physical\n    index was last modified.\n\n    etagSeed=\"...\" is an option you can change to force the ETag\n    header (and validation against If-None-Match requests) to be\n    different even if the index has not changed (ie: when making\n    significant changes to your config file)\n\n    (lastModifiedFrom and etagSeed are both ignored if you use\n    the never304=\"true\" option)\n    -->\n    <!--\n    <httpCaching lastModifiedFrom=\"openTime\"\n    etagSeed=\"Solr\">\n    <cacheControl>max-age=30, public</cacheControl>\n    </httpCaching>\n    -->\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n  http://wiki.apache.org/solr/SolrRequestHandler\n\n  Incoming queries will be dispatched to a specific handler by name\n  based on the path specified in the request.\n\n  Legacy behavior: If the request path uses \"/select\" but no Request\n  Handler has that name, and if handleSelect=\"true\" has been specified in\n  the requestDispatcher, then the Request Handler is dispatched based on\n  the qt parameter.  Handlers without a leading '/' are accessed this way\n  like so: http://host/app/[core/]select?qt=name  If no qt is\n  given, then the requestHandler that declares default=\"true\" will be\n  used or the one named \"standard\".\n\n  If a Request Handler is declared with startup=\"lazy\", then it will\n  not be initialized until the first request that uses it.\n\n  -->\n\n  <requestHandler name=\"/dataimport\" class=\"solr.DataImportHandler\">\n    <lst name=\"defaults\">\n      <str name=\"config\">solr-data-config.xml</str>\n    </lst>\n  </requestHandler>\n\n  <!-- SearchHandler\n\n  http://wiki.apache.org/solr/SearchHandler\n\n  For processing Search Queries, the primary Request Handler\n  provided with Solr is \"SearchHandler\" It delegates to a sequent\n  of SearchComponents (see below) and supports distributed\n  queries across multiple shards\n  -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n    will be overridden by parameters in the request\n    -->\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <int name=\"rows\">10</int>\n      <str name=\"df\">text</str>\n    </lst>\n    <!-- In addition to defaults, \"appends\" params can be specified\n    to identify values which should be appended to the list of\n    multi-val params from the query (or the existing \"defaults\").\n    -->\n    <!-- In this example, the param \"fq=instock:true\" would be appended to\n    any query time fq params the user may specify, as a mechanism for\n    partitioning the index, independent of any user selected filtering\n    that may also be desired (perhaps as a result of faceted searching).\n\n    NOTE: there is *absolutely* nothing a client can do to prevent these\n    \"appends\" values from being used, so don't use this mechanism\n    unless you are sure you always want it.\n    -->\n    <!--\n    <lst name=\"appends\">\n    <str name=\"fq\">inStock:true</str>\n    </lst>\n    -->\n    <!-- \"invariants\" are a way of letting the Solr maintainer lock down\n    the options available to Solr clients.  Any params values\n    specified here are used regardless of what values may be specified\n    in either the query, the \"defaults\", or the \"appends\" params.\n\n    In this example, the facet.field and facet.query params would\n    be fixed, limiting the facets clients can use.  Faceting is\n    not turned on by default - but if the client does specify\n    facet=true in the request, these are the only facets they\n    will be able to see counts for; regardless of what other\n    facet.field or facet.query params they may specify.\n\n    NOTE: there is *absolutely* nothing a client can do to prevent these\n    \"invariants\" values from being used, so don't use this mechanism\n    unless you are sure you always want it.\n    -->\n    <!--\n    <lst name=\"invariants\">\n    <str name=\"facet.field\">cat</str>\n    <str name=\"facet.field\">manu_exact</str>\n    <str name=\"facet.query\">price:[* TO 500]</str>\n    <str name=\"facet.query\">price:[500 TO *]</str>\n    </lst>\n    -->\n    <!-- If the default list of SearchComponents is not desired, that\n    list can either be overridden completely, or components can be\n    prepended or appended to the default list.  (see below)\n    -->\n    <!--\n    <arr name=\"components\">\n    <str>nameOfCustomComponent1</str>\n    <str>nameOfCustomComponent2</str>\n    </arr>\n    -->\n  </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n      <str name=\"df\">text</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- realtime get handler, guaranteed to return the latest stored fields of\n  any document, without the need to commit or open a new searcher.  The\n  current implementation relies on the updateLog feature being enabled.\n\n  ** WARNING **\n  Do NOT disable the realtime get handler at /get if you are using\n  SolrCloud otherwise any leader election will cause a full sync in ALL\n  replicas for the shard in question. Similarly, a replica recovery will\n  also always fetch the complete index from the leader because a partial\n  sync will not be possible in the absence of this handler.\n  -->\n  <requestHandler name=\"/get\" class=\"solr.RealTimeGetHandler\">\n    <lst name=\"defaults\">\n      <str name=\"omitHeader\">true</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- A Robust Example\n\n  This example SearchHandler declaration shows off usage of the\n  SearchHandler with many defaults declared\n\n  Note that multiple instances of the same Request Handler\n  (SearchHandler) can be registered multiple times with different\n  names (and different init parameters)\n  -->\n  <requestHandler name=\"/browse\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n\n      <!-- VelocityResponseWriter settings -->\n      <str name=\"wt\">velocity</str>\n      <str name=\"v.template\">browse</str>\n      <str name=\"v.layout\">layout</str>\n\n      <!-- Query settings -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n\n      <!-- Faceting defaults -->\n      <str name=\"facet\">on</str>\n      <str name=\"facet.mincount\">1</str>\n    </lst>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell,/browse\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n    </lst>\n  </initParams>\n\n  <!-- Update Request Handler.\n\n  http://wiki.apache.org/solr/UpdateXmlMessages\n\n  The canonical Request Handler for Modifying the Index through\n  commands specified using XML, JSON, CSV, or JAVABIN\n\n  Note: Since solr1.1 requestHandlers requires a valid content\n  type header if posted in the body. For example, curl now\n  requires: -H 'Content-type:text/xml; charset=utf-8'\n\n  To override the request content type and force a specific\n  Content-type, use the request parameter:\n  ?update.contentType=text/csv\n\n  This handler will pick a response format to match the input\n  if the 'wt' parameter is not explicit\n  -->\n  <requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">\n    <!-- See below for information on defining\n    updateRequestProcessorChains that can be used by name\n    on each Update Request\n    -->\n    <!--\n    <lst name=\"defaults\">\n    <str name=\"update.chain\">dedupe</str>\n    </lst>\n    -->\n  </requestHandler>\n\n  <!-- Solr Cell Update Request Handler\n\n  http://wiki.apache.org/solr/ExtractingRequestHandler\n\n  -->\n  <requestHandler name=\"/update/extract\"\n                  startup=\"lazy\"\n                  class=\"solr.extraction.ExtractingRequestHandler\">\n    <lst name=\"defaults\">\n      <str name=\"lowernames\">true</str>\n      <str name=\"uprefix\">ignored_</str>\n\n      <!-- capture link hrefs but ignore div attributes -->\n      <str name=\"captureAttr\">true</str>\n      <str name=\"fmap.a\">links</str>\n      <str name=\"fmap.div\">ignored_</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- Field Analysis Request Handler\n\n  RequestHandler that provides much the same functionality as\n  analysis.jsp. Provides the ability to specify multiple field\n  types and field names in the same request and outputs\n  index-time and query-time analysis for each of them.\n\n  Request parameters are:\n  analysis.fieldname - field name whose analyzers are to be used\n\n  analysis.fieldtype - field type whose analyzers are to be used\n  analysis.fieldvalue - text for index-time analysis\n  q (or analysis.q) - text for query time analysis\n  analysis.showmatch (true|false) - When set to true and when\n  query analysis is performed, the produced tokens of the\n  field value analysis will be marked as \"matched\" for every\n  token that is produces by the query analysis\n  -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\"/>\n\n\n  <!-- Document Analysis Handler\n\n  http://wiki.apache.org/solr/AnalysisRequestHandler\n\n  An analysis handler that provides a breakdown of the analysis\n  process of provided documents. This handler expects a (single)\n  content stream with the following format:\n\n  <docs>\n  <doc>\n  <field name=\"id\">1</field>\n  <field name=\"name\">The Name</field>\n  <field name=\"text\">The Text Value</field>\n  </doc>\n  <doc>...</doc>\n  <doc>...</doc>\n  ...\n  </docs>\n\n  Note: Each document must contain a field which serves as the\n  unique key. This key is used in the returned response to associate\n  an analysis breakdown to the analyzed document.\n\n  Like the FieldAnalysisRequestHandler, this handler also supports\n  query analysis by sending either an \"analysis.query\" or \"q\"\n  request parameter that holds the query text to be analyzed. It\n  also supports the \"analysis.showmatch\" parameter which when set to\n  true, all field tokens that match the query tokens will be marked\n  as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\"/>\n\n  <!-- Admin Handlers\n\n  Admin Handlers - This will register all the standard admin\n  RequestHandlers.\n  -->\n  <requestHandler name=\"/admin/\"\n                  class=\"solr.admin.AdminHandlers\"/>\n  <!-- This single handler is equivalent to the following... -->\n  <!--\n  <requestHandler name=\"/admin/luke\"       class=\"solr.admin.LukeRequestHandler\" />\n  <requestHandler name=\"/admin/system\"     class=\"solr.admin.SystemInfoHandler\" />\n  <requestHandler name=\"/admin/plugins\"    class=\"solr.admin.PluginInfoHandler\" />\n  <requestHandler name=\"/admin/threads\"    class=\"solr.admin.ThreadDumpHandler\" />\n  <requestHandler name=\"/admin/properties\" class=\"solr.admin.PropertiesRequestHandler\" />\n  <requestHandler name=\"/admin/file\"       class=\"solr.admin.ShowFileRequestHandler\" >\n  -->\n  <!-- If you wish to hide files under ${solr.home}/conf, explicitly\n  register the ShowFileRequestHandler using the definition below.\n  NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will\n  not exclude all files ending in '.xml'. Use it to exclude _all_ updates\n  -->\n  <!--\n  <requestHandler name=\"/admin/file\"\n  class=\"solr.admin.ShowFileRequestHandler\" >\n  <lst name=\"invariants\">\n  <str name=\"hidden\">synonyms.txt</str>\n  <str name=\"hidden\">anotherfile.txt</str>\n  <str name=\"hidden\">*</str>\n  </lst>\n  </requestHandler>\n  -->\n\n  <!--\n  Enabling this request handler (which is NOT a default part of the admin handler) will allow the Solr UI to edit\n  all the config files. This is intended for secure/development use ONLY! Leaving available and publically\n  accessible is a security vulnerability and should be done with extreme caution!\n  -->\n  <!--\n  <requestHandler name=\"/admin/fileedit\" class=\"solr.admin.EditFileRequestHandler\" >\n  <lst name=\"invariants\">\n  <str name=\"hidden\">synonyms.txt</str>\n  <str name=\"hidden\">anotherfile.txt</str>\n  </lst>\n  </requestHandler>\n  -->\n  <!-- ping/healthcheck -->\n  <requestHandler name=\"/admin/ping\" class=\"solr.PingRequestHandler\">\n    <lst name=\"invariants\">\n      <str name=\"q\">solrpingquery</str>\n    </lst>\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">all</str>\n    </lst>\n    <!-- An optional feature of the PingRequestHandler is to configure the\n    handler with a \"healthcheckFile\" which can be used to enable/disable\n    the PingRequestHandler.\n    relative paths are resolved against the data dir\n    -->\n    <!-- <str name=\"healthcheckFile\">server-enabled.txt</str> -->\n  </requestHandler>\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n  <!-- Solr Replication\n\n  The SolrReplicationHandler supports replicating indexes from a\n  \"master\" used for indexing and \"slaves\" used for queries.\n\n  http://wiki.apache.org/solr/SolrReplication\n\n  It is also necessary for SolrCloud to function (in Cloud mode, the\n  replication handler is used to bulk transfer segments when nodes\n  are added or need to recover).\n\n  https://wiki.apache.org/solr/SolrCloud/\n  -->\n  <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n    <!--\n    To enable simple master/slave replication, uncomment one of the\n    sections below, depending on whether this solr instance should be\n    the \"master\" or a \"slave\".  If this instance is a \"slave\" you will\n    also need to fill in the masterUrl to point to a real machine.\n    -->\n    <!--\n    <lst name=\"master\">\n    <str name=\"replicateAfter\">commit</str>\n    <str name=\"replicateAfter\">startup</str>\n    <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n    </lst>\n    -->\n    <!--\n    <lst name=\"slave\">\n    <str name=\"masterUrl\">http://your-master-hostname:8983/solr</str>\n    <str name=\"pollInterval\">00:00:60</str>\n    </lst>\n    -->\n  </requestHandler>\n\n  <!-- Search Components\n\n  Search components are registered to SolrCore and used by\n  instances of SearchHandler (which can access them by name)\n\n  By default, the following components are available:\n\n  <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n  <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n  <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n  <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n  <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n  <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n  Default configuration in a requestHandler would look like:\n\n  <arr name=\"components\">\n  <str>query</str>\n  <str>facet</str>\n  <str>mlt</str>\n  <str>highlight</str>\n  <str>stats</str>\n  <str>debug</str>\n  </arr>\n\n  If you register a searchComponent to one of the standard names,\n  that will be used instead of the default.\n\n  To insert components before or after the 'standard' components, use:\n\n  <arr name=\"first-components\">\n  <str>myFirstComponentName</str>\n  </arr>\n\n  <arr name=\"last-components\">\n  <str>myLastComponentName</str>\n  </arr>\n\n  NOTE: The component registered with the name \"debug\" will\n  always be executed after the \"last-components\"\n\n  -->\n\n  <!-- Spell Check\n\n  The spell check component can return a list of alternative spelling\n  suggestions.\n\n  http://wiki.apache.org/solr/SpellCheckComponent\n  -->\n  <searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">\n\n    <str name=\"queryAnalyzerFieldType\">key_lower_case</str>\n\n    <!-- Multiple \"Spell Checkers\" can be declared and used by this\n    component\n    -->\n\n    <!-- a spellchecker built from a field of the main index -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">default</str>\n      <str name=\"field\">text</str>\n      <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->\n      <str name=\"distanceMeasure\">internal</str>\n      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->\n      <float name=\"accuracy\">0.5</float>\n      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->\n      <int name=\"maxEdits\">2</int>\n      <!-- the minimum shared prefix when enumerating terms -->\n      <int name=\"minPrefix\">1</int>\n      <!-- maximum number of inspections per result. -->\n      <int name=\"maxInspections\">5</int>\n      <!-- minimum length of a query term to be considered for correction -->\n      <int name=\"minQueryLength\">4</int>\n      <!-- maximum threshold of documents a query term can appear to be considered for correction -->\n      <float name=\"maxQueryFrequency\">0.01</float>\n      <!-- uncomment this to require suggestions to occur in 1% of the documents\n      <float name=\"thresholdTokenFrequency\">.01</float>\n      -->\n    </lst>\n\n    <!-- a spellchecker that can break or combine words.  See \"/spell\" handler below for usage -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">wordbreak</str>\n      <str name=\"classname\">solr.WordBreakSolrSpellChecker</str>\n      <str name=\"field\">name</str>\n      <str name=\"combineWords\">true</str>\n      <str name=\"breakWords\">true</str>\n      <int name=\"maxChanges\">10</int>\n    </lst>\n\n    <!-- a spellchecker that uses a different distance measure -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"name\">jarowinkler</str>\n    <str name=\"field\">spell</str>\n    <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n    <str name=\"distanceMeasure\">\n    org.apache.lucene.search.spell.JaroWinklerDistance\n    </str>\n    </lst>\n    -->\n\n    <!-- a spellchecker that use an alternate comparator\n\n    comparatorClass be one of:\n    1. score (default)\n    2. freq (Frequency first, then score)\n    3. A fully qualified class name\n    -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"name\">freq</str>\n    <str name=\"field\">lowerfilt</str>\n    <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n    <str name=\"comparatorClass\">freq</str>\n    -->\n\n    <!-- A spellchecker that reads the list of words from a file -->\n    <!--\n    <lst name=\"spellchecker\">\n    <str name=\"classname\">solr.FileBasedSpellChecker</str>\n    <str name=\"name\">file</str>\n    <str name=\"sourceLocation\">spellings.txt</str>\n    <str name=\"characterEncoding\">UTF-8</str>\n    <str name=\"spellcheckIndexDir\">spellcheckerFile</str>\n    </lst>\n    -->\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the spellcheck component.\n\n  NOTE: This is purely as an example.  The whole purpose of the\n  SpellCheckComponent is to hook it into the request handler that\n  handles your normal user queries so that a separate request is\n  not needed to get suggestions.\n\n  IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS\n  NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!\n\n  See http://wiki.apache.org/solr/SpellCheckComponent for details\n  on the request parameters.\n  -->\n  <requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <!-- Solr will use suggestions from both the 'default' spellchecker\n      and from the 'wordbreak' spellchecker and combine them.\n      collations (re-written queries) can include a combination of\n      corrections from both spellcheckers -->\n      <str name=\"spellcheck.dictionary\">default</str>\n      <str name=\"spellcheck.dictionary\">wordbreak</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.extendedResults\">true</str>\n      <str name=\"spellcheck.count\">10</str>\n      <str name=\"spellcheck.alternativeTermCount\">5</str>\n      <str name=\"spellcheck.maxResultsForSuggest\">5</str>\n      <str name=\"spellcheck.collate\">true</str>\n      <str name=\"spellcheck.collateExtendedResults\">true</str>\n      <str name=\"spellcheck.maxCollationTries\">10</str>\n      <str name=\"spellcheck.maxCollations\">5</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheck</str>\n    </arr>\n  </requestHandler>\n\n  <searchComponent name=\"suggest\" class=\"solr.SuggestComponent\">\n    <lst name=\"suggester\">\n      <str name=\"name\">mySuggester</str>\n      <str name=\"lookupImpl\">FuzzyLookupFactory</str>      <!-- org.apache.solr.spelling.suggest.fst -->\n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>    <!-- org.apache.solr.spelling.suggest.HighFrequencyDictionaryFactory -->\n      <str name=\"field\">cat</str>\n      <str name=\"weightField\">price</str>\n      <str name=\"suggestAnalyzerFieldType\">string</str>\n    </lst>\n  </searchComponent>\n\n  <requestHandler name=\"/suggest\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"suggest\">true</str>\n      <str name=\"suggest.count\">10</str>\n    </lst>\n    <arr name=\"components\">\n      <str>suggest</str>\n    </arr>\n  </requestHandler>\n  <!-- Term Vector Component\n\n  http://wiki.apache.org/solr/TermVectorComponent\n  -->\n  <searchComponent name=\"tvComponent\" class=\"solr.TermVectorComponent\"/>\n\n  <!-- A request handler for demonstrating the term vector component\n\n  This is purely as an example.\n\n  In reality you will likely want to add the component to your\n  already specified request handlers.\n  -->\n  <requestHandler name=\"/tvrh\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <bool name=\"tv\">true</bool>\n    </lst>\n    <arr name=\"last-components\">\n      <str>tvComponent</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Clustering Component\n\n  You'll need to set the solr.clustering.enabled system property\n  when running solr to run with clustering enabled:\n\n  java -Dsolr.clustering.enabled=true -jar start.jar\n\n  http://wiki.apache.org/solr/ClusteringComponent\n  http://carrot2.github.io/solr-integration-strategies/\n  -->\n  <searchComponent name=\"clustering\"\n                   enable=\"${solr.clustering.enabled:false}\"\n                   class=\"solr.clustering.ClusteringComponent\">\n    <lst name=\"engine\">\n      <str name=\"name\">lingo</str>\n\n      <!-- Class name of a clustering algorithm compatible with the Carrot2 framework.\n\n      Currently available open source algorithms are:\n      * org.carrot2.clustering.lingo.LingoClusteringAlgorithm\n      * org.carrot2.clustering.stc.STCClusteringAlgorithm\n      * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm\n\n      See http://project.carrot2.org/algorithms.html for more information.\n\n      A commercial algorithm Lingo3G (needs to be installed separately) is defined as:\n      * com.carrotsearch.lingo3g.Lingo3GClusteringAlgorithm\n      -->\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>\n\n      <!-- Override location of the clustering algorithm's resources\n      (attribute definitions and lexical resources).\n\n      A directory from which to load algorithm-specific stop words,\n      stop labels and attribute definition XMLs.\n\n      For an overview of Carrot2 lexical resources, see:\n      http://download.carrot2.org/head/manual/#chapter.lexical-resources\n\n      For an overview of Lingo3G lexical resources, see:\n      http://download.carrotsearch.com/lingo3g/manual/#chapter.lexical-resources\n      -->\n      <str name=\"carrot.resourcesDir\">clustering/carrot2</str>\n    </lst>\n\n    <!-- An example definition for the STC clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">stc</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>\n    </lst>\n\n    <!-- An example definition for the bisecting kmeans clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">kmeans</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm</str>\n    </lst>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the clustering component\n\n  This is purely as an example.\n\n  In reality you will likely want to add the component to your\n  already specified request handlers.\n  -->\n  <requestHandler name=\"/clustering\"\n                  startup=\"lazy\"\n                  enable=\"${solr.clustering.enabled:false}\"\n                  class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <bool name=\"clustering\">true</bool>\n      <bool name=\"clustering.results\">true</bool>\n      <!-- Field name with the logical \"title\" of a each document (optional) -->\n      <str name=\"carrot.title\">name</str>\n      <!-- Field name with the logical \"URL\" of a each document (optional) -->\n      <str name=\"carrot.url\">id</str>\n      <!-- Field name with the logical \"content\" of a each document (optional) -->\n      <str name=\"carrot.snippet\">features</str>\n      <!-- Apply highlighter to the title/ content and use this for clustering. -->\n      <bool name=\"carrot.produceSummary\">true</bool>\n      <!-- the maximum number of labels per cluster -->\n      <!--<int name=\"carrot.numDescriptions\">5</int>-->\n      <!-- produce sub clusters -->\n      <bool name=\"carrot.outputSubClusters\">false</bool>\n\n      <!-- Configure the remaining request handler parameters. -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"qf\">\n        text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4\n      </str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>clustering</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Terms Component\n\n  http://wiki.apache.org/solr/TermsComponent\n\n  A component to return terms and document frequency of those\n  terms\n  -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n\n  <!-- Query Elevation Component\n\n  http://wiki.apache.org/solr/QueryElevationComponent\n\n  a search component that enables you to configure the top\n  results for a given query regardless of the normal lucene\n  scoring.\n  -->\n  <searchComponent name=\"elevator\" class=\"solr.QueryElevationComponent\">\n    <!-- pick a fieldType to analyze queries -->\n    <str name=\"queryFieldType\">string</str>\n    <str name=\"config-file\">elevate.xml</str>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the elevator component -->\n  <requestHandler name=\"/elevate\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"df\">text</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>elevator</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Highlighting Component\n\n  http://wiki.apache.org/solr/HighlightingParameters\n  -->\n  <searchComponent class=\"solr.HighlightComponent\" name=\"highlight\">\n    <highlighting>\n      <!-- Configure the standard fragmenter -->\n      <!-- This could most likely be commented out in the \"default\" case -->\n      <fragmenter name=\"gap\"\n                  default=\"true\"\n                  class=\"solr.highlight.GapFragmenter\">\n        <lst name=\"defaults\">\n          <int name=\"hl.fragsize\">100</int>\n        </lst>\n      </fragmenter>\n\n      <!-- A regular-expression-based fragmenter\n      (for sentence extraction)\n      -->\n      <fragmenter name=\"regex\"\n                  class=\"solr.highlight.RegexFragmenter\">\n        <lst name=\"defaults\">\n          <!-- slightly smaller fragsizes work better because of slop -->\n          <int name=\"hl.fragsize\">70</int>\n          <!-- allow 50% slop on fragment sizes -->\n          <float name=\"hl.regex.slop\">0.5</float>\n          <!-- a basic sentence pattern -->\n          <str name=\"hl.regex.pattern\">[-\\w ,/\\n\\&amp;quot;&amp;apos;]{20,200}</str>\n        </lst>\n      </fragmenter>\n\n      <!-- Configure the standard formatter -->\n      <formatter name=\"html\"\n                 default=\"true\"\n                 class=\"solr.highlight.HtmlFormatter\">\n        <lst name=\"defaults\">\n          <str name=\"hl.simple.pre\"><![CDATA[<em>]]></str>\n          <str name=\"hl.simple.post\"><![CDATA[</em>]]></str>\n        </lst>\n      </formatter>\n\n      <!-- Configure the standard encoder -->\n      <encoder name=\"html\"\n               class=\"solr.highlight.HtmlEncoder\"/>\n\n      <!-- Configure the standard fragListBuilder -->\n      <fragListBuilder name=\"simple\"\n                       class=\"solr.highlight.SimpleFragListBuilder\"/>\n\n      <!-- Configure the single fragListBuilder -->\n      <fragListBuilder name=\"single\"\n                       class=\"solr.highlight.SingleFragListBuilder\"/>\n\n      <!-- Configure the weighted fragListBuilder -->\n      <fragListBuilder name=\"weighted\"\n                       default=\"true\"\n                       class=\"solr.highlight.WeightedFragListBuilder\"/>\n\n      <!-- default tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"default\"\n                        default=\"true\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <!--\n        <lst name=\"defaults\">\n        <str name=\"hl.multiValuedSeparatorChar\">/</str>\n        </lst>\n        -->\n      </fragmentsBuilder>\n\n      <!-- multi-colored tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"colored\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <lst name=\"defaults\">\n          <str name=\"hl.tag.pre\"><![CDATA[\n  <b style=\"background:yellow\">,<b style=\"background:lawgreen\">,\n  <b style=\"background:aquamarine\">,<b style=\"background:magenta\">,\n  <b style=\"background:palegreen\">,<b style=\"background:coral\">,\n  <b style=\"background:wheat\">,<b style=\"background:khaki\">,\n  <b style=\"background:lime\">,<b style=\"background:deepskyblue\">]]></str>\n          <str name=\"hl.tag.post\"><![CDATA[</b>]]></str>\n        </lst>\n      </fragmentsBuilder>\n\n      <boundaryScanner name=\"default\"\n                       default=\"true\"\n                       class=\"solr.highlight.SimpleBoundaryScanner\">\n        <lst name=\"defaults\">\n          <str name=\"hl.bs.maxScan\">10</str>\n          <str name=\"hl.bs.chars\">.,!? &amp;#9;&amp;#10;&amp;#13;</str>\n        </lst>\n      </boundaryScanner>\n\n      <boundaryScanner name=\"breakIterator\"\n                       class=\"solr.highlight.BreakIteratorBoundaryScanner\">\n        <lst name=\"defaults\">\n          <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->\n          <str name=\"hl.bs.type\">WORD</str>\n          <!-- language and country are used when constructing Locale object.  -->\n          <!-- And the Locale object will be used when getting instance of BreakIterator -->\n          <str name=\"hl.bs.language\">en</str>\n          <str name=\"hl.bs.country\">US</str>\n        </lst>\n      </boundaryScanner>\n    </highlighting>\n  </searchComponent>\n\n  <!-- Update Processors\n\n  Chains of Update Processor Factories for dealing with Update\n  Requests can be declared, and then used by name in Update\n  Request Processors\n\n  http://wiki.apache.org/solr/UpdateRequestProcessor\n\n  -->\n\n  <!-- Add unknown fields to the schema\n\n  An example field type guessing update processor that will\n  attempt to parse string-typed field values as Booleans, Longs,\n  Doubles, or Dates, and then add schema fields with the guessed\n  field types.\n\n  This requires that the schema is both managed and mutable, by\n  declaring schemaFactory as ManagedIndexSchemaFactory, with\n  mutable specified as true.\n\n  See http://wiki.apache.org/solr/GuessingFieldTypes\n  -->\n  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\">\n\n    <processor class=\"solr.DefaultValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_ttl_</str>\n      <str name=\"value\">+{{logsearch_audit_logs_max_retention}}DAYS</str>\n    </processor>\n    <processor class=\"solr.processor.DocExpirationUpdateProcessorFactory\">\n      <int name=\"autoDeletePeriodSeconds\">30</int>\n      <str name=\"ttlFieldName\">_ttl_</str>\n      <str name=\"expirationFieldName\">_expire_at_</str>\n    </processor>\n    <processor class=\"solr.FirstFieldValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_expire_at_</str>\n    </processor>\n\n\n    <processor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseLongFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDateFieldUpdateProcessorFactory\">\n      <arr name=\"format\">\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ssZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss</str>\n        <str>yyyy-MM-dd'T'HH:mmZ</str>\n        <str>yyyy-MM-dd'T'HH:mm</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd HH:mm:ssZ</str>\n        <str>yyyy-MM-dd HH:mm:ss</str>\n        <str>yyyy-MM-dd HH:mmZ</str>\n        <str>yyyy-MM-dd HH:mm</str>\n        <str>yyyy-MM-dd</str>\n      </arr>\n    </processor>\n    <processor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\">\n      <str name=\"defaultFieldType\">key_lower_case</str>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Boolean</str>\n        <str name=\"fieldType\">boolean</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.util.Date</str>\n        <str name=\"fieldType\">tdate</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Long</str>\n        <str name=\"valueClass\">java.lang.Integer</str>\n        <str name=\"fieldType\">tlong</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Number</str>\n        <str name=\"fieldType\">tdouble</str>\n      </lst>\n    </processor>\n\n    <processor class=\"solr.LogUpdateProcessorFactory\"/>\n    <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  </updateRequestProcessorChain>\n\n\n  <!-- Deduplication\n\n  An example dedup update processor that creates the \"id\" field\n  on the fly based on the hash code of some other fields.  This\n  example has overwriteDupes set to false since we are using the\n  id field as the signatureField and Solr will maintain\n  uniqueness based on that anyway.\n\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"dedupe\">\n  <processor class=\"solr.processor.SignatureUpdateProcessorFactory\">\n  <bool name=\"enabled\">true</bool>\n  <str name=\"signatureField\">id</str>\n  <bool name=\"overwriteDupes\">false</bool>\n  <str name=\"fields\">name,features,cat</str>\n  <str name=\"signatureClass\">solr.processor.Lookup3Signature</str>\n  </processor>\n  <processor class=\"solr.LogUpdateProcessorFactory\" />\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Language identification\n\n  This example update chain identifies the language of the incoming\n  documents using the langid contrib. The detected language is\n  written to field language_s. No field name mapping is done.\n  The fields used for detection are text, title, subject and description,\n  making this example suitable for detecting languages form full-text\n  rich documents injected via ExtractingRequestHandler.\n  See more about langId at http://wiki.apache.org/solr/LanguageDetection\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"langid\">\n  <processor class=\"org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory\">\n  <str name=\"langid.fl\">text,title,subject,description</str>\n  <str name=\"langid.langField\">language_s</str>\n  <str name=\"langid.fallback\">en</str>\n  </processor>\n  <processor class=\"solr.LogUpdateProcessorFactory\" />\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Script update processor\n\n  This example hooks in an update processor implemented using JavaScript.\n\n  See more about the script update processor at http://wiki.apache.org/solr/ScriptUpdateProcessor\n  -->\n  <!--\n  <updateRequestProcessorChain name=\"script\">\n  <processor class=\"solr.StatelessScriptUpdateProcessorFactory\">\n  <str name=\"script\">update-script.js</str>\n  <lst name=\"params\">\n  <str name=\"config_param\">example config parameter</str>\n  </lst>\n  </processor>\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n  </updateRequestProcessorChain>\n  -->\n\n  <!-- Response Writers\n\n  http://wiki.apache.org/solr/QueryResponseWriter\n\n  Request responses will be written using the writer specified by\n  the 'wt' request parameter matching the name of a registered\n  writer.\n\n  The \"default\" writer is the default and will be used if 'wt' is\n  not specified in the request.\n  -->\n  <!-- The following response writers are implicitly configured unless\n  overridden...\n  -->\n  <!--\n  <queryResponseWriter name=\"xml\"\n  default=\"true\"\n  class=\"solr.XMLResponseWriter\" />\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\"/>\n  <queryResponseWriter name=\"python\" class=\"solr.PythonResponseWriter\"/>\n  <queryResponseWriter name=\"ruby\" class=\"solr.RubyResponseWriter\"/>\n  <queryResponseWriter name=\"php\" class=\"solr.PHPResponseWriter\"/>\n  <queryResponseWriter name=\"phps\" class=\"solr.PHPSerializedResponseWriter\"/>\n  <queryResponseWriter name=\"csv\" class=\"solr.CSVResponseWriter\"/>\n  <queryResponseWriter name=\"schema.xml\" class=\"solr.SchemaXmlResponseWriter\"/>\n  -->\n\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">\n    <!-- For the purposes of the tutorial, JSON responses are written as\n    plain text so that they are easy to read in *any* browser.\n    If you expect a MIME type of \"application/json\" just remove this override.\n    -->\n    <str name=\"content-type\">text/plain; charset=UTF-8</str>\n  </queryResponseWriter>\n\n  <!--\n  Custom response writers can be declared as needed...\n  -->\n  <queryResponseWriter name=\"velocity\" class=\"solr.VelocityResponseWriter\" startup=\"lazy\">\n    <str name=\"template.base.dir\">${velocity.template.base.dir:}</str>\n  </queryResponseWriter>\n\n  <!-- XSLT response writer transforms the XML output by any xslt file found\n  in Solr's conf/xslt directory.  Changes to xslt files are checked for\n  every xsltCacheLifetimeSeconds.\n  -->\n  <queryResponseWriter name=\"xslt\" class=\"solr.XSLTResponseWriter\">\n    <int name=\"xsltCacheLifetimeSeconds\">5</int>\n  </queryResponseWriter>\n\n  <!-- Query Parsers\n\n  http://wiki.apache.org/solr/SolrQuerySyntax\n\n  Multiple QParserPlugins can be registered by name, and then\n  used in either the \"defType\" param for the QueryComponent (used\n  by SearchHandler) or in LocalParams\n  -->\n  <!-- example of registering a query parser -->\n  <!--\n  <queryParser name=\"myparser\" class=\"com.mycompany.MyQParserPlugin\"/>\n  -->\n  <queryParser name=\"xmlparser\" class=\"solr.ExtendedDismaxQParserPlugin\" />\n\n  <!-- Function Parsers\n\n  http://wiki.apache.org/solr/FunctionQuery\n\n  Multiple ValueSourceParsers can be registered by name, and then\n  used as function names when using the \"func\" QParser.\n  -->\n  <!-- example of registering a custom function parser  -->\n  <!--\n  <valueSourceParser name=\"myfunc\"\n  class=\"com.mycompany.MyValueSourceParser\" />\n  -->\n\n\n  <!-- Document Transformers\n  http://wiki.apache.org/solr/DocTransformers\n  -->\n  <!--\n  Could be something like:\n  <transformer name=\"db\" class=\"com.mycompany.LoadFromDatabaseTransformer\" >\n  <int name=\"connection\">jdbc://....</int>\n  </transformer>\n\n  To add a constant value to all docs, use:\n  <transformer name=\"mytrans2\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n  <int name=\"value\">5</int>\n  </transformer>\n\n  If you want the user to still be able to change it with _value:something_ use this:\n  <transformer name=\"mytrans3\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n  <double name=\"defaultValue\">5</double>\n  </transformer>\n\n  If you are using the QueryElevationComponent, you may wish to mark documents that get boosted.  The\n  EditorialMarkerFactory will do exactly that:\n  <transformer name=\"qecBooster\" class=\"org.apache.solr.response.transform.EditorialMarkerFactory\" />\n  -->\n\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>"
        }
      }
    },
    {
      "nifi-registry-env" : {
        "properties_attributes" : { },
        "properties" : {
          "nifi_registry_log_dir" : "/var/log/nifi-registry",
          "nifi_registry_group" : "nifiregistry",
          "nifi_registry_pid_dir" : "/var/run/nifi-registry",
          "nifi_registry_user" : "nifiregistry",
          "content" : "\n            #!/bin/sh\n            #\n            #    Licensed to the Apache Software Foundation (ASF) under one or more\n            #    contributor license agreements.  See the NOTICE file distributed with\n            #    this work for additional information regarding copyright ownership.\n            #    The ASF licenses this file to You under the Apache License, Version 2.0\n            #    (the \"License\"); you may not use this file except in compliance with\n            #    the License.  You may obtain a copy of the License at\n            #\n            #       http://www.apache.org/licenses/LICENSE-2.0\n            #\n            #    Unless required by applicable law or agreed to in writing, software\n            #    distributed under the License is distributed on an \"AS IS\" BASIS,\n            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            #    See the License for the specific language governing permissions and\n            #    limitations under the License.\n            #\n\n            # The java implementation to use.\n            export JAVA_HOME={{jdk64_home}}\n\n            export NIFI_REGISTRY_HOME={{nifi_registry_install_dir}}\n\n            #The directory for the NiFi pid file\n            export NIFI_REGISTRY_PID_DIR=\"{{nifi_registry_pid_dir}}\"\n\n            #The directory for NiFi log files\n            export NIFI_LOG_DIR=\"{{nifi_registry_log_dir}}\""
        }
      }
    }
  ],
  "host_groups" : [
    {
      "components" : [
        {
          "name" : "KAFKA_BROKER"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "NIFI_MASTER"
        },
        {
          "name" : "INFRA_SOLR_CLIENT"
        },
        {
          "name" : "LOGSEARCH_LOGFEEDER"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_S1",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "REGISTRY_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "SUPERVISOR"
        },
        {
          "name" : "INFRA_SOLR_CLIENT"
        },
        {
          "name" : "LOGSEARCH_SERVER"
        },
        {
          "name" : "NIFI_CA"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "NIFI_REGISTRY_MASTER"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "STREAMLINE_SERVER"
        },
        {
          "name" : "NIFI_MASTER"
        },
        {
          "name" : "INFRA_SOLR"
        },
        {
          "name" : "LOGSEARCH_LOGFEEDER"
        },
        {
          "name" : "METRICS_GRAFANA"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_M1",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "STORM_UI_SERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "NIFI_MASTER"
        },
        {
          "name" : "INFRA_SOLR_CLIENT"
        },
        {
          "name" : "LOGSEARCH_LOGFEEDER"
        },
        {
          "name" : "NIMBUS"
        },
        {
          "name" : "DRPC_SERVER"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "METRICS_COLLECTOR"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_S2",
      "cardinality" : "1"
    }
  ],
  "settings" : [
    {
      "recovery_settings" : [
        {
          "recovery_enabled" : "true"
        }
      ]
    },
    {
      "service_settings" : [
        {
          "name" : "LOGSEARCH",
          "credential_store_enabled" : "true"
        },
        {
          "recovery_enabled" : "true",
          "name" : "AMBARI_METRICS"
        }
      ]
    },
    {
      "component_settings" : [
        {
          "recovery_enabled" : "true",
          "name" : "METRICS_COLLECTOR"
        }
      ]
    }
  ],
  "Blueprints" : {
    "blueprint_name": "multi-node-hdf",
    "stack_name" : "HDF",
    "stack_version" : "3.1"
  }
}
